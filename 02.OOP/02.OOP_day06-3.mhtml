From: <Saved by Blink>
Subject: EXERCISE
Date: Thu, 15 Mar 2017 04:47:49 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0----"

------MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0----
Content-Type: text/html
Content-ID: <frame-300-7d668fb4-ce9e-44d9-a923-d70d5edb8dae@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html

<html xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta http-equiv=3D"Cont=
ent-Type" content=3D"text/html; charset=3DUTF-8">=20
  <title>EXERCISE</title>=20
  =20
  =20
  =20
  =20
  <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/tts=
Page/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index.files/index.css" rel=3D"Sty=
lesheet">=20
  <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/tts=
Page/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index.files/jquery.snippet.css" r=
el=3D"Stylesheet">=20
 </head>=20
 <body>=20
  <div class=3D"source_style_exercise">=20
   <div>=20
    <h3>1 =E8=AF=B7=E7=9C=8B=E4=B8=8B=E5=88=97=E4=BB=A3=E7=A0=81=EF=BC=9A</=
h3>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D""><pr=
e style=3D"display: none;"><a class=3D"snippet-copy sh_url" href=3D"http://=
pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01=
/index_answer.html#" style=3D"display: none;">copy</a><a class=3D"snippet-t=
ext sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a class=3D"snippet=
-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/=
JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a></pre></div><=
pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><ol class=
=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <span class=
=3D"sh_keyword">class</span> SuperClass <span class=3D"sh_cbracket">{</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> =
<span class=3D"sh_keyword">static</span> void <span class=3D"sh_function">m=
ain</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">=
String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symb=
ol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SuperClass sup<span class=3D"sh_symbol">=3D<=
/span><span class=3D"sh_keyword">new</span> <span class=3D"sh_function">Sup=
erClass</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SubClass sub<span class=3D"sh_symbol">=3D</=
span><span class=3D"sh_keyword">new</span> <span class=3D"sh_function">SubC=
lass</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SuperClass supSub<span class=3D"sh_symbol">=3D=
</span><span class=3D"sh_keyword">new</span> <span class=3D"sh_function">Su=
bClass</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbrac=
ket">}</span></li><li><span class=3D"sh_keyword">class</span> SubClass <spa=
n class=3D"sh_keyword">extends</span> SuperClass<span class=3D"sh_cbracket"=
>{</span></li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre =
class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">public cla=
ss SuperClass {
	public static void main(String[] args) {
		SuperClass sup=3Dnew SuperClass();
		SubClass sub=3Dnew SubClass();
		SuperClass supSub=3Dnew SubClass();
	}
}
class SubClass extends SuperClass{
}
</pre></div></div>=20
    <p>=E6=A0=B9=E6=8D=AE=E4=B8=8A=E8=BF=B0=E4=BB=A3=E7=A0=81=EF=BC=8C=E5=
=88=A4=E6=96=AD=E4=B8=8B=E5=88=97=E9=80=89=E9=A1=B9=E4=B8=AD=EF=BC=8C=E8=B5=
=8B=E5=80=BC=E8=AF=AD=E5=8F=A5=E9=94=99=E8=AF=AF=E7=9A=84=E6=98=AF=EF=BC=9A=
</p>=20
    <p>A. sup=3Dsub;</p>=20
    <p>B. sub=3Dsup;</p>=20
    <p>C. supSub=3Dsub;</p>=20
    <p>D. supSub=3Dsup;</p>=20
    <p class=3D"answerTitle">=E5=8F=82=E8=80=83=E7=AD=94=E6=A1=88</p>=20
    <p>B =E9=80=89=E9=A1=B9=E7=9A=84=E8=B5=8B=E5=80=BC=E8=AF=AD=E5=8F=A5=E6=
=98=AF=E9=94=99=E8=AF=AF=E7=9A=84=E3=80=82</p>=20
    <p>=E8=BF=99=E6=98=AF=E5=9B=A0=E4=B8=BA=EF=BC=8C=E4=B8=80=E4=B8=AA=E7=
=B1=BB=E7=9A=84=E5=AF=B9=E8=B1=A1=E5=8F=AF=E4=BB=A5=E5=90=91=E4=B8=8A=E9=80=
=A0=E5=9E=8B=E7=9A=84=E7=B1=BB=E5=9E=8B=E6=9C=89=EF=BC=9A=E7=88=B6=E7=B1=BB=
=E7=9A=84=E7=B1=BB=E5=9E=8B=E6=88=96=E6=98=AF=E5=85=B6=E5=AE=9E=E7=8E=B0=E7=
=9A=84=E6=8E=A5=E5=8F=A3=E7=B1=BB=E5=9E=8B=EF=BC=8C=E8=80=8CB=E9=80=89=E9=
=A1=B9=E5=B0=86sup=EF=BC=88SuperClass=E7=B1=BB=E5=9E=8B=EF=BC=89=E7=9B=B4=
=E6=8E=A5=E8=B5=8B=E5=80=BC=E7=BB=99sub(SubClass=E7=B1=BB=E5=9E=8B)=EF=BC=
=8C=E5=B1=9E=E4=BA=8E=E5=90=91=E4=B8=8B=E9=80=A0=E5=9E=8B=EF=BC=8C=E5=90=91=
=E4=B8=8B=E9=80=A0=E5=9E=8B=E8=A6=81=E4=BD=BF=E7=94=A8=E5=BC=BA=E5=88=B6=E7=
=B1=BB=E5=9E=8B=E8=BD=AC=E6=8D=A2=EF=BC=8C=E5=8D=B3=E4=BB=A3=E7=A0=81=E6=94=
=B9=E4=B8=BA=EF=BC=9Asub=3D(SubClass)sup; =E6=9D=A5=E5=AE=9E=E7=8E=B0=E5=90=
=91=E4=B8=8B=E9=80=A0=E5=9E=8B=E3=80=82</p>=20
   </div>=20
   <div>=20
    <h3>2 =E5=B0=84=E5=87=BB=E6=B8=B8=E6=88=8F</h3>=20
    <p>=E7=8E=B0=E6=9C=89=E4=B8=80=E4=B8=AA=E5=B0=84=E5=87=BB=E6=B8=B8=E6=
=88=8F=E4=B8=AD=E7=9A=84=E5=9C=BA=E6=99=AF=E5=A6=82=E5=9B=BE- 1=E6=89=80=E7=
=A4=BA=E3=80=82=E5=9C=A8=E5=9B=BE- 1=E4=B8=AD=E6=9C=89=E9=A3=9E=E6=9C=BA=E3=
=80=81=E8=9C=9C=E8=9C=82=EF=BC=8C=E8=BF=99=E4=B8=A4=E7=A7=8D=E9=A3=9E=E8=A1=
=8C=E7=89=A9=E9=83=BD=E5=8F=AF=E4=BB=A5=E8=A2=AB=E7=82=AE=E5=BC=B9=E5=87=BB=
=E4=B8=AD=E3=80=82=E5=A6=82=E6=9E=9C=E5=87=BB=E4=B8=AD=E7=9A=84=E6=98=AF=E6=
=95=8C=E4=BA=BA=EF=BC=88=E5=8D=B3=E9=A3=9E=E6=9C=BA)=EF=BC=8C=E5=88=99=E8=
=8E=B7=E5=BE=975=E5=88=86=EF=BC=9B=E5=A6=82=E6=9E=9C=E5=87=BB=E4=B8=AD=E7=
=9A=84=E6=98=AF=E8=9C=9C=E8=9C=82=E5=88=99=E8=8E=B7=E5=BE=97=E5=A5=96=E5=8A=
=B1=E3=80=82=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E8=AF=A6=E7=BB=86=E9=9C=80=
=E6=B1=82=E5=A6=82=E4=B8=8B=EF=BC=9A</p>=20
    <p>1. =E5=A5=96=E5=8A=B1=E6=9C=89=E4=B8=A4=E7=A7=8D=E7=B1=BB=E5=9E=8B=
=EF=BC=8C=E4=B8=80=E7=A7=8D=E5=A5=96=E5=8A=B1=E4=B8=BA=E5=8F=8C=E5=80=8D=E7=
=81=AB=E5=8A=9B=E3=80=81=E5=8F=A6=E4=B8=80=E7=A7=8D=E5=A5=96=E5=8A=B1=E4=B8=
=BA=E6=89=8B=E5=BC=B9=E3=80=82</p>=20
    <p>2. =E7=A9=BA=E4=B8=AD=E7=8E=B0=E6=9C=893=E6=9E=B6=E9=A3=9E=E6=9C=BA=
=E3=80=81=E4=B8=A4=E5=8F=AA=E8=9C=9C=E8=9C=82=EF=BC=8C=E5=88=A4=E6=96=AD=E6=
=9F=90=E4=B8=80=E7=82=AE=E5=BC=B9=E8=83=BD=E5=90=A6=E5=87=BB=E4=B8=AD=E5=AE=
=83=E4=BB=AC=E3=80=82</p>=20
    <div class=3D"image">=20
     <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V=
06/OOP/DAY06/EXERCISE/01/index.files/image001.png">=20
     <p>=E5=9B=BE-1</p>=20
    </div>=20
    <p class=3D"answerTitle">=E5=8F=82=E8=80=83=E7=AD=94=E6=A1=88</p>=20
    <p>=E5=AE=9E=E7=8E=B0=E9=A2=98=E7=9B=AE=E6=89=80=E8=BF=B0=E7=9A=84=E5=
=B0=84=E5=87=BB=E6=B8=B8=E6=88=8F=EF=BC=8C=E6=AD=A5=E9=AA=A4=E5=A6=82=E4=B8=
=8B=EF=BC=9A</p>=20
    <p>1. =E5=AE=9A=E4=B9=89=E6=8E=A5=E5=8F=A3Enemy=E8=A1=A8=E7=A4=BA=E6=95=
=8C=E4=BA=BA=E3=80=82=E5=9C=A8=E8=AF=A5=E6=8E=A5=E5=8F=A3=E4=B8=AD=E5=AE=9A=
=E4=B9=89getScore=E6=96=B9=E6=B3=95=EF=BC=8C=E7=94=A8=E4=BA=8E=E5=AE=9E=E7=
=8E=B0=E5=88=86=E6=95=B0=E7=9A=84=E8=8E=B7=E5=8F=96=E3=80=82=E4=BB=A3=E7=A0=
=81=E5=A6=82=E4=B8=8B=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">class</span> Shoot <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_functi=
on">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_f=
unc">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span>=
</li><li class=3D"bold_code"><span class=3D"sh_comment">// =E6=95=8C=E4=BA=
=BA</span></li><li class=3D"bold_code">interface Enemy <span class=3D"sh_cb=
racket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;int <s=
pan class=3D"sh_function">getScore</span><span class=3D"sh_symbol">();</spa=
n></li><li class=3D"bold_code"><span class=3D"sh_cbracket">}</span></li></o=
l></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none=
;">public class Shoot {
	public static void main(String[] args) {
	=09
	}
}
#cold_bold// =E6=95=8C=E4=BA=BA
#cold_boldinterface Enemy {
#cold_bold	int getScore();
#cold_bold}
</pre></div></div>=20
    <p>2. =E5=AE=9A=E4=B9=89=E6=8E=A5=E5=8F=A3Award=E8=A1=A8=E7=A4=BA=E5=A5=
=96=E5=8A=B1=E3=80=82=E5=9C=A8=E8=AF=A5=E6=8E=A5=E5=8F=A3=E4=B8=AD=E5=AE=9A=
=E4=B9=89=E5=B8=B8=E9=87=8F=E8=A1=A8=E7=A4=BA=E5=A5=96=E5=8A=B1=E7=9A=84=E7=
=B1=BB=E5=9E=8B=E3=80=81=E5=AE=9A=E4=B9=89getType=E6=96=B9=E6=B3=95=E7=94=
=A8=E4=BA=8E=E5=AE=9E=E7=8E=B0=E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=9A=84=
=E7=B1=BB=E5=9E=8B=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=EF=BC=9A</p=
>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">class</span> Shoot <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_functi=
on">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_f=
unc">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}<=
/span></li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D"=
display:none;">&nbsp;</span></li><li><span class=3D"sh_comment">// =E6=95=
=8C=E4=BA=BA</span></li><li><span class=3D"sh_keyword">interface</span> Ene=
my <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int=
 <span class=3D"sh_function">getScore</span><span class=3D"sh_symbol">();</=
span></li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D"d=
isplay:none;">&nbsp;</span></li><li class=3D"bold_code"><span class=3D"sh_c=
omment">// =E5=A5=96=E5=8A=B1</span></li><li class=3D"bold_code">interface =
Award <span class=3D"sh_cbracket">{</span></li><li class=3D"bold_code">&nbs=
p;&nbsp;&nbsp;&nbsp;int DOUBLE_FIRE <span class=3D"sh_symbol">=3D</span> <s=
pan class=3D"sh_number">2</span><span class=3D"sh_symbol">;</span><span cla=
ss=3D"sh_comment">// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B</span></li><li cl=
ass=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;int BOMB <span class=3D"sh_symbol=
">=3D</span> <span class=3D"sh_number">1</span><span class=3D"sh_symbol">;<=
/span> <span class=3D"sh_comment">// =E6=89=8B=E9=9B=B7</span></li><li clas=
s=3D"bold_code"></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;int <s=
pan class=3D"sh_function">getType</span><span class=3D"sh_symbol">();</span=
><span class=3D"sh_comment">// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=
=BB=E5=9E=8B =E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0</span><=
/li><li class=3D"bold_code"><span class=3D"sh_cbracket">}</span></li></ol><=
/pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">=
public class Shoot {
	public static void main(String[] args) {
=09
	}
}

// =E6=95=8C=E4=BA=BA
interface Enemy {
	int getScore();
}

#cold_bold// =E5=A5=96=E5=8A=B1
#cold_boldinterface Award {
#cold_bold	int DOUBLE_FIRE =3D 2;// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B
#cold_bold	int BOMB =3D 1; // =E6=89=8B=E9=9B=B7
#cold_bold
#cold_bold	int getType();// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=
=E5=9E=8B =E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0
#cold_bold}
</pre></div></div>=20
    <p>3. =E5=AE=9A=E4=B9=89=E6=8A=BD=E8=B1=A1=E7=B1=BBFlyingObject=E8=A1=
=A8=E7=A4=BA=E9=A3=9E=E8=A1=8C=E7=89=A9=E3=80=82=E5=9C=A8=E7=B1=BB=E4=B8=AD=
=E5=AE=9A=E4=B9=89=E5=B1=9E=E6=80=A7 x =E3=80=81y =E8=A1=A8=E7=A4=BA=E9=A3=
=9E=E8=A1=8C=E7=89=A9=E6=89=80=E5=9C=A8=E7=9A=84=E5=9D=90=E6=A0=87=EF=BC=9B=
=E5=AE=9A=E4=B9=89shootBy=E6=96=B9=E6=B3=95=E8=A1=A8=E7=A4=BA=E9=A3=9E=E8=
=A1=8C=E7=89=A9=E6=98=AF=E5=90=A6=E8=A2=AB=E5=87=BB=E4=B8=AD=E3=80=82=E4=BB=
=A3=E7=A0=81=E5=A6=82=E4=B8=8B=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">class</span> Shoot <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_functi=
on">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_f=
unc">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span>=
</li><li><span style=3D"display:none;">&nbsp;</span></li><li><span style=3D=
"display:none;">&nbsp;</span></li><li class=3D"bold_code">abstract <span cl=
ass=3D"sh_keyword">class</span> FlyingObject <span class=3D"sh_cbracket">{<=
/span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;int x<span class=
=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp=
;int y<span class=3D"sh_symbol">;</span></li><li class=3D"bold_code"></li><=
li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">a=
bstract</span> boolean <span class=3D"sh_function">shootBy</span><span clas=
s=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,</span> int y<span =
class=3D"sh_symbol">);</span></li><li class=3D"bold_code"><span class=3D"sh=
_cbracket">}</span></li><li class=3D"bold_code"></li><li><span class=3D"sh_=
comment">// =E6=95=8C=E4=BA=BA</span></li><li><span class=3D"sh_keyword">in=
terface</span> Enemy <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nb=
sp;&nbsp;&nbsp;int <span class=3D"sh_function">getScore</span><span class=
=3D"sh_symbol">();</span></li><li><span class=3D"sh_cbracket">}</span></li>=
<li><span style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh_c=
omment">// =E5=A5=96=E5=8A=B1</span></li><li><span class=3D"sh_keyword">int=
erface</span> Award <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;int DOUBLE_FIRE <span class=3D"sh_symbol">=3D</span> <span cl=
ass=3D"sh_number">2</span><span class=3D"sh_symbol">;</span><span class=3D"=
sh_comment">// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;int BOMB <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_number">1</span><span class=3D"sh_symbol">;</span> <span class=3D"sh=
_comment">// =E6=89=8B=E9=9B=B7</span></li><li><span style=3D"display:none;=
">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int <span class=3D"sh_funct=
ion">getType</span><span class=3D"sh_symbol">();</span><span class=3D"sh_co=
mment">// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =E8=BF=94=
=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0</span></li><li><span class=3D=
"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonly sh_sou=
rceCode" style=3D"display:none;">public class Shoot {
	public static void main(String[] args) {
	=09
	}
}


#cold_boldabstract class FlyingObject {
#cold_bold	int x;
#cold_bold	int y;
#cold_bold
#cold_bold	abstract boolean shootBy(int x, int y);
#cold_bold}
#cold_bold
// =E6=95=8C=E4=BA=BA
interface Enemy {
	int getScore();
}

// =E5=A5=96=E5=8A=B1
interface Award {
	int DOUBLE_FIRE =3D 2;// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B
	int BOMB =3D 1; // =E6=89=8B=E9=9B=B7

	int getType();// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =
=E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0
}
</pre></div></div>=20
    <p>4. =E5=AE=9A=E4=B9=89=E7=B1=BBBee=E8=A1=A8=E7=A4=BA=E8=9C=9C=E8=9C=
=82=E3=80=82=E8=9C=9C=E8=9C=82=E5=B1=9E=E4=BA=8E=E9=A3=9E=E8=A1=8C=E7=89=A9=
=EF=BC=8C=E5=9B=A0=E6=AD=A4Bee=E7=B1=BB=E7=BB=A7=E6=89=BF=E8=87=AAFlyingObj=
ect=EF=BC=8C=E5=B9=B6=E9=87=8D=E5=86=99FlyingObject=E7=B1=BB=E7=9A=84shootB=
y=E6=96=B9=E6=B3=95=EF=BC=8C=E6=A0=B9=E6=8D=AE=E8=9C=9C=E8=9C=82=E8=A2=AB=
=E5=87=BB=E4=B8=AD=E7=9A=84=E8=A7=84=E5=88=99=E8=BF=9B=E8=A1=8C=E9=87=8D=E5=
=86=99=EF=BC=9B=E8=9C=9C=E8=9C=82=E8=A2=AB=E5=87=BB=E4=B8=AD=E5=90=8E=EF=BC=
=8C=E5=8F=AF=E4=BB=A5=E8=8E=B7=E5=BE=97=E5=A5=96=E5=8A=B1=EF=BC=8C=E5=9B=A0=
=E6=AD=A4=EF=BC=8CBee=E7=B1=BB=E5=AE=9E=E7=8E=B0Award=E6=8E=A5=E5=8F=A3=EF=
=BC=8C=E5=B9=B6=E5=AE=9E=E7=8E=B0getType=E6=96=B9=E6=B3=95=EF=BC=8C=E8=8E=
=B7=E5=BE=97=E5=A5=96=E5=8A=B1=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=
=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">class</span> Shoot <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_functi=
on">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_f=
unc">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span>=
</li><li><span style=3D"display:none;">&nbsp;</span></li><li><span style=3D=
"display:none;">&nbsp;</span></li><li class=3D"bold_code"><span class=3D"sh=
_comment">/** =E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=
=A9 =E4=B9=9F=E6=98=AF=E5=A5=96=E5=8A=B1 */</span></li><li class=3D"bold_co=
de">class Bee <span class=3D"sh_keyword">extends</span> FlyingObject <span =
class=3D"sh_keyword">implements</span> Award <span class=3D"sh_cbracket">{<=
/span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;int r<span class=
=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp=
;int type<span class=3D"sh_symbol">;</span></li><li class=3D"bold_code"></l=
i><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword=
">public</span> <span class=3D"sh_function">Bee</span><span class=3D"sh_sym=
bol">(</span>int x<span class=3D"sh_symbol">,</span> int y<span class=3D"sh=
_symbol">,</span> int r<span class=3D"sh_symbol">)</span> <span class=3D"sh=
_cbracket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"s=
h_symbol">.</span>x <span class=3D"sh_symbol">=3D</span> x<span class=3D"sh=
_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"sh_=
symbol">.</span>y <span class=3D"sh_symbol">=3D</span> y<span class=3D"sh_s=
ymbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"sh_sy=
mbol">.</span>r <span class=3D"sh_symbol">=3D</span> r<span class=3D"sh_sym=
bol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;type <span class=3D"sh_symbol">=3D</span> Award<span class=
=3D"sh_symbol">.</span>DOUBLE_FIRE<span class=3D"sh_symbol">;</span></li><l=
i class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}=
</span></li><li class=3D"bold_code"></li><li class=3D"bold_code">&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> int <span class=3D"s=
h_function">getType</span><span class=3D"sh_symbol">()</span> <span class=
=3D"sh_cbracket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> type<sp=
an class=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li class=3D"bold_code"><=
/li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">public</span> boolean <span class=3D"sh_function">shootBy</span><span c=
lass=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,</span> int y<sp=
an class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><l=
i class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a=
 <span class=3D"sh_symbol">=3D</span> x <span class=3D"sh_symbol">-</span> =
<span class=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>x<s=
pan class=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int b <span class=3D"sh_symbol">=3D</span=
> y <span class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</spa=
n><span class=3D"sh_symbol">.</span>y<span class=3D"sh_symbol">;</span></li=
><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"sh_keyword">return</span> <span class=3D"sh_predef_var">Math</=
span><span class=3D"sh_symbol">.</span><span class=3D"sh_function">sqrt</sp=
an><span class=3D"sh_symbol">(</span>a <span class=3D"sh_symbol">*</span> a=
 <span class=3D"sh_symbol">+</span> b <span class=3D"sh_symbol">*</span> b<=
span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">&lt;</span> r<s=
pan class=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li class=3D"bold_code">=
<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none;">=
&nbsp;</span></li><li><span class=3D"sh_keyword">abstract</span> <span clas=
s=3D"sh_keyword">class</span> FlyingObject <span class=3D"sh_cbracket">{</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int x<span class=3D"sh_symbol">;</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int y<span class=3D"sh_symbol">;</span></=
li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">abstract</span> boolean <span class=3D"s=
h_function">shootBy</span><span class=3D"sh_symbol">(</span>int x<span clas=
s=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol">);</span></li><li><=
span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none;">&=
nbsp;</span></li><li><span class=3D"sh_comment">// =E6=95=8C=E4=BA=BA</span=
></li><li><span class=3D"sh_keyword">interface</span> Enemy <span class=3D"=
sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int <span class=3D"sh=
_function">getScore</span><span class=3D"sh_symbol">();</span></li><li><spa=
n class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none;">&nbs=
p;</span></li><li><span class=3D"sh_comment">// =E5=A5=96=E5=8A=B1</span></=
li><li><span class=3D"sh_keyword">interface</span> Award <span class=3D"sh_=
cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int DOUBLE_FIRE <span cl=
ass=3D"sh_symbol">=3D</span> <span class=3D"sh_number">2</span><span class=
=3D"sh_symbol">;</span><span class=3D"sh_comment">// =E5=8F=8C=E5=80=8D=E7=
=81=AB=E5=8A=9B</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int BOMB <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_number">1</span><span class=3D"=
sh_symbol">;</span> <span class=3D"sh_comment">// =E6=89=8B=E9=9B=B7</span>=
</li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&n=
bsp;&nbsp;int <span class=3D"sh_function">getType</span><span class=3D"sh_s=
ymbol">();</span><span class=3D"sh_comment">// =E8=8E=B7=E5=8F=96=E5=A5=96=
=E5=8A=B1=E7=B1=BB=E5=9E=8B =E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=
=E6=95=B0=E7=9A=84</span></li><li><span class=3D"sh_cbracket">}</span></li>=
</ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:n=
one;">public class Shoot {
	public static void main(String[] args) {
	=09
	}
}


#cold_bold/** =E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=
=A9 =E4=B9=9F=E6=98=AF=E5=A5=96=E5=8A=B1 */
#cold_boldclass Bee extends FlyingObject implements Award {
#cold_bold	int r;
#cold_bold	int type;
#cold_bold
#cold_bold	public Bee(int x, int y, int r) {
#cold_bold		this.x =3D x;
#cold_bold		this.y =3D y;
#cold_bold		this.r =3D r;
#cold_bold		type =3D Award.DOUBLE_FIRE;
#cold_bold	}
#cold_bold
#cold_bold	public int getType() {
#cold_bold		return type;
#cold_bold	}
#cold_bold
#cold_bold	public boolean shootBy(int x, int y) {
#cold_bold		int a =3D x - this.x;
#cold_bold		int b =3D y - this.y;
#cold_bold		return Math.sqrt(a * a + b * b) &lt; r;
#cold_bold	}
#cold_bold}

abstract class FlyingObject {
	int x;
	int y;

	abstract boolean shootBy(int x, int y);
}

// =E6=95=8C=E4=BA=BA
interface Enemy {
	int getScore();
}

// =E5=A5=96=E5=8A=B1
interface Award {
	int DOUBLE_FIRE =3D 2;// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B
	int BOMB =3D 1; // =E6=89=8B=E9=9B=B7

	int getType();// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =
=E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0=E7=9A=84
}
</pre></div></div>=20
    <p>=E6=8A=8A=E8=9C=9C=E8=9C=82=E6=89=80=E5=9C=A8=E7=9A=84=E5=8C=BA=E5=
=9F=9F=E7=9C=8B=E5=87=BA=E4=B8=80=E4=B8=AA=E5=9C=86=E5=BD=A2=EF=BC=8C=E8=9C=
=9C=E8=9C=82=E8=A2=AB=E5=87=BB=E4=B8=AD=E7=9A=84=E8=A7=84=E5=88=99=E4=B8=BA=
=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li>&nbsp;&nbsp;&nbsp;&nbsp;int a <span class=
=3D"sh_symbol">=3D</span> x <span class=3D"sh_symbol">-</span> <span class=
=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>x<span class=
=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int b <span class=
=3D"sh_symbol">=3D</span> y <span class=3D"sh_symbol">-</span> <span class=
=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>y<span class=
=3D"sh_symbol">;</span></li><li><span class=3D"sh_keyword">return</span> <s=
pan class=3D"sh_predef_var">Math</span><span class=3D"sh_symbol">.</span><s=
pan class=3D"sh_function">sqrt</span><span class=3D"sh_symbol">(</span>a <s=
pan class=3D"sh_symbol">*</span> a <span class=3D"sh_symbol">+</span> b <sp=
an class=3D"sh_symbol">*</span> b<span class=3D"sh_symbol">)</span> <span c=
lass=3D"sh_symbol">&lt;</span> r<span class=3D"sh_symbol">;</span></li></ol=
></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;=
">	int a =3D x - this.x;
	int b =3D y - this.y;
return Math.sqrt(a * a + b * b) &lt; r;
</pre></div></div>=20
    <p>=E4=B8=8A=E8=BF=B0=E4=BB=A3=E7=A0=81=E4=B8=AD=EF=BC=8Cx =E3=80=81y=
=E8=A1=A8=E7=A4=BA=E7=82=AE=E5=BC=B9=E7=9A=84=E5=9D=90=E6=A0=87=E4=BD=8D=E7=
=BD=AE=EF=BC=8Cthis.x =E3=80=81this.y=E8=A1=A8=E7=A4=BA=E8=9C=9C=E8=9C=82=
=E7=9A=84=E5=9D=90=E6=A0=87=E4=BD=8D=E7=BD=AE=EF=BC=8Cr=E8=A1=A8=E7=A4=BA=
=E5=8D=8A=E5=BE=84=E3=80=82=E5=A6=82=E6=9E=9C=E8=A1=A8=E8=BE=BE=E5=BC=8F=E2=
=80=9C Math.sqrt(a * a + b * b) &lt; r =E2=80=9D=E7=9A=84=E7=BB=93=E6=9E=9C=
=E8=BF=94=E5=9B=9Etrue=EF=BC=8C=E5=88=99=E8=9C=9C=E8=9C=82=E8=A2=AB=E7=82=
=AE=E5=BC=B9=E5=87=BB=E4=B8=AD=E3=80=82</p>=20
    <p>5. =E5=AE=9A=E4=B9=89=E7=B1=BBAirplane=E8=A1=A8=E7=A4=BA=E9=A3=9E=E6=
=9C=BA=E3=80=82=E9=A3=9E=E6=9C=BA=E5=B1=9E=E4=BA=8E=E9=A3=9E=E8=A1=8C=E7=89=
=A9=EF=BC=8C=E5=9B=A0=E6=AD=A4Airplane=E7=B1=BB=E7=BB=A7=E6=89=BF=E8=87=AAF=
lyingObject=EF=BC=8C=E5=B9=B6=E9=87=8D=E5=86=99FlyingObject=E7=B1=BB=E7=9A=
=84shootBy=E6=96=B9=E6=B3=95=EF=BC=8C=E6=A0=B9=E6=8D=AE=E9=A3=9E=E6=9C=BA=
=E8=A2=AB=E5=87=BB=E4=B8=AD=E7=9A=84=E8=A7=84=E5=88=99=E8=BF=9B=E8=A1=8C=E9=
=87=8D=E5=86=99=EF=BC=9B=E9=A3=9E=E6=9C=BA=E8=A2=AB=E5=87=BB=E4=B8=AD=E5=90=
=8E=EF=BC=8C=E5=8F=AF=E4=BB=A5=E8=8E=B7=E5=BE=97=E5=88=86=E6=95=B0=EF=BC=8C=
=E5=9B=A0=E6=AD=A4=EF=BC=8CAirplane =E7=B1=BB=E5=AE=9E=E7=8E=B0Enemy=E6=8E=
=A5=E5=8F=A3=EF=BC=8C=E5=B9=B6=E5=AE=9E=E7=8E=B0 getScore=E6=96=B9=E6=B3=95=
=EF=BC=8C=E7=94=A8=E4=BA=8E=E8=8E=B7=E5=BE=97=E5=88=86=E6=95=B0=E3=80=82=E4=
=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">class</span> Shoot <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_functi=
on">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_f=
unc">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span>=
</li><li><span style=3D"display:none;">&nbsp;</span></li><li class=3D"bold_=
code"><span class=3D"sh_comment">/** =E9=A3=9E=E6=9C=BA=E6=98=AF=E9=A3=9E=
=E8=A1=8C=E7=89=A9=E4=B9=9F=E6=98=AF=E6=95=8C=E4=BA=BA */</span></li><li cl=
ass=3D"bold_code">class Airplane <span class=3D"sh_keyword">extends</span> =
FlyingObject <span class=3D"sh_keyword">implements</span> Enemy <span class=
=3D"sh_cbracket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nb=
sp;int width<span class=3D"sh_symbol">;</span></li><li class=3D"bold_code">=
&nbsp;&nbsp;&nbsp;&nbsp;int height<span class=3D"sh_symbol">;</span></li><l=
i class=3D"bold_code"></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"sh_keyword">public</span> <span class=3D"sh_function">Airpla=
ne</span><span class=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,=
</span> int y<span class=3D"sh_symbol">,</span> int w<span class=3D"sh_symb=
ol">,</span> int h<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbra=
cket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"sh_sym=
bol">.</span>x <span class=3D"sh_symbol">=3D</span> x<span class=3D"sh_symb=
ol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"sh_symbo=
l">.</span>y <span class=3D"sh_symbol">=3D</span> y<span class=3D"sh_symbol=
">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;width <span class=3D"sh_symbol">=3D</span> w<span class=3D"sh_s=
ymbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;height <span class=3D"sh_symbol">=3D</span> h<span class=
=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"sh_cbracket">}</span></li><li class=3D"bold_code"></li><li =
class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">publ=
ic</span> boolean <span class=3D"sh_function">shootBy</span><span class=3D"=
sh_symbol">(</span>int x<span class=3D"sh_symbol">,</span> int y<span class=
=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li class=
=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int dx <span=
 class=3D"sh_symbol">=3D</span> x <span class=3D"sh_symbol">-</span> <span =
class=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>x<span cl=
ass=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;int dy <span class=3D"sh_symbol">=3D</span> y <=
span class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</span><sp=
an class=3D"sh_symbol">.</span>y<span class=3D"sh_symbol">;</span></li><li =
class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"sh_keyword">return</span> <span class=3D"sh_symbol">(</span>dx <spa=
n class=3D"sh_symbol">&gt;</span> <span class=3D"sh_number">0</span> <span =
class=3D"sh_symbol">&amp;&amp;</span> dx <span class=3D"sh_symbol">&lt;</sp=
an> width<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">&amp;=
&amp;</span> <span class=3D"sh_symbol">(</span>dy <span class=3D"sh_symbol"=
>&gt;</span> <span class=3D"sh_number">0</span> <span class=3D"sh_symbol">&=
amp;&amp;</span> dy <span class=3D"sh_symbol">&lt;</span> height<span class=
=3D"sh_symbol">);</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_cbracket">}</span></li><li class=3D"bold_code"></li><li=
 class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;@Override</li><li class=3D"bol=
d_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> in=
t <span class=3D"sh_function">getScore</span><span class=3D"sh_symbol">()</=
span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bold_code">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">retu=
rn</span> <span class=3D"sh_number">5</span><span class=3D"sh_symbol">;</sp=
an></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_c=
bracket">}</span></li><li class=3D"bold_code"><span class=3D"sh_cbracket">}=
</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span c=
lass=3D"sh_comment">/** =E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=
=A1=8C=E7=89=A9 =E4=B9=9F=E6=98=AF=E5=A5=96=E5=8A=B1 */</span></li><li><spa=
n class=3D"sh_keyword">class</span> Bee <span class=3D"sh_keyword">extends<=
/span> FlyingObject <span class=3D"sh_keyword">implements</span> Award <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int r<span=
 class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int type<span=
 class=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp;<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_function">Bee</span><span class=3D"sh_symbol">(</spa=
n>int x<span class=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol">,<=
/span> int r<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>x <span class=
=3D"sh_symbol">=3D</span> x<span class=3D"sh_symbol">;</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this<=
/span><span class=3D"sh_symbol">.</span>y <span class=3D"sh_symbol">=3D</sp=
an> y<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"s=
h_symbol">.</span>r <span class=3D"sh_symbol">=3D</span> r<span class=3D"sh=
_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t=
ype <span class=3D"sh_symbol">=3D</span> Award<span class=3D"sh_symbol">.</=
span>DOUBLE_FIRE<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display=
:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">public</span> int <span class=3D"sh_function">getType</span><span cla=
ss=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">ret=
urn</span> type<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:=
none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">public</span> boolean <span class=3D"sh_function">shootBy</span><span =
class=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,</span> int y<s=
pan class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a <span class=3D"sh_=
symbol">=3D</span> x <span class=3D"sh_symbol">-</span> <span class=3D"sh_k=
eyword">this</span><span class=3D"sh_symbol">.</span>x<span class=3D"sh_sym=
bol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int b=
 <span class=3D"sh_symbol">=3D</span> y <span class=3D"sh_symbol">-</span> =
<span class=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>y<s=
pan class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> <span class=3D"sh_pr=
edef_var">Math</span><span class=3D"sh_symbol">.</span><span class=3D"sh_fu=
nction">sqrt</span><span class=3D"sh_symbol">(</span>a <span class=3D"sh_sy=
mbol">*</span> a <span class=3D"sh_symbol">+</span> b <span class=3D"sh_sym=
bol">*</span> b<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol"=
>&lt;</span> r<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbrack=
et">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li><s=
pan class=3D"sh_keyword">abstract</span> <span class=3D"sh_keyword">class</=
span> FlyingObject <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;int x<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&n=
bsp;&nbsp;int y<span class=3D"sh_symbol">;</span></li><li><span style=3D"di=
splay:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_keyword">abstract</span> boolean <span class=3D"sh_function">shootBy</spa=
n><span class=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,</span>=
 int y<span class=3D"sh_symbol">);</span></li><li><span class=3D"sh_cbracke=
t">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li><sp=
an class=3D"sh_comment">// =E6=95=8C=E4=BA=BA</span></li><li><span class=3D=
"sh_keyword">interface</span> Enemy <span class=3D"sh_cbracket">{</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;int <span class=3D"sh_function">getScore</spa=
n><span class=3D"sh_symbol">();</span></li><li><span class=3D"sh_cbracket">=
}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span =
class=3D"sh_comment">// =E5=A5=96=E5=8A=B1</span></li><li><span class=3D"sh=
_keyword">interface</span> Award <span class=3D"sh_cbracket">{</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;int DOUBLE_FIRE <span class=3D"sh_symbol">=3D</s=
pan> <span class=3D"sh_number">2</span><span class=3D"sh_symbol">;</span><s=
pan class=3D"sh_comment">// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;int BOMB <span class=3D"sh_symbol">=3D</span> =
<span class=3D"sh_number">1</span><span class=3D"sh_symbol">;</span> <span =
class=3D"sh_comment">// =E6=89=8B=E9=9B=B7</span></li><li><span style=3D"di=
splay:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int <span class=
=3D"sh_function">getType</span><span class=3D"sh_symbol">();</span><span cl=
ass=3D"sh_comment">// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=
=8B =E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0=E7=9A=84</span><=
/li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"s=
nippet-textonly sh_sourceCode" style=3D"display:none;">public class Shoot {
	public static void main(String[] args) {
	=09
	}
}

#cold_bold/** =E9=A3=9E=E6=9C=BA=E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9=E4=B9=
=9F=E6=98=AF=E6=95=8C=E4=BA=BA */
#cold_boldclass Airplane extends FlyingObject implements Enemy {
#cold_bold	int width;
#cold_bold	int height;
#cold_bold
#cold_bold	public Airplane(int x, int y, int w, int h) {
#cold_bold		this.x =3D x;
#cold_bold		this.y =3D y;
#cold_bold		width =3D w;
#cold_bold		height =3D h;
#cold_bold	}
#cold_bold
#cold_bold	public boolean shootBy(int x, int y) {
#cold_bold		int dx =3D x - this.x;
#cold_bold		int dy =3D y - this.y;
#cold_bold		return (dx &gt; 0 &amp;&amp; dx &lt; width) &amp;&amp; (dy &gt;=
 0 &amp;&amp; dy &lt; height);
#cold_bold	}
#cold_bold
#cold_bold	@Override
#cold_bold	public int getScore() {
#cold_bold		return 5;
#cold_bold	}
#cold_bold}

/** =E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9 =E4=B9=
=9F=E6=98=AF=E5=A5=96=E5=8A=B1 */
class Bee extends FlyingObject implements Award {
	int r;
	int type;

	public Bee(int x, int y, int r) {
		this.x =3D x;
		this.y =3D y;
		this.r =3D r;
		type =3D Award.DOUBLE_FIRE;
	}

	public int getType() {
		return type;
	}

	public boolean shootBy(int x, int y) {
		int a =3D x - this.x;
		int b =3D y - this.y;
		return Math.sqrt(a * a + b * b) &lt; r;
	}
}

abstract class FlyingObject {
	int x;
	int y;

	abstract boolean shootBy(int x, int y);
}

// =E6=95=8C=E4=BA=BA
interface Enemy {
	int getScore();
}

// =E5=A5=96=E5=8A=B1
interface Award {
	int DOUBLE_FIRE =3D 2;// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B
	int BOMB =3D 1; // =E6=89=8B=E9=9B=B7

	int getType();// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =
=E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0=E7=9A=84
}
</pre></div></div>=20
    <p>=E6=8A=8A=E9=A3=9E=E6=9C=BA=E6=89=80=E5=9C=A8=E7=9A=84=E5=8C=BA=E5=
=9F=9F=E7=9C=8B=E5=87=BA=E4=B8=80=E4=B8=AA=E7=9F=A9=E5=BD=A2=EF=BC=8C=E9=A3=
=9E=E6=9C=BA=E8=A2=AB=E5=87=BB=E4=B8=AD=E7=9A=84=E8=A7=84=E5=88=99=E4=B8=BA=
=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li>int dx <span class=3D"sh_symbol">=3D</span=
> x <span class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</spa=
n><span class=3D"sh_symbol">.</span>x<span class=3D"sh_symbol">;</span></li=
><li>int dy <span class=3D"sh_symbol">=3D</span> y <span class=3D"sh_symbol=
">-</span> <span class=3D"sh_keyword">this</span><span class=3D"sh_symbol">=
.</span>y<span class=3D"sh_symbol">;</span></li><li><span class=3D"sh_keywo=
rd">return</span> <span class=3D"sh_symbol">(</span>dx <span class=3D"sh_sy=
mbol">&gt;</span> <span class=3D"sh_number">0</span> <span class=3D"sh_symb=
ol">&amp;&amp;</span> dx <span class=3D"sh_symbol">&lt;</span> width<span c=
lass=3D"sh_symbol">)</span> <span class=3D"sh_symbol">&amp;&amp;</span> <sp=
an class=3D"sh_symbol">(</span>dy <span class=3D"sh_symbol">&gt;</span> <sp=
an class=3D"sh_number">0</span> <span class=3D"sh_symbol">&amp;&amp;</span>=
 dy <span class=3D"sh_symbol">&lt;</span> height<span class=3D"sh_symbol">)=
;</span></li></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=
=3D"display:none;">int dx =3D x - this.x;
int dy =3D y - this.y;
return (dx &gt; 0 &amp;&amp; dx &lt; width) &amp;&amp; (dy &gt; 0 &amp;&amp=
; dy &lt; height);
</pre></div></div>=20
    <p>=E4=B8=8A=E8=BF=B0=E4=BB=A3=E7=A0=81=E4=B8=AD=EF=BC=8Cx =E3=80=81y=
=E8=A1=A8=E7=A4=BA=E7=82=AE=E5=BC=B9=E7=9A=84=E5=9D=90=E6=A0=87=E4=BD=8D=E7=
=BD=AE=EF=BC=8Cthis.x =E3=80=81this.y=E8=A1=A8=E7=A4=BA=E9=A3=9E=E6=9C=BA=
=E7=9A=84=E5=9D=90=E6=A0=87=E4=BD=8D=E7=BD=AE=EF=BC=8Cwidth=E3=80=81height=
=E8=A1=A8=E7=A4=BA=E7=9F=A9=E5=BD=A2=E7=9A=84=E5=AE=BD=E5=92=8C=E9=AB=98=E3=
=80=82=E5=A6=82=E6=9E=9C=E8=A1=A8=E8=BE=BE=E5=BC=8F=E2=80=9C(dx &gt; 0 &amp=
;&amp; dx &lt; width) &amp;&amp; (dy &gt; 0 &amp;&amp; dy &lt; height) =E2=
=80=9D=E7=9A=84=E7=BB=93=E6=9E=9C=E8=BF=94=E5=9B=9Etrue=EF=BC=8C=E5=88=99=
=E9=A3=9E=E6=9C=BA=E8=A2=AB=E7=82=AE=E5=BC=B9=E5=87=BB=E4=B8=AD=E3=80=82</p=
>=20
    <p>6. =E5=9C=A8main=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E9=A6=96=E5=85=
=88=EF=BC=8C=E6=9E=84=E9=80=A0=E9=95=BF=E5=BA=A6=E4=B8=BA5=E7=9A=84FlyingOb=
ject=E7=B1=BB=E5=9E=8B=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=E5=B0=863=E6=9E=
=B6=E9=A3=9E=E6=9C=BA=E5=92=8C=E4=B8=A4=E5=8F=AA=E8=9C=9C=E8=9C=82=E4=BD=9C=
=E4=B8=BA=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=EF=BC=9B =E7=84=B6=
=E5=90=8E=EF=BC=8C=E8=AE=BE=E7=BD=AE=E7=82=AE=E5=BC=B9=E7=9A=84=E5=9D=90=E6=
=A0=87=E4=BD=8D=E7=BD=AE=EF=BC=9B=E6=9C=80=E5=90=8E=EF=BC=8C=E5=BE=AA=E7=8E=
=AF=E5=88=A4=E6=96=AD=E6=95=B0=E7=BB=84=E4=B8=AD=E7=9A=84=E9=A3=9E=E8=A1=8C=
=E7=89=A9=E6=98=AF=E5=90=A6=E8=A2=AB=E5=87=BB=E4=B8=AD=EF=BC=8C=E5=A6=82=E6=
=9E=9C=E8=A2=AB=E5=87=BB=E4=B8=AD=EF=BC=8C=E5=88=99=E5=86=8D=E5=88=A4=E6=96=
=AD=E6=98=AF=E8=9C=9C=E8=9C=82=E8=BF=98=E6=98=AF=E9=A3=9E=E6=9C=BA=EF=BC=8C=
=E5=A6=82=E6=9E=9C=E6=98=AF=E9=A3=9E=E6=9C=BA=EF=BC=8C=E5=88=99=E8=BE=93=E5=
=87=BA=E5=BE=97=E5=88=86=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=98=AF=E8=9C=9C=E8=9C=
=82=E5=88=99=E8=BE=93=E5=87=BA=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B=E3=80=82=
=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY0=
6/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">text</a><a cla=
ss=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#">pop-up</a>=
</pre></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCod=
e"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">class</span> Shoot <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</s=
pan> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_functi=
on">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_f=
unc">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bol=
d_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FlyingObject<span c=
lass=3D"sh_symbol">[]</span> objects <span class=3D"sh_symbol">=3D</span> <=
span class=3D"sh_keyword">new</span> FlyingObject<span class=3D"sh_symbol">=
[</span><span class=3D"sh_number">5</span><span class=3D"sh_symbol">];</spa=
n></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;objects<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0</s=
pan><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span>=
 <span class=3D"sh_keyword">new</span> <span class=3D"sh_function">Airplane=
</span><span class=3D"sh_symbol">(</span><span class=3D"sh_number">103</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_number">68</span><sp=
an class=3D"sh_symbol">,</span> <span class=3D"sh_number">20</span><span cl=
ass=3D"sh_symbol">,</span> <span class=3D"sh_number">20</span><span class=
=3D"sh_symbol">);</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;objects<span class=3D"sh_symbol">[</span><span cl=
ass=3D"sh_number">1</span><span class=3D"sh_symbol">]</span> <span class=3D=
"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> <span class=3D=
"sh_function">Airplane</span><span class=3D"sh_symbol">(</span><span class=
=3D"sh_number">243</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_number">102</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_n=
umber">20</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_number=
">20</span><span class=3D"sh_symbol">);</span></li><li class=3D"bold_code">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objects<span class=3D"sh_sy=
mbol">[</span><span class=3D"sh_number">2</span><span class=3D"sh_symbol">]=
</span> <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new=
</span> <span class=3D"sh_function">Airplane</span><span class=3D"sh_symbol=
">(</span><span class=3D"sh_number">153</span><span class=3D"sh_symbol">,</=
span> <span class=3D"sh_number">166</span><span class=3D"sh_symbol">,</span=
> <span class=3D"sh_number">20</span><span class=3D"sh_symbol">,</span> <sp=
an class=3D"sh_number">20</span><span class=3D"sh_symbol">);</span></li><li=
 class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object=
s<span class=3D"sh_symbol">[</span><span class=3D"sh_number">3</span><span =
class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span cla=
ss=3D"sh_keyword">new</span> <span class=3D"sh_function">Bee</span><span cl=
ass=3D"sh_symbol">(</span><span class=3D"sh_number">85</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_number">256</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_symbo=
l">);</span> </li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;objects<span class=3D"sh_symbol">[</span><span class=3D"sh_n=
umber">4</span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol"=
>=3D</span> <span class=3D"sh_keyword">new</span> <span class=3D"sh_functio=
n">Bee</span><span class=3D"sh_symbol">(</span><span class=3D"sh_number">25=
6</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_number">287</s=
pan><span class=3D"sh_symbol">,</span> <span class=3D"sh_number">20</span><=
span class=3D"sh_symbol">);</span> </li><li class=3D"bold_code">&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int x <span class=3D"sh_symbol">=3D</s=
pan> <span class=3D"sh_number">82</span><span class=3D"sh_symbol">;</span><=
/li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;int y <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">253</=
span><span class=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</sp=
an> <span class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</=
span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> =
i <span class=3D"sh_symbol">&lt;</span> objects<span class=3D"sh_symbol">.<=
/span>length<span class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">+=
+)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bold_code">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fly=
ingObject obj <span class=3D"sh_symbol">=3D</span> objects<span class=3D"sh=
_symbol">[</span>i<span class=3D"sh_symbol">];</span></li><li class=3D"bold=
_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span>=
obj<span class=3D"sh_symbol">.</span><span class=3D"sh_function">shootBy</s=
pan><span class=3D"sh_symbol">(</span>x<span class=3D"sh_symbol">,</span> y=
<span class=3D"sh_symbol">))</span> <span class=3D"sh_cbracket">{</span></l=
i><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">i=
f</span> <span class=3D"sh_symbol">(</span>obj <span class=3D"sh_keyword">i=
nstanceof</span> Enemy<span class=3D"sh_symbol">)</span> <span class=3D"sh_=
cbracket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;Enemy enemy <span class=3D"sh_symbol">=3D</span> <span cla=
ss=3D"sh_symbol">(</span>Enemy<span class=3D"sh_symbol">)</span> obj<span c=
lass=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span =
class=3D"sh_symbol">.</span><span class=3D"sh_function">println</span><span=
 class=3D"sh_symbol">(</span><span class=3D"sh_string">"=E5=8A=A0=E5=88=86=
=EF=BC=9A"</span> <span class=3D"sh_symbol">+</span> enemy<span class=3D"sh=
_symbol">.</span><span class=3D"sh_function">getScore</span><span class=3D"=
sh_symbol">());</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_cbracket">}</span></li><li class=3D"bold_code">&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</s=
pan>obj <span class=3D"sh_keyword">instanceof</span> Award<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bol=
d_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Award award <span clas=
s=3D"sh_symbol">=3D</span> <span class=3D"sh_symbol">(</span>Award<span cla=
ss=3D"sh_symbol">)</span> obj<span class=3D"sh_symbol">;</span></li><li cla=
ss=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span c=
lass=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=
=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><span clas=
s=3D"sh_string">"=E5=A5=96=E5=8A=B1"</span> <span class=3D"sh_symbol">+</sp=
an> award<span class=3D"sh_symbol">.</span><span class=3D"sh_function">getT=
ype</span><span class=3D"sh_symbol">());</span></li><li class=3D"bold_code"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li class=3D=
"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li class=3D"bold_code">&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">=
}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</spa=
n></li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D"disp=
lay:none;">&nbsp;</span></li><li><span class=3D"sh_comment">/** =E9=A3=9E=
=E6=9C=BA=E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9=E4=B9=9F=E6=98=AF=E6=95=8C=E4=
=BA=BA */</span></li><li><span class=3D"sh_keyword">class</span> Airplane <=
span class=3D"sh_keyword">extends</span> FlyingObject <span class=3D"sh_key=
word">implements</span> Enemy <span class=3D"sh_cbracket">{</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;int width<span class=3D"sh_symbol">;</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;int height<span class=3D"sh_symbol">;</span></li><=
li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_function">Ai=
rplane</span><span class=3D"sh_symbol">(</span>int x<span class=3D"sh_symbo=
l">,</span> int y<span class=3D"sh_symbol">,</span> int w<span class=3D"sh_=
symbol">,</span> int h<span class=3D"sh_symbol">)</span> <span class=3D"sh_=
cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>x <=
span class=3D"sh_symbol">=3D</span> x<span class=3D"sh_symbol">;</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">this</span><span class=3D"sh_symbol">.</span>y <span class=3D"sh_symbo=
l">=3D</span> y<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width <span class=3D"sh_symbol">=3D</span> w=
<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;height <span class=3D"sh_symbol">=3D</span> h<span class=3D=
"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> boolean <s=
pan class=3D"sh_function">shootBy</span><span class=3D"sh_symbol">(</span>i=
nt x<span class=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol">)</sp=
an> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;int dx <span class=3D"sh_symbol">=3D</span> x <span c=
lass=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</span><span cla=
ss=3D"sh_symbol">.</span>x<span class=3D"sh_symbol">;</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int dy <span class=3D"sh_symbol">=
=3D</span> y <span class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">=
this</span><span class=3D"sh_symbol">.</span>y<span class=3D"sh_symbol">;</=
span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">return</span> <span class=3D"sh_symbol">(</span>dx <span cl=
ass=3D"sh_symbol">&gt;</span> <span class=3D"sh_number">0</span> <span clas=
s=3D"sh_symbol">&amp;&amp;</span> dx <span class=3D"sh_symbol">&lt;</span> =
width<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">&amp;&amp=
;</span> <span class=3D"sh_symbol">(</span>dy <span class=3D"sh_symbol">&gt=
;</span> <span class=3D"sh_number">0</span> <span class=3D"sh_symbol">&amp;=
&amp;</span> dy <span class=3D"sh_symbol">&lt;</span> height<span class=3D"=
sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;@Override</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_keyword">public</span> int <span class=3D"sh_function">getScore</s=
pan><span class=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_keyword">return</span> <span class=3D"sh_number">5</span><span class=3D"sh=
_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracke=
t">}</span></li><li><span class=3D"sh_cbracket">}</span></li><li><span styl=
e=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh_comment">/** =
=E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9 =E4=B9=9F=
=E6=98=AF=E5=A5=96=E5=8A=B1 */</span></li><li><span class=3D"sh_keyword">cl=
ass</span> Bee <span class=3D"sh_keyword">extends</span> FlyingObject <span=
 class=3D"sh_keyword">implements</span> Award <span class=3D"sh_cbracket">{=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int r<span class=3D"sh_symbol">;</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int type<span class=3D"sh_symbol">;</s=
pan></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_fu=
nction">Bee</span><span class=3D"sh_symbol">(</span>int x<span class=3D"sh_=
symbol">,</span> int y<span class=3D"sh_symbol">,</span> int r<span class=
=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</=
span><span class=3D"sh_symbol">.</span>x <span class=3D"sh_symbol">=3D</spa=
n> x<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"sh=
_symbol">.</span>y <span class=3D"sh_symbol">=3D</span> y<span class=3D"sh_=
symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>r <sp=
an class=3D"sh_symbol">=3D</span> r<span class=3D"sh_symbol">;</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type <span class=3D"sh_s=
ymbol">=3D</span> Award<span class=3D"sh_symbol">.</span>DOUBLE_FIRE<span c=
lass=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
sh_cbracket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> int=
 <span class=3D"sh_function">getType</span><span class=3D"sh_symbol">()</sp=
an> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> type<span cl=
ass=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_cbracket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> bool=
ean <span class=3D"sh_function">shootBy</span><span class=3D"sh_symbol">(</=
span>int x<span class=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol"=
>)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;int a <span class=3D"sh_symbol">=3D</span> x <s=
pan class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</span><spa=
n class=3D"sh_symbol">.</span>x<span class=3D"sh_symbol">;</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int b <span class=3D"sh_symb=
ol">=3D</span> y <span class=3D"sh_symbol">-</span> <span class=3D"sh_keywo=
rd">this</span><span class=3D"sh_symbol">.</span>y<span class=3D"sh_symbol"=
>;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_keyword">return</span> <span class=3D"sh_predef_var">Math</span><s=
pan class=3D"sh_symbol">.</span><span class=3D"sh_function">sqrt</span><spa=
n class=3D"sh_symbol">(</span>a <span class=3D"sh_symbol">*</span> a <span =
class=3D"sh_symbol">+</span> b <span class=3D"sh_symbol">*</span> b<span cl=
ass=3D"sh_symbol">)</span> <span class=3D"sh_symbol">&lt;</span> r<span cla=
ss=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li><li><s=
pan style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh_keyword=
">abstract</span> <span class=3D"sh_keyword">class</span> FlyingObject <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int x<span=
 class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int y<span cl=
ass=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp;</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">abstract</sp=
an> boolean <span class=3D"sh_function">shootBy</span><span class=3D"sh_sym=
bol">(</span>int x<span class=3D"sh_symbol">,</span> int y<span class=3D"sh=
_symbol">);</span></li><li><span class=3D"sh_cbracket">}</span></li><li><sp=
an style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh_comment"=
>// =E6=95=8C=E4=BA=BA</span></li><li><span class=3D"sh_keyword">interface<=
/span> Enemy <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;int <span class=3D"sh_function">getScore</span><span class=3D"sh_sym=
bol">();</span></li><li><span class=3D"sh_cbracket">}</span></li><li><span =
style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh_comment">//=
 =E5=A5=96=E5=8A=B1</span></li><li><span class=3D"sh_keyword">interface</sp=
an> Award <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;int DOUBLE_FIRE <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_=
number">2</span><span class=3D"sh_symbol">;</span><span class=3D"sh_comment=
">// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;int BOMB <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_numbe=
r">1</span><span class=3D"sh_symbol">;</span> <span class=3D"sh_comment">//=
 =E6=89=8B=E9=9B=B7</span></li><li><span style=3D"display:none;">&nbsp;</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int <span class=3D"sh_function">getType=
</span><span class=3D"sh_symbol">();</span><span class=3D"sh_comment">// =
=E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =E8=BF=94=E5=9B=9E=
=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0=E7=9A=84</span></li><li><span class=3D=
"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonly sh_sou=
rceCode" style=3D"display:none;">public class Shoot {
	public static void main(String[] args) {
#cold_bold		FlyingObject[] objects =3D new FlyingObject[5];
#cold_bold		objects[0] =3D new Airplane(103, 68, 20, 20);
#cold_bold		objects[1] =3D new Airplane(243, 102, 20, 20);
#cold_bold		objects[2] =3D new Airplane(153, 166, 20, 20);
#cold_bold		objects[3] =3D new Bee(85, 256, 20);=20
#cold_bold		objects[4] =3D new Bee(256, 287, 20);=20
#cold_bold		int x =3D 82;
#cold_bold		int y =3D 253;
#cold_bold		for (int i =3D 0; i &lt; objects.length; i++) {
#cold_bold			FlyingObject obj =3D objects[i];
#cold_bold			if (obj.shootBy(x, y)) {
#cold_bold				if (obj instanceof Enemy) {
#cold_bold					Enemy enemy =3D (Enemy) obj;
#cold_bold					System.out.println("=E5=8A=A0=E5=88=86=EF=BC=9A" + enemy.get=
Score());
#cold_bold				}
#cold_bold				if (obj instanceof Award) {
#cold_bold					Award award =3D (Award) obj;
#cold_bold					System.out.println("=E5=A5=96=E5=8A=B1" + award.getType());
#cold_bold				}
#cold_bold			}
#cold_bold		}
	}
}

/** =E9=A3=9E=E6=9C=BA=E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9=E4=B9=9F=E6=98=
=AF=E6=95=8C=E4=BA=BA */
class Airplane extends FlyingObject implements Enemy {
	int width;
	int height;

	public Airplane(int x, int y, int w, int h) {
		this.x =3D x;
		this.y =3D y;
		width =3D w;
		height =3D h;
	}

	public boolean shootBy(int x, int y) {
		int dx =3D x - this.x;
		int dy =3D y - this.y;
		return (dx &gt; 0 &amp;&amp; dx &lt; width) &amp;&amp; (dy &gt; 0 &amp;&a=
mp; dy &lt; height);
	}

	@Override
	public int getScore() {
		return 5;
	}
}

/** =E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9 =E4=B9=
=9F=E6=98=AF=E5=A5=96=E5=8A=B1 */
class Bee extends FlyingObject implements Award {
	int r;
	int type;

	public Bee(int x, int y, int r) {
		this.x =3D x;
		this.y =3D y;
		this.r =3D r;
		type =3D Award.DOUBLE_FIRE;
	}

	public int getType() {
		return type;
	}

	public boolean shootBy(int x, int y) {
		int a =3D x - this.x;
		int b =3D y - this.y;
		return Math.sqrt(a * a + b * b) &lt; r;
	}
}

abstract class FlyingObject {
	int x;
	int y;

	abstract boolean shootBy(int x, int y);
}

// =E6=95=8C=E4=BA=BA
interface Enemy {
	int getScore();
}

// =E5=A5=96=E5=8A=B1
interface Award {
	int DOUBLE_FIRE =3D 2;// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B
	int BOMB =3D 1; // =E6=89=8B=E9=9B=B7

	int getType();// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =
=E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0=E7=9A=84
}
</pre></div></div>=20
    <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh_s=
ourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#" style=3D"displ=
ay: none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http://pdf7.tar=
ena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_a=
nswer.html#">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/ind=
ex_answer.html#">pop-up</a></pre></div><pre class=3D"hide sh_javascript sni=
ppet-formatted sh_sourceCode"><ol class=3D"snippet-num"><li><span class=3D"=
sh_keyword">public</span> <span class=3D"sh_keyword">class</span> Shoot <sp=
an class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</span> vo=
id <span class=3D"sh_function">main</span><span class=3D"sh_symbol">(</span=
><span class=3D"sh_predef_func">String</span><span class=3D"sh_symbol">[]</=
span> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FlyingObject=
<span class=3D"sh_symbol">[]</span> objects <span class=3D"sh_symbol">=3D</=
span> <span class=3D"sh_keyword">new</span> FlyingObject<span class=3D"sh_s=
ymbol">[</span><span class=3D"sh_number">5</span><span class=3D"sh_symbol">=
];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objects<s=
pan class=3D"sh_symbol">[</span><span class=3D"sh_number">0</span><span cla=
ss=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> <span class=3D"sh_function">Airplane</span><span=
 class=3D"sh_symbol">(</span><span class=3D"sh_number">103</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_number">68</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_sy=
mbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_symbol"=
>);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objects<=
span class=3D"sh_symbol">[</span><span class=3D"sh_number">1</span><span cl=
ass=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> <span class=3D"sh_function">Airplane</span><span=
 class=3D"sh_symbol">(</span><span class=3D"sh_number">243</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_number">102</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_s=
ymbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_symbol=
">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objects=
<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><span c=
lass=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span clas=
s=3D"sh_keyword">new</span> <span class=3D"sh_function">Airplane</span><spa=
n class=3D"sh_symbol">(</span><span class=3D"sh_number">153</span><span cla=
ss=3D"sh_symbol">,</span> <span class=3D"sh_number">166</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"s=
h_symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_sym=
bol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obje=
cts<span class=3D"sh_symbol">[</span><span class=3D"sh_number">3</span><spa=
n class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span c=
lass=3D"sh_keyword">new</span> <span class=3D"sh_function">Bee</span><span =
class=3D"sh_symbol">(</span><span class=3D"sh_number">85</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_number">256</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"sh_sy=
mbol">);</span> </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ob=
jects<span class=3D"sh_symbol">[</span><span class=3D"sh_number">4</span><s=
pan class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span=
 class=3D"sh_keyword">new</span> <span class=3D"sh_function">Bee</span><spa=
n class=3D"sh_symbol">(</span><span class=3D"sh_number">256</span><span cla=
ss=3D"sh_symbol">,</span> <span class=3D"sh_number">287</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_number">20</span><span class=3D"s=
h_symbol">);</span> </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;int x <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">82</=
span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;int y <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_number">253</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</sp=
an> <span class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</=
span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> =
i <span class=3D"sh_symbol">&lt;</span> objects<span class=3D"sh_symbol">.<=
/span>length<span class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">+=
+)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FlyingObject obj <span =
class=3D"sh_symbol">=3D</span> objects<span class=3D"sh_symbol">[</span>i<s=
pan class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span>=
 <span class=3D"sh_symbol">(</span>obj<span class=3D"sh_symbol">.</span><sp=
an class=3D"sh_function">shootBy</span><span class=3D"sh_symbol">(</span>x<=
span class=3D"sh_symbol">,</span> y<span class=3D"sh_symbol">))</span> <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span>obj <span class=
=3D"sh_keyword">instanceof</span> Enemy<span class=3D"sh_symbol">)</span> <=
span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;Enemy enemy <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_symbol">(</span>Enemy<span class=3D"sh_symbol">)</span> obj<span cla=
ss=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.<=
/span><span class=3D"sh_function">println</span><span class=3D"sh_symbol">(=
</span><span class=3D"sh_string">"=E5=8A=A0=E5=88=86=EF=BC=9A"</span> <span=
 class=3D"sh_symbol">+</span> enemy<span class=3D"sh_symbol">.</span><span =
class=3D"sh_function">getScore</span><span class=3D"sh_symbol">());</span><=
/li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_=
symbol">(</span>obj <span class=3D"sh_keyword">instanceof</span> Award<span=
 class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Award award <span class=3D"sh_=
symbol">=3D</span> <span class=3D"sh_symbol">(</span>Award<span class=3D"sh=
_symbol">)</span> obj<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>o=
ut<span class=3D"sh_symbol">.</span><span class=3D"sh_function">println</sp=
an><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"=E5=A5=96=
=E5=8A=B1"</span> <span class=3D"sh_symbol">+</span> award<span class=3D"sh=
_symbol">.</span><span class=3D"sh_function">getType</span><span class=3D"s=
h_symbol">());</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbrack=
et">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>=
<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none;">=
&nbsp;</span></li><li><span class=3D"sh_comment">/** =E9=A3=9E=E6=9C=BA=E6=
=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9=E4=B9=9F=E6=98=AF=E6=95=8C=E4=BA=BA */</s=
pan></li><li><span class=3D"sh_keyword">class</span> Airplane <span class=
=3D"sh_keyword">extends</span> FlyingObject <span class=3D"sh_keyword">impl=
ements</span> Enemy <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;int width<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nb=
sp;&nbsp;&nbsp;int height<span class=3D"sh_symbol">;</span></li><li><span s=
tyle=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_keyword">public</span> <span class=3D"sh_function">Airplane</sp=
an><span class=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,</span=
> int y<span class=3D"sh_symbol">,</span> int w<span class=3D"sh_symbol">,<=
/span> int h<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</span>x <span class=
=3D"sh_symbol">=3D</span> x<span class=3D"sh_symbol">;</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this<=
/span><span class=3D"sh_symbol">.</span>y <span class=3D"sh_symbol">=3D</sp=
an> y<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;width <span class=3D"sh_symbol">=3D</span> w<span clas=
s=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;height <span class=3D"sh_symbol">=3D</span> h<span class=3D"sh_symbol=
">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</s=
pan></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> boolean <span class=
=3D"sh_function">shootBy</span><span class=3D"sh_symbol">(</span>int x<span=
 class=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol">)</span> <span=
 class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;int dx <span class=3D"sh_symbol">=3D</span> x <span class=3D"s=
h_symbol">-</span> <span class=3D"sh_keyword">this</span><span class=3D"sh_=
symbol">.</span>x<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int dy <span class=3D"sh_symbol">=3D</span=
> y <span class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</spa=
n><span class=3D"sh_symbol">.</span>y<span class=3D"sh_symbol">;</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">return</span> <span class=3D"sh_symbol">(</span>dx <span class=3D"sh_s=
ymbol">&gt;</span> <span class=3D"sh_number">0</span> <span class=3D"sh_sym=
bol">&amp;&amp;</span> dx <span class=3D"sh_symbol">&lt;</span> width<span =
class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">&amp;&amp;</span> <s=
pan class=3D"sh_symbol">(</span>dy <span class=3D"sh_symbol">&gt;</span> <s=
pan class=3D"sh_number">0</span> <span class=3D"sh_symbol">&amp;&amp;</span=
> dy <span class=3D"sh_symbol">&lt;</span> height<span class=3D"sh_symbol">=
);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</sp=
an></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;@Override</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_ke=
yword">public</span> int <span class=3D"sh_function">getScore</span><span c=
lass=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">r=
eturn</span> <span class=3D"sh_number">5</span><span class=3D"sh_symbol">;<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span>=
</li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D"displa=
y:none;">&nbsp;</span></li><li><span class=3D"sh_comment">/** =E5=B0=8F=E8=
=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9 =E4=B9=9F=E6=98=AF=E5=
=A5=96=E5=8A=B1 */</span></li><li><span class=3D"sh_keyword">class</span> B=
ee <span class=3D"sh_keyword">extends</span> FlyingObject <span class=3D"sh=
_keyword">implements</span> Award <span class=3D"sh_cbracket">{</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;int r<span class=3D"sh_symbol">;</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;int type<span class=3D"sh_symbol">;</span></li><li=
><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">public</span> <span class=3D"sh_function">Bee<=
/span><span class=3D"sh_symbol">(</span>int x<span class=3D"sh_symbol">,</s=
pan> int y<span class=3D"sh_symbol">,</span> int r<span class=3D"sh_symbol"=
>)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">this</span><span cla=
ss=3D"sh_symbol">.</span>x <span class=3D"sh_symbol">=3D</span> x<span clas=
s=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;<span class=3D"sh_keyword">this</span><span class=3D"sh_symbol">.</sp=
an>y <span class=3D"sh_symbol">=3D</span> y<span class=3D"sh_symbol">;</spa=
n></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_keyword">this</span><span class=3D"sh_symbol">.</span>r <span class=3D"sh=
_symbol">=3D</span> r<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type <span class=3D"sh_symbol">=3D</sp=
an> Award<span class=3D"sh_symbol">.</span>DOUBLE_FIRE<span class=3D"sh_sym=
bol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}=
</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> int <span class=
=3D"sh_function">getType</span><span class=3D"sh_symbol">()</span> <span cl=
ass=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_keyword">return</span> type<span class=3D"sh_sy=
mbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">=
}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> boolean <span cl=
ass=3D"sh_function">shootBy</span><span class=3D"sh_symbol">(</span>int x<s=
pan class=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol">)</span> <s=
pan class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;int a <span class=3D"sh_symbol">=3D</span> x <span class=3D=
"sh_symbol">-</span> <span class=3D"sh_keyword">this</span><span class=3D"s=
h_symbol">.</span>x<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int b <span class=3D"sh_symbol">=3D</spa=
n> y <span class=3D"sh_symbol">-</span> <span class=3D"sh_keyword">this</sp=
an><span class=3D"sh_symbol">.</span>y<span class=3D"sh_symbol">;</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">return</span> <span class=3D"sh_predef_var">Math</span><span class=3D=
"sh_symbol">.</span><span class=3D"sh_function">sqrt</span><span class=3D"s=
h_symbol">(</span>a <span class=3D"sh_symbol">*</span> a <span class=3D"sh_=
symbol">+</span> b <span class=3D"sh_symbol">*</span> b<span class=3D"sh_sy=
mbol">)</span> <span class=3D"sh_symbol">&lt;</span> r<span class=3D"sh_sym=
bol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}=
</span></li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D=
"display:none;">&nbsp;</span></li><li><span class=3D"sh_keyword">abstract</=
span> <span class=3D"sh_keyword">class</span> FlyingObject <span class=3D"s=
h_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int x<span class=3D"sh=
_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int y<span class=3D"sh_sy=
mbol">;</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">abstract</span> boolean =
<span class=3D"sh_function">shootBy</span><span class=3D"sh_symbol">(</span=
>int x<span class=3D"sh_symbol">,</span> int y<span class=3D"sh_symbol">);<=
/span></li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D"=
display:none;">&nbsp;</span></li><li><span class=3D"sh_comment">// =E6=95=
=8C=E4=BA=BA</span></li><li><span class=3D"sh_keyword">interface</span> Ene=
my <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int=
 <span class=3D"sh_function">getScore</span><span class=3D"sh_symbol">();</=
span></li><li><span class=3D"sh_cbracket">}</span></li><li><span style=3D"d=
isplay:none;">&nbsp;</span></li><li><span class=3D"sh_comment">// =E5=A5=96=
=E5=8A=B1</span></li><li><span class=3D"sh_keyword">interface</span> Award =
<span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int DO=
UBLE_FIRE <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">2<=
/span><span class=3D"sh_symbol">;</span><span class=3D"sh_comment">// =E5=
=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;in=
t BOMB <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">1</sp=
an><span class=3D"sh_symbol">;</span> <span class=3D"sh_comment">// =E6=89=
=8B=E9=9B=B7</span></li><li><span style=3D"display:none;">&nbsp;</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;int <span class=3D"sh_function">getType</span>=
<span class=3D"sh_symbol">();</span><span class=3D"sh_comment">// =E8=8E=B7=
=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =E8=BF=94=E5=9B=9E=E5=80=BC=
=E6=98=AF=E6=95=B4=E6=95=B0</span></li><li><span class=3D"sh_cbracket">}</s=
pan></li></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"=
display:none;">public class Shoot {
	public static void main(String[] args) {
		FlyingObject[] objects =3D new FlyingObject[5];
		objects[0] =3D new Airplane(103, 68, 20, 20);
		objects[1] =3D new Airplane(243, 102, 20, 20);
		objects[2] =3D new Airplane(153, 166, 20, 20);
		objects[3] =3D new Bee(85, 256, 20);=20
		objects[4] =3D new Bee(256, 287, 20);=20
		int x =3D 82;
		int y =3D 253;
		for (int i =3D 0; i &lt; objects.length; i++) {
			FlyingObject obj =3D objects[i];
			if (obj.shootBy(x, y)) {
				if (obj instanceof Enemy) {
					Enemy enemy =3D (Enemy) obj;
					System.out.println("=E5=8A=A0=E5=88=86=EF=BC=9A" + enemy.getScore());
				}
				if (obj instanceof Award) {
					Award award =3D (Award) obj;
					System.out.println("=E5=A5=96=E5=8A=B1" + award.getType());
				}
			}
		}
	}
}

/** =E9=A3=9E=E6=9C=BA=E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9=E4=B9=9F=E6=98=
=AF=E6=95=8C=E4=BA=BA */
class Airplane extends FlyingObject implements Enemy {
	int width;
	int height;

	public Airplane(int x, int y, int w, int h) {
		this.x =3D x;
		this.y =3D y;
		width =3D w;
		height =3D h;
	}

	public boolean shootBy(int x, int y) {
		int dx =3D x - this.x;
		int dy =3D y - this.y;
		return (dx &gt; 0 &amp;&amp; dx &lt; width) &amp;&amp; (dy &gt; 0 &amp;&a=
mp; dy &lt; height);
	}

	@Override
	public int getScore() {
		return 5;
	}
}

/** =E5=B0=8F=E8=9C=9C=E8=9C=82 =E6=98=AF=E9=A3=9E=E8=A1=8C=E7=89=A9 =E4=B9=
=9F=E6=98=AF=E5=A5=96=E5=8A=B1 */
class Bee extends FlyingObject implements Award {
	int r;
	int type;

	public Bee(int x, int y, int r) {
		this.x =3D x;
		this.y =3D y;
		this.r =3D r;
		type =3D Award.DOUBLE_FIRE;
	}

	public int getType() {
		return type;
	}

	public boolean shootBy(int x, int y) {
		int a =3D x - this.x;
		int b =3D y - this.y;
		return Math.sqrt(a * a + b * b) &lt; r;
	}
}

abstract class FlyingObject {
	int x;
	int y;

	abstract boolean shootBy(int x, int y);
}

// =E6=95=8C=E4=BA=BA
interface Enemy {
	int getScore();
}

// =E5=A5=96=E5=8A=B1
interface Award {
	int DOUBLE_FIRE =3D 2;// =E5=8F=8C=E5=80=8D=E7=81=AB=E5=8A=9B
	int BOMB =3D 1; // =E6=89=8B=E9=9B=B7

	int getType();// =E8=8E=B7=E5=8F=96=E5=A5=96=E5=8A=B1=E7=B1=BB=E5=9E=8B =
=E8=BF=94=E5=9B=9E=E5=80=BC=E6=98=AF=E6=95=B4=E6=95=B0
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/ind=
ex_answer.html#" class=3D"snippet-revealed snippet-toggle sh_url">=E9=9A=90=
=E8=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_acid snippet=
-wrap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.com.cn/tt=
s8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index_answer.html#" =
class=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pre></div></div>=20
   </div>=20
  </div> =20
=20
<div id=3D"qb-sougou-search" style=3D"display: none; opacity: 0;"><p>=E6=90=
=9C=E7=B4=A2</p><p class=3D"last-btn">=E5=A4=8D=E5=88=B6</p><iframe src=3D"=
cid:frame-302-dfb52468-61ce-44c4-94a1-e3ca1d5264e3@mhtml.blink"></iframe></=
div></body></html>
------MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index.files/index.css

@charset "utf-8";

div.source_style_exercise { font-family: =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=
=91, "Times New Roman"; font-size: 14px; min-width: 400px; padding: 10px 20=
px; color: rgb(0, 0, 0); }

div.source_style_exercise div.wordSection { width: 95%; padding: 5px; margi=
n: 5px; }

div.source_style_exercise h3 { clear: both; font-size: 18px; font-weight: b=
old; margin: 20px 0px; text-indent: 0px; }

div.source_style_exercise h4 { font-size: 16px; font-weight: bold; margin: =
10px 0px 5px 3px; text-indent: 21pt; color: purple; }

div.source_style_exercise p { margin: 3px; padding: 2px 2px 2px 30px; text-=
indent: 21pt; font-size: 14px; line-height: 25px; }

div.source_style_exercise p.answerTitle { clear: both; font-weight: bold; p=
adding: 10px 0px; font-size: 16px; }

div.source_style_exercise div.image { text-align: center; padding: 5px 0px;=
 }

div.source_style_exercise div.image img { max-width: 900px; }

div.source_style_exercise div.image > p { text-align: center; margin: 5px; =
padding: 3px; font-size: 12px; }

div.source_style_exercise div.table { text-align: center; padding: 5px 0px;=
 }

div.source_style_exercise div.table img { max-width: 900px; }

div.source_style_exercise div.table > p { text-align: center; margin: 5px; =
padding: 3px; font-size: 12px; }

div.source_style_exercise p.code, div.source_style_exercise pre { font-size=
: 14px; margin-left: 60px; }

div.source_style_exercise .code_level1 { text-indent: 21pt; }

div.source_style_exercise .code_level2 { text-indent: 42pt; }

div.source_style_exercise .code_level3 { text-indent: 63pt; }

div.source_style_exercise .code_level4 { text-indent: 84pt; }

div.source_style_exercise ul.list, div.source_style_exercise ol.list { marg=
in-left: 30px; }

div.source_style_exercise ol.list { padding-left: 45px; }

div.source_style_exercise ul.list li { padding-left: 10px; }

div.source_style_exercise ol.list li { padding-left: 5px; }

div.source_style_exercise p.emphasiz { font-weight: bold; font-style: itali=
c; }

div.source_style_exercise p.number { font-weight: bold; margin-top: 8px; ma=
rgin-bottom: 8px; }

div.source_style_exercise ul.index { margin: 0px 0px 20px 40px; font-size: =
12px; }

div.source_style_exercise ul.index li { padding: 0px; margin: 3px 50px 10px=
 0px; list-style-image: url("ph.gif"); list-style-type: none; }

div.source_style_exercise ul.index li a, div.source_style_exercise ul.index=
 li a:visited { color: blue; text-decoration: underline; }

div.source_style_exercise ul.index li a:hover { color: purple; }

div.source_style_exercise .highlighter { border: 2px solid rgb(221, 221, 22=
1); padding: 5px; background: rgb(238, 238, 238); }

div.source_style_exercise .command_help { display: none; }
------MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index.files/jquery.snippet.css

@charset "utf-8";

a.snippet-toggle { margin-right: 40px; }

.bold_code { font-weight: bold; font-size: 11pt; color: blue !important; }

.bold_code > span { font-family: =CE=A2=EF=BF=BD=EF=BF=BD=EF=BF=BD=C5=BA=EF=
=BF=BD; font-weight: bold; font-size: 11pt; color: blue !important; }

.sh_acid { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_acid .sh_sourceCode { background-color: rgb(238, 238, 238); color: rgb(=
0, 0, 0); font-weight: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_keyword { color: rgb(187, 121, 119); font-weigh=
t: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_type { color: rgb(128, 128, 192); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_string { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_regexp { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_comment { color: rgb(255, 128, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_number { color: rgb(128, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_preproc { color: rgb(0, 128, 192); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_symbol { color: rgb(255, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_function { color: rgb(0, 68, 102); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_url { color: rgb(166, 133, 0); font-weight: nor=
mal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_date { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_time { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_file { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_ip { color: rgb(166, 133, 0); font-weight: norm=
al; font-style: normal; }

.sh_acid .sh_sourceCode .sh_name { color: rgb(166, 133, 0); font-weight: no=
rmal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_variable { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_newfile { color: rgb(166, 133, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_difflines { color: rgb(187, 121, 119); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_selector { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_property { color: rgb(187, 121, 119); font-weig=
ht: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_value { color: rgb(166, 133, 0); font-weight: n=
ormal; font-style: normal; }

.sh_berries-dark { background: none; padding: 0px; margin: 0px; border: 0px=
 none; }

.sh_berries-dark .sh_sourceCode { background-color: rgb(128, 191, 255); col=
or: rgb(64, 0, 128); font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_keyword { color: rgb(63, 43, 240); font=
-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_type { color: rgb(63, 43, 240); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_string { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_regexp { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_specialchar { color: rgb(119, 55, 154);=
 font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_comment { color: rgb(223, 9, 89); font-=
weight: normal; font-style: italic; }

.sh_berries-dark .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_function { color: rgb(144, 17, 100); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_url { color: rgb(196, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_date { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_time { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_file { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_ip { color: rgb(196, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_name { color: rgb(196, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_variable { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_oldfile { color: rgb(119, 55, 154); fon=
t-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_newfile { color: rgb(196, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_difflines { color: rgb(63, 43, 240); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_selector { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_property { color: rgb(63, 43, 240); fon=
t-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_value { color: rgb(196, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_berries-light { background: none; padding: 0px; margin: 0px; border: 0p=
x none; }

.sh_berries-light .sh_sourceCode { background-color: rgb(215, 255, 255); co=
lor: rgb(71, 64, 109); font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_keyword { color: rgb(44, 174, 30); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_type { color: rgb(139, 81, 192); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_string { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_regexp { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_specialchar { color: rgb(95, 129, 179)=
; font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_comment { color: rgb(156, 60, 175); fo=
nt-weight: normal; font-style: italic; }

.sh_berries-light .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_symbol { color: rgb(210, 7, 59); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_function { color: rgb(144, 17, 100); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_cbracket { color: rgb(210, 7, 59); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_url { color: rgb(95, 129, 179); font-w=
eight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_date { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_time { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_file { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_ip { color: rgb(95, 129, 179); font-we=
ight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_name { color: rgb(95, 129, 179); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_variable { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_oldfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_newfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_difflines { color: rgb(44, 174, 30); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_selector { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_property { color: rgb(44, 174, 30); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_value { color: rgb(95, 129, 179); font=
-weight: normal; font-style: normal; }

.sh_bipolar { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_bipolar .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(209=
, 73, 166); font-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_keyword { color: rgb(238, 133, 226); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_type { color: rgb(170, 221, 139); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_string { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_regexp { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_specialchar { color: rgb(158, 244, 87); font=
-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_comment { color: rgb(53, 214, 229); font-wei=
ght: normal; font-style: italic; }

.sh_bipolar .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_preproc { color: rgb(7, 246, 191); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_symbol { color: rgb(52, 143, 239); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_function { color: rgb(213, 25, 147); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_cbracket { color: rgb(52, 143, 239); font-we=
ight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_url { color: rgb(158, 244, 87); font-weight:=
 normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_date { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_time { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_file { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_ip { color: rgb(158, 244, 87); font-weight: =
normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_name { color: rgb(158, 244, 87); font-weight=
: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_variable { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_oldfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_newfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_difflines { color: rgb(238, 133, 226); font-=
weight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_selector { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_property { color: rgb(238, 133, 226); font-w=
eight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_value { color: rgb(158, 244, 87); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_blacknblue .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(=
35, 70, 213); font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_keyword { color: rgb(30, 222, 220); font-=
weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_type { color: rgb(192, 108, 248); font-we=
ight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_string { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_regexp { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_specialchar { color: rgb(204, 198, 198); =
font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_comment { color: rgb(111, 178, 196); font=
-weight: normal; font-style: italic; }

.sh_blacknblue .sh_sourceCode .sh_number { color: rgb(196, 172, 96); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_preproc { color: rgb(128, 128, 255); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_symbol { color: rgb(204, 198, 198); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_function { color: rgb(28, 150, 237); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_cbracket { color: rgb(204, 198, 198); fon=
t-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_url { color: rgb(207, 198, 49); font-weig=
ht: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_date { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_time { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_file { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_ip { color: rgb(207, 198, 49); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_name { color: rgb(207, 198, 49); font-wei=
ght: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_variable { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_oldfile { color: rgb(204, 198, 198); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_newfile { color: rgb(207, 198, 49); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_difflines { color: rgb(30, 222, 220); fon=
t-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_selector { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_property { color: rgb(30, 222, 220); font=
-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_value { color: rgb(207, 198, 49); font-we=
ight: normal; font-style: normal; }

.sh_bright { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_bright .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(64, 30, 122); font-weight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_keyword { color: rgb(255, 48, 48); font-weigh=
t: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_type { color: rgb(247, 185, 44); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_string { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_regexp { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_specialchar { color: rgb(24, 97, 167); font-w=
eight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_comment { color: rgb(56, 173, 36); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_number { color: rgb(50, 186, 6); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_preproc { color: rgb(83, 116, 176); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_symbol { color: rgb(48, 48, 238); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_function { color: rgb(209, 28, 237); font-wei=
ght: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_cbracket { color: rgb(48, 48, 238); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_url { color: rgb(24, 97, 167); font-weight: n=
ormal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_date { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_time { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_file { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_ip { color: rgb(24, 97, 167); font-weight: no=
rmal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_name { color: rgb(24, 97, 167); font-weight: =
normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_oldfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_newfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_difflines { color: rgb(255, 48, 48); font-wei=
ght: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_property { color: rgb(255, 48, 48); font-weig=
ht: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_value { color: rgb(24, 97, 167); font-weight:=
 normal; font-style: normal; }

.sh_contrast { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_contrast .sh_sourceCode { background-color: rgb(237, 97, 4); color: rgb=
(0, 0, 255); font-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_string { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_regexp { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_specialchar { color: rgb(17, 248, 12); font=
-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_number { color: rgb(151, 26, 216); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_preproc { color: rgb(123, 68, 224); font-we=
ight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_symbol { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_function { color: rgb(255, 247, 0); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_cbracket { color: rgb(222, 222, 222); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_url { color: rgb(17, 248, 12); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_ip { color: rgb(17, 248, 12); font-weight: =
normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_name { color: rgb(17, 248, 12); font-weight=
: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_variable { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_oldfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_newfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font=
-weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_selector { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_value { color: rgb(17, 248, 12); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkblue .sh_sourceCode { background-color: rgb(0, 0, 64); color: rgb(1=
99, 199, 199); font-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_keyword { color: rgb(255, 255, 96); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_type { color: rgb(96, 255, 96); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_string { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_regexp { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_specialchar { color: rgb(255, 165, 0); font=
-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_comment { color: rgb(128, 160, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_number { color: rgb(66, 202, 217); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_preproc { color: rgb(255, 128, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_symbol { color: rgb(216, 233, 27); font-wei=
ght: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_cbracket { color: rgb(216, 233, 27); font-w=
eight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_url { color: rgb(255, 160, 160); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_date { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_time { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_file { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_ip { color: rgb(255, 160, 160); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_name { color: rgb(255, 160, 160); font-weig=
ht: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_oldfile { color: rgb(255, 165, 0); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_newfile { color: rgb(255, 160, 160); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_difflines { color: rgb(255, 255, 96); font-=
weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_property { color: rgb(255, 255, 96); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_value { color: rgb(255, 160, 160); font-wei=
ght: normal; font-style: normal; }

.sh_darkness { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkness .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_keyword { color: rgb(255, 255, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_string { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_regexp { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_specialchar { color: rgb(191, 191, 191); fo=
nt-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_darkness .sh_sourceCode .sh_number { color: rgb(97, 157, 231); font-wei=
ght: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_preproc { color: rgb(29, 163, 207); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_symbol { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_function { color: rgb(243, 70, 39); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_url { color: rgb(171, 171, 0); font-weight:=
 bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_date { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_time { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_file { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_ip { color: rgb(171, 171, 0); font-weight: =
bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_name { color: rgb(171, 171, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_oldfile { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_newfile { color: rgb(171, 171, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_difflines { color: rgb(255, 255, 0); font-w=
eight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_property { color: rgb(255, 255, 0); font-we=
ight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_value { color: rgb(171, 171, 0); font-weigh=
t: bold; font-style: normal; }

.sh_desert { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_desert .sh_sourceCode { background-color: rgb(175, 148, 126); color: rg=
b(255, 253, 236); font-weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_keyword { color: rgb(254, 248, 188); font-wei=
ght: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_type { color: rgb(254, 248, 188); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_string { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_regexp { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_specialchar { color: rgb(246, 246, 71); font-=
weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_comment { color: rgb(160, 0, 0); font-weight:=
 normal; font-style: italic; }

.sh_desert .sh_sourceCode .sh_number { color: rgb(62, 63, 37); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_preproc { color: rgb(131, 57, 20); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_symbol { color: rgb(102, 87, 79); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_function { color: rgb(243, 210, 102); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_cbracket { color: rgb(102, 87, 79); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_url { color: rgb(246, 246, 71); font-weight: =
normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_date { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_time { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_file { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_ip { color: rgb(246, 246, 71); font-weight: n=
ormal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_name { color: rgb(246, 246, 71); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_oldfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_newfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_difflines { color: rgb(254, 248, 188); font-w=
eight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_property { color: rgb(254, 248, 188); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_value { color: rgb(246, 246, 71); font-weight=
: normal; font-style: normal; }

.sh_dull { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_dull .sh_sourceCode { background-color: rgb(191, 191, 191); color: rgb(=
101, 101, 101); font-weight: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_keyword { color: rgb(53, 53, 53); font-weight: =
bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_type { color: rgb(50, 65, 198); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_string { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_regexp { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_specialchar { color: rgb(0, 85, 153); font-weig=
ht: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_comment { color: rgb(209, 29, 32); font-weight:=
 normal; font-style: italic; }

.sh_dull .sh_sourceCode .sh_number { color: rgb(22, 147, 13); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_preproc { color: rgb(0, 0, 51); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_symbol { color: rgb(34, 34, 34); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_function { color: rgb(56, 37, 92); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_cbracket { color: rgb(34, 34, 34); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_url { color: rgb(0, 85, 153); font-weight: norm=
al; font-style: normal; }

.sh_dull .sh_sourceCode .sh_date { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_time { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_file { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_ip { color: rgb(0, 85, 153); font-weight: norma=
l; font-style: normal; }

.sh_dull .sh_sourceCode .sh_name { color: rgb(0, 85, 153); font-weight: nor=
mal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_variable { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_oldfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_newfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_difflines { color: rgb(53, 53, 53); font-weight=
: bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_selector { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_property { color: rgb(53, 53, 53); font-weight:=
 bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_value { color: rgb(0, 85, 153); font-weight: no=
rmal; font-style: normal; }

.sh_easter { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_easter .sh_sourceCode { background-color: rgb(255, 255, 128); color: rg=
b(44, 123, 52); font-weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_keyword { color: rgb(29, 69, 214); font-weigh=
t: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_type { color: rgb(237, 15, 85); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_string { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_regexp { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_specialchar { color: rgb(202, 75, 227); font-=
weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_comment { color: rgb(36, 200, 21); font-weigh=
t: normal; font-style: italic; }

.sh_easter .sh_sourceCode .sh_number { color: rgb(225, 26, 112); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_preproc { color: rgb(21, 131, 177); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_symbol { color: rgb(250, 71, 0); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_function { color: rgb(29, 69, 214); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_cbracket { color: rgb(250, 71, 0); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_url { color: rgb(202, 75, 227); font-weight: =
normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_date { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_time { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_file { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_ip { color: rgb(202, 75, 227); font-weight: n=
ormal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_name { color: rgb(202, 75, 227); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_variable { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_oldfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_newfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_difflines { color: rgb(29, 69, 214); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_selector { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_property { color: rgb(29, 69, 214); font-weig=
ht: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_value { color: rgb(202, 75, 227); font-weight=
: normal; font-style: normal; }

.sh_emacs { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_emacs .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_keyword { color: rgb(156, 32, 238); font-weigh=
t: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_type { color: rgb(32, 137, 32); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_string { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_regexp { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_specialchar { color: rgb(189, 141, 139); font-=
weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_comment { color: rgb(172, 32, 32); font-weight=
: normal; font-style: italic; }

.sh_emacs .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_url { color: rgb(189, 141, 139); font-weight: =
normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_date { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_time { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_file { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_ip { color: rgb(189, 141, 139); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_name { color: rgb(189, 141, 139); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_oldfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_newfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_difflines { color: rgb(156, 32, 238); font-wei=
ght: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_property { color: rgb(156, 32, 238); font-weig=
ht: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_value { color: rgb(189, 141, 139); font-weight=
: normal; font-style: normal; }

.sh_golden { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_golden .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(221,=
 187, 0); font-weight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_keyword { color: rgb(255, 237, 138); font-wei=
ght: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_type { color: rgb(255, 237, 138); font-weight=
: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_comment { color: rgb(151, 131, 69); font-weig=
ht: normal; font-style: italic; }

.sh_golden .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_preproc { color: rgb(255, 221, 170); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_symbol { color: rgb(171, 171, 171); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_function { color: rgb(221, 187, 0); font-weig=
ht: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_cbracket { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_date { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_time { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_file { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_golden .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_variable { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_difflines { color: rgb(255, 237, 138); font-w=
eight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_selector { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_property { color: rgb(255, 237, 138); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_greenlcd { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_greenlcd .sh_sourceCode { background-color: rgb(0, 52, 0); color: rgb(0=
, 187, 0); font-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_keyword { color: rgb(0, 237, 0); font-weigh=
t: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_type { color: rgb(0, 237, 0); font-weight: =
normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_string { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_regexp { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_specialchar { color: rgb(223, 223, 223); fo=
nt-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_greenlcd .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_symbol { color: rgb(47, 231, 169); font-wei=
ght: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_function { color: rgb(192, 255, 115); font-=
weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_cbracket { color: rgb(47, 231, 169); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_url { color: rgb(223, 223, 223); font-weigh=
t: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_date { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_time { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_file { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_ip { color: rgb(223, 223, 223); font-weight=
: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_name { color: rgb(223, 223, 223); font-weig=
ht: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_variable { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_oldfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_newfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_difflines { color: rgb(0, 237, 0); font-wei=
ght: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_selector { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_property { color: rgb(0, 237, 0); font-weig=
ht: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_value { color: rgb(223, 223, 223); font-wei=
ght: normal; font-style: normal; }

.sh_ide-anjuta { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-anjuta .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_keyword { color: rgb(0, 0, 128); font-wei=
ght: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_type { color: rgb(0, 0, 128); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_string { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_regexp { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_specialchar { color: rgb(221, 187, 0); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-anjuta .sh_sourceCode .sh_number { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_preproc { color: rgb(103, 128, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_url { color: rgb(221, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_date { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_time { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_file { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_ip { color: rgb(221, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_name { color: rgb(221, 187, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_oldfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_newfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_difflines { color: rgb(0, 0, 128); font-w=
eight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_property { color: rgb(0, 0, 128); font-we=
ight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_value { color: rgb(221, 187, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-codewarrior { background: none; padding: 0px; margin: 0px; border: =
0px none; }

.sh_ide-codewarrior .sh_sourceCode { background-color: rgb(255, 255, 255); =
color: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_keyword { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_type { color: rgb(76, 115, 166); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_string { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_regexp { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_specialchar { color: rgb(102, 102, 1=
02); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_comment { color: rgb(179, 0, 0); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_preproc { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_url { color: rgb(102, 102, 102); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_date { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_time { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_file { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_ip { color: rgb(102, 102, 102); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_name { color: rgb(102, 102, 102); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_variable { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_oldfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_newfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_difflines { color: rgb(0, 0, 179); f=
ont-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_selector { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_property { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_value { color: rgb(102, 102, 102); f=
ont-weight: normal; font-style: normal; }

.sh_ide-devcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-devcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_comment { color: rgb(0, 0, 128); font-wei=
ght: normal; font-style: italic; }

.sh_ide-devcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-wei=
ght: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse { background: none; padding: 0px; margin: 0px; border: 0px =
none; }

.sh_ide-eclipse .sh_sourceCode { background-color: rgb(255, 255, 255); colo=
r: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_keyword { color: rgb(127, 0, 85); font-w=
eight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_type { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_string { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_regexp { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_comment { color: rgb(113, 122, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_preproc { color: rgb(63, 95, 191); font-=
weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_url { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_date { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_time { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_file { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_ip { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_name { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_variable { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_newfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_difflines { color: rgb(127, 0, 85); font=
-weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_selector { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_property { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_value { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-kdev { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_ide-kdev .sh_sourceCode { background-color: rgb(255, 255, 255); color: =
rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_keyword { color: rgb(96, 0, 0); font-weight=
: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_type { color: rgb(96, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: italic; }

.sh_ide-kdev .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_date { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_time { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_file { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_variable { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_difflines { color: rgb(96, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_selector { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_property { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-msvcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-msvcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_comment { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-msvcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_preproc { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-w=
eight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_kwrite .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_type { color: rgb(131, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-w=
eight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_comment { color: rgb(131, 129, 131); font-wei=
ght: normal; font-style: italic; }

.sh_kwrite .sh_sourceCode .sh_number { color: rgb(41, 40, 255); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_preproc { color: rgb(0, 130, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_function { color: rgb(1, 1, 129); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_matlab .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_string { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_regexp { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_url { color: rgb(128, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_ip { color: rgb(128, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_name { color: rgb(128, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_newfile { color: rgb(128, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_value { color: rgb(128, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_navy { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_navy .sh_sourceCode { background-color: rgb(0, 0, 53); color: rgb(0, 13=
9, 255); font-weight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_keyword { color: rgb(248, 197, 11); font-weight=
: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_type { color: rgb(225, 231, 47); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_comment { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: italic; }

.sh_navy .sh_sourceCode .sh_number { color: rgb(248, 127, 244); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_preproc { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_symbol { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_cbracket { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_date { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_time { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_file { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_variable { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_difflines { color: rgb(248, 197, 11); font-weig=
ht: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_selector { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_property { color: rgb(248, 197, 11); font-weigh=
t: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_nedit { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_nedit .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_type { color: rgb(165, 42, 42); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_string { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_regexp { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_specialchar { color: rgb(46, 139, 87); font-we=
ight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: italic; }

.sh_nedit .sh_sourceCode .sh_number { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_preproc { color: rgb(39, 64, 139); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_url { color: rgb(0, 100, 0); font-weight: norm=
al; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_ip { color: rgb(0, 100, 0); font-weight: norma=
l; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_name { color: rgb(0, 100, 0); font-weight: nor=
mal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_variable { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_oldfile { color: rgb(46, 139, 87); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_newfile { color: rgb(0, 100, 0); font-weight: =
normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_selector { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_value { color: rgb(0, 100, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_neon .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, 2=
55, 255); font-weight: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_keyword { color: rgb(0, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_type { color: rgb(255, 255, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_string { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_regexp { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_specialchar { color: rgb(205, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: n=
ormal; font-style: italic; }

.sh_neon .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_preproc { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_symbol { color: rgb(238, 88, 150); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_cbracket { color: rgb(238, 88, 150); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_url { color: rgb(205, 0, 255); font-weight: nor=
mal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_date { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_time { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_file { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_ip { color: rgb(205, 0, 255); font-weight: norm=
al; font-style: normal; }

.sh_neon .sh_sourceCode .sh_name { color: rgb(205, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_variable { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_oldfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_newfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_difflines { color: rgb(0, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_selector { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_property { color: rgb(0, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_value { color: rgb(205, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_night .sh_sourceCode { background-color: rgb(0, 0, 68); color: rgb(221,=
 0, 255); font-weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_type { color: rgb(241, 21, 124); font-weight: =
bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_specialchar { color: rgb(130, 214, 109); font-=
weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_number { color: rgb(142, 225, 25); font-weight=
: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_preproc { color: rgb(0, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_symbol { color: rgb(231, 238, 92); font-weight=
: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_function { color: rgb(255, 6, 205); font-weigh=
t: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_cbracket { color: rgb(231, 238, 92); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_variable { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_oldfile { color: rgb(130, 214, 109); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_selector { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-wei=
ght: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_pablo .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, =
255, 255); font-weight: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_keyword { color: rgb(192, 192, 0); font-weight=
: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_type { color: rgb(0, 192, 0); font-weight: bol=
d; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_string { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_regexp { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_comment { color: rgb(128, 128, 128); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_number { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_preproc { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_function { color: rgb(255, 34, 185); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_url { color: rgb(0, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_date { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_time { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_file { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_ip { color: rgb(0, 255, 255); font-weight: nor=
mal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_name { color: rgb(0, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_variable { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_newfile { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_difflines { color: rgb(192, 192, 0); font-weig=
ht: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_selector { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_property { color: rgb(192, 192, 0); font-weigh=
t: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_value { color: rgb(0, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_peachpuff { background: none; padding: 0px; margin: 0px; border: 0px no=
ne; }

.sh_peachpuff .sh_sourceCode { background-color: rgb(255, 218, 185); color:=
 rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-we=
ight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_type { color: rgb(46, 139, 87); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_string { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_regexp { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_specialchar { color: rgb(106, 90, 205); fo=
nt-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_comment { color: rgb(64, 96, 144); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_number { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_preproc { color: rgb(205, 0, 205); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_function { color: rgb(82, 28, 199); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_url { color: rgb(192, 0, 88); font-weight:=
 normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_ip { color: rgb(192, 0, 88); font-weight: =
normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_name { color: rgb(192, 0, 88); font-weight=
: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_variable { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_oldfile { color: rgb(106, 90, 205); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_newfile { color: rgb(192, 0, 88); font-wei=
ght: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-=
weight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_selector { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_value { color: rgb(192, 0, 88); font-weigh=
t: normal; font-style: normal; }

.sh_print { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_print .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-weig=
ht: normal; font-style: italic; }

.sh_print .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_print .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_print .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_print .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_print .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_rand01 { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_rand01 .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(18, 27, 40); font-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_keyword { color: rgb(10, 127, 109); font-weig=
ht: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_type { color: rgb(196, 38, 56); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_string { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_regexp { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_specialchar { color: rgb(167, 100, 203); font=
-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-wei=
ght: normal; font-style: italic; }

.sh_rand01 .sh_sourceCode .sh_number { color: rgb(13, 163, 68); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_preproc { color: rgb(98, 10, 198); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_symbol { color: rgb(0, 0, 222); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 222); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_url { color: rgb(43, 131, 186); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_date { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_time { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_file { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_ip { color: rgb(43, 131, 186); font-weight: n=
ormal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_name { color: rgb(43, 131, 186); font-weight:=
 normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_variable { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_oldfile { color: rgb(167, 100, 203); font-wei=
ght: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_newfile { color: rgb(43, 131, 186); font-weig=
ht: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_difflines { color: rgb(10, 127, 109); font-we=
ight: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_selector { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_property { color: rgb(10, 127, 109); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_value { color: rgb(43, 131, 186); font-weight=
: normal; font-style: normal; }

.sh_the { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_the .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_type { color: rgb(136, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_string { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_regexp { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: no=
rmal; font-style: italic; }

.sh_the .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_preproc { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_url { color: rgb(0, 0, 136); font-weight: normal=
; font-style: normal; }

.sh_the .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_ip { color: rgb(0, 0, 136); font-weight: normal;=
 font-style: normal; }

.sh_the .sh_sourceCode .sh_name { color: rgb(0, 0, 136); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_the .sh_sourceCode .sh_newfile { color: rgb(0, 0, 136); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_value { color: rgb(0, 0, 136); font-weight: norm=
al; font-style: normal; }

.sh_typical { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_typical .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_specialchar { color: rgb(196, 45, 168); font=
-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-we=
ight: normal; font-style: italic; }

.sh_typical .sh_sourceCode .sh_number { color: rgb(169, 0, 169); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_preproc { color: rgb(0, 184, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_variable { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_oldfile { color: rgb(196, 45, 168); font-wei=
ght: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weig=
ht: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_selector { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weigh=
t: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vampire { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_vampire .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_type { color: rgb(243, 94, 30); font-weight:=
 bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_string { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_regexp { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: italic; }

.sh_vampire .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_preproc { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_symbol { color: rgb(243, 230, 81); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_function { color: rgb(123, 199, 16); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_cbracket { color: rgb(243, 230, 81); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_url { color: rgb(187, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_ip { color: rgb(187, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_name { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_variable { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_newfile { color: rgb(187, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_selector { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_value { color: rgb(187, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_vim-dark { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_vim-dark .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_vim { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_vim .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); font-wei=
ght: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_vim .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_vim .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_whatis { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_whatis .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(0, 2=
55, 0); font-weight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_keyword { color: rgb(250, 90, 3); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_string { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_regexp { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_specialchar { color: rgb(255, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_number { color: rgb(255, 255, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_symbol { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_function { color: rgb(231, 33, 211); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_cbracket { color: rgb(0, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_url { color: rgb(255, 187, 0); font-weight: n=
ormal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_date { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_time { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_file { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_ip { color: rgb(255, 187, 0); font-weight: no=
rmal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_name { color: rgb(255, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_variable { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_oldfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_newfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_difflines { color: rgb(250, 90, 3); font-weig=
ht: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_selector { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_property { color: rgb(250, 90, 3); font-weigh=
t: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_value { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_whitengrey .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(105, 105, 105); font-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_keyword { color: rgb(105, 105, 105); font=
-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_type { color: rgb(105, 105, 105); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_string { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_regexp { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_specialchar { color: rgb(0, 136, 0); font=
-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_comment { color: rgb(19, 38, 162); font-w=
eight: normal; font-style: italic; }

.sh_whitengrey .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_preproc { color: rgb(71, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_url { color: rgb(0, 136, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_date { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_time { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_file { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_ip { color: rgb(0, 136, 0); font-weight: =
normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_name { color: rgb(0, 136, 0); font-weight=
: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_variable { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_oldfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_newfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_difflines { color: rgb(105, 105, 105); fo=
nt-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_selector { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_property { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_value { color: rgb(0, 136, 0); font-weigh=
t: normal; font-style: normal; }

.sh_zellner { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_zellner .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_string { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_regexp { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-=
weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_preproc { color: rgb(160, 32, 240); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_url { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_ip { color: rgb(255, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_name { color: rgb(255, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_variable { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_newfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-we=
ight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_selector { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_value { color: rgb(255, 0, 255); font-weight=
: normal; font-style: normal; }

.snippet-wrap { position: relative; }

:first-child + html .snippet-wrap { display: inline-block; }

* html .snippet-wrap { display: inline-block; }

.snippet-reveal { text-decoration: underline; }

.snippet-wrap .snippet-menu, .snippet-wrap .snippet-hide { position: absolu=
te; top: 10px; right: 15px; font-size: 0.9em; z-index: 1; background-color:=
 transparent; }

.snippet-wrap .snippet-hide { top: auto; bottom: 10px; }

:first-child + html .snippet-wrap .snippet-hide { bottom: 25px; }

* html .snippet-wrap .snippet-hide { bottom: 25px; }

.snippet-wrap .snippet-menu pre, .snippet-wrap .snippet-hide pre { backgrou=
nd-color: transparent; margin: 0px; padding: 0px; }

.snippet-wrap .snippet-menu a, .snippet-wrap .snippet-hide a { padding: 0px=
 5px; text-decoration: underline; }

.snippet-wrap pre.sh_sourceCode { padding: 1em; line-height: 1.8em; overflo=
w: auto; position: relative; border-radius: 15px; box-shadow: rgb(0, 0, 0) =
2px 2px 5px; }

.snippet-wrap pre.snippet-textonly { padding: 2em; }

:first-child + html .snippet-wrap pre.snippet-formatted { padding: 2em 1em;=
 }

* html .snippet-wrap pre.snippet-formatted { padding: 2em 1em; }

.snippet-reveal pre.sh_sourceCode { padding: 0.5em 1em; text-align: right; =
}

.snippet-wrap .snippet-num li { padding-left: 1.5em; }

.snippet-wrap .snippet-no-num { list-style: none; padding: 0.6em 1em; margi=
n: 0px; }

.snippet-wrap .snippet-no-num li { list-style: none; padding-left: 0px; }

.snippet-wrap .snippet-num { margin: 1em 0px 1em 1em; padding-left: 3em; }

.snippet-wrap .snippet-num li { list-style: decimal-leading-zero outside no=
ne; }

.snippet-wrap .snippet-no-num li.box { padding: 0px 6px; margin-left: -6px;=
 }

.snippet-wrap .snippet-num li.box { border: 1px solid; list-style-position:=
 inside; margin-left: -3em; padding-left: 6px; }

:first-child + html .snippet-wrap .snippet-num li.box { margin-left: -2.4em=
; }

* html .snippet-wrap .snippet-num li.box { margin-left: -2.4em; }

.snippet-wrap li.box-top { border-width: 1px 1px 0px !important; }

.snippet-wrap li.box-bot { border-width: 0px 1px 1px !important; }

.snippet-wrap li.box-mid { border-width: 0px 1px !important; }

.snippet-wrap .snippet-num li .box-sp { width: 18px; display: inline-block;=
 }

:first-child + html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

* html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

.snippet-wrap .snippet-no-num li.box { border: 1px solid; }

.snippet-wrap .snippet-no-num li .box-sp { display: none; }
------MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/OOP/DAY06/EXERCISE/01/index.files/image001.png

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
AAAASUVORK5CYII=
------MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0----
Content-Type: text/html
Content-ID: <frame-302-dfb52468-61ce-44c4-94a1-e3ca1d5264e3@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--FkGckE3dblGpx3I1B3TYQPT20zhwGOs4ipF51RlGc0------
