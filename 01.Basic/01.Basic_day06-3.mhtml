From: <Saved by Blink>
Subject: EXERCISE
Date: Thu, 15 Mar 2017 04:45:29 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv----"

------MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv----
Content-Type: text/html
Content-ID: <frame-279-07421570-ff04-454b-8a9b-92a471f084a0@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html

<html xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta http-equiv=3D"Cont=
ent-Type" content=3D"text/html; charset=3DUTF-8">=20
  <title>EXERCISE</title>=20
  =20
  =20
  =20
  =20
  <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/tts=
Page/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index.files/index.css" re=
l=3D"Stylesheet">=20
  <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/tts=
Page/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index.files/jquery.snippe=
t.css" rel=3D"Stylesheet">=20
 </head>=20
 <body>=20
  <div class=3D"source_style_exercise">=20
   <div>=20
    <h3>1 =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E6=95=B0=E7=BB=84</h3>=20
    <p>=E5=B0=81=E8=A3=85=E4=B8=80=E4=B8=AA=E6=96=B9=E6=B3=95generateArray=
=EF=BC=8C=E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=
=8C=87=E5=AE=9A=E9=95=BF=E5=BA=A6=E7=9A=84int=E6=95=B0=E7=BB=84=EF=BC=8C=E8=
=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA0=E5=88=B0=E6=
=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=
=B0=EF=BC=8C=E5=B9=B6=E5=B0=86=E8=AF=A5=E6=95=B0=E7=BB=84=E8=BF=94=E5=9B=9E=
=E3=80=82</p>=20
    <p class=3D"answerTitle">=E5=8F=82=E8=80=83=E7=AD=94=E6=A1=88</p>=20
    <p>=E9=A6=96=E5=85=88=EF=BC=8C=E5=88=86=E6=9E=90generateArray=E6=96=B9=
=E6=B3=95=E8=A6=81=E5=AE=9E=E7=8E=B0=E7=9A=84=E5=8A=9F=E8=83=BD=EF=BC=8C=E8=
=AF=A5=E6=96=B9=E6=B3=95=E8=A6=81=E6=B1=82=E7=94=9F=E6=88=90=E6=8C=87=E5=AE=
=9A=E9=95=BF=E5=BA=A6=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=E9=82=A3=E4=B9=88=
=EF=BC=8C=E6=8C=87=E5=AE=9A=E9=95=BF=E5=BA=A6=E8=A6=81=E4=BD=9C=E4=B8=BA=E6=
=96=B9=E6=B3=95=E7=9A=84=E5=8F=82=E6=95=B0=EF=BC=8C=E7=94=A8=E6=88=B7=E8=B0=
=83=E7=94=A8=E8=AF=A5=E6=96=B9=E6=B3=95=E6=97=B6=EF=BC=8C=E4=BC=A0=E5=85=A5=
=E6=8C=87=E5=AE=9A=E7=9A=84=E9=95=BF=E5=BA=A6=E5=8D=B3=E5=8F=AF=E3=80=82=E5=
=8F=A6=E5=A4=96=EF=BC=8C=E8=AF=A5=E6=96=B9=E6=B3=95=E8=BF=98=E8=A6=81=E6=B1=
=82=E6=95=B0=E7=BB=84=E4=B8=AD=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=8C=87=
=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=EF=BC=8C=E9=82=A3=E4=B9=88=EF=BC=8C=E6=
=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E4=B9=9F=E8=A6=81=E4=BD=9C=E4=B8=BA=E6=96=
=B9=E6=B3=95=E7=9A=84=E5=8F=82=E6=95=B0=EF=BC=8C=E8=BF=99=E6=A0=B7=E7=94=A8=
=E6=88=B7=E8=B0=83=E7=94=A8=E8=AF=A5=E6=96=B9=E6=B3=95=E6=97=B6=EF=BC=8C=E4=
=BC=A0=E5=85=A5=E8=BF=99=E4=B8=AA=E8=8C=83=E5=9B=B4=E7=9A=84=E5=80=BC=E5=8D=
=B3=E5=8F=AF=E3=80=82</p>=20
    <p>=E5=85=B6=E6=AC=A1=EF=BC=8C=E8=AF=A5=E6=96=B9=E6=B3=95=EF=BC=8C=E8=
=A6=81=E6=B1=82=E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E5=90=8E=E7=9A=84=E6=95=
=B0=E7=BB=84=EF=BC=8C=E6=A0=B9=E6=8D=AE=E8=A6=81=E6=B1=82=E6=88=91=E4=BB=AC=
=E5=B0=B1=E5=8F=AF=E4=BB=A5=E7=A1=AE=E5=AE=9A=E8=AF=A5=E6=96=B9=E6=B3=95=E7=
=9A=84=E8=BF=94=E5=9B=9E=E5=80=BC=E7=B1=BB=E5=9E=8B=E4=B8=BAint[]=E6=95=B0=
=E7=BB=84=E7=B1=BB=E5=9E=8B=E3=80=82</p>=20
    <p>=E6=9C=80=E5=90=8E=EF=BC=8C=E5=9C=A8=E5=AE=9E=E7=8E=B0generateArray=
=E6=96=B9=E6=B3=95=E3=80=82=E5=9C=A8=E5=AE=9E=E7=8E=B0=E8=AF=A5=E6=96=B9=E6=
=B3=95=E7=9A=84=E8=BF=87=E7=A8=8B=E4=B8=AD=EF=BC=8C=E6=B3=A8=E6=84=8F=E5=B0=
=86=E5=8F=82=E6=95=B0=E4=BD=BF=E7=94=A8=E5=88=B0=E6=96=B9=E6=B3=95=E4=B8=AD=
=E6=AD=A3=E7=A1=AE=E4=BD=8D=E7=BD=AE=E3=80=82</p>=20
    <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E5=AE=9A=E4=B9=
=89generateArray=E6=96=B9=E6=B3=95</p>=20
    <p>=E9=A6=96=E5=85=88=EF=BC=8C=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=AA=E5=
=90=8D=E4=B8=BAArrayUtil=E7=9A=84=E7=B1=BB=EF=BC=8C=E5=9C=A8=E8=AF=A5=E7=B1=
=BB=E4=B8=AD=E6=B7=BB=E5=8A=A0generateArray=E6=96=B9=E6=B3=95=EF=BC=8C=E4=
=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D""><pr=
e style=3D"display: none;"><a class=3D"snippet-copy sh_url" href=3D"http://=
pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXE=
RCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a class=3D"s=
nippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/J=
AVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#">text</a><a =
class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_sour=
ce/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#"=
>pop-up</a></pre></div><pre class=3D"code sh_javascript snippet-formatted s=
h_sourceCode"><ol class=3D"snippet-num"><li><span class=3D"sh_keyword">publ=
ic</span> <span class=3D"sh_keyword">class</span> ArrayUtil <span class=3D"=
sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_com=
ment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp=
; * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=
=87=E5=AE=9A=E9=95=BF=E5=BA=A6=E7=9A=84int=E6=95=B0=E7=BB=84=EF=BC=8C=E8=AF=
=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=8C=87=E5=AE=9A=
=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=B0=EF=BC=8C=E5=
=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84</span></li><li><span cl=
ass=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@=
param</span><span class=3D"sh_comment"> length</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=E5=AE=9A=E6=
=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=A6</span></li><li><span class=3D"sh=
_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param<=
/span><span class=3D"sh_comment"> max</span></li><li><span class=3D"sh_comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=
=9B=B4=E7=9A=84=E5=80=BC</span></li><li><span class=3D"sh_comment">&nbsp;&n=
bsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</span><span class=
=3D"sh_comment"> =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84</span></li><=
li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span class=
=3D"sh_keyword">static</span> int<span class=3D"sh_symbol">[]</span> <span =
class=3D"sh_function">generateArray</span><span class=3D"sh_symbol">(</span=
>int length<span class=3D"sh_symbol">,</span> int max<span class=3D"sh_symb=
ol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li>=
</ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:n=
one;">public class ArrayUtil {
	/**
	 * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=
=87=E5=AE=9A=E9=95=BF=E5=BA=A6=E7=9A=84int=E6=95=B0=E7=BB=84=EF=BC=8C=E8=AF=
=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=8C=87=E5=AE=9A=
=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=B0=EF=BC=8C=E5=
=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84
	 *=20
	 * @param length
	 *            =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=
=A6
	 * @param max
	 *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E5=80=BC
	 * @return =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
	 */
	public static int[] generateArray(int length, int max) {
	=09
	}
}
</pre></div></div>=20
    <p>=E6=9F=A5=E7=9C=8B=E4=B8=8A=E9=9D=A2=E4=BB=A3=E7=A0=81=E4=B8=AD=E5=
=AE=9A=E4=B9=89=E7=9A=84generateArray=E6=96=B9=E6=B3=95=EF=BC=8C=E5=85=B6=
=E4=B8=AD=EF=BC=8C=E5=8F=82=E6=95=B0length=E8=A1=A8=E7=A4=BA=E8=A6=81=E7=94=
=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=A6=EF=BC=8C=
=E5=8F=82=E6=95=B0max=E8=A1=A8=E7=A4=BA=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=
=E6=95=B0=E7=BB=84=E5=85=83=E7=B4=A0=E7=9A=84=E6=9C=80=E5=A4=A7=E8=8C=83=E5=
=9B=B4=E3=80=82=E5=8F=A6=E5=A4=96=EF=BC=8Cint[]=E8=A1=A8=E7=A4=BA=E6=95=B0=
=E7=BB=84=E7=9A=84=E8=BF=94=E5=9B=9E=E5=80=BC=E7=B1=BB=E5=9E=8B=E3=80=82</p=
>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E8=AE=BE=E7=BD=
=AE=E8=BF=94=E5=9B=9E=E5=80=BC</p>=20
    <p>=E5=9C=A8generateArray=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E5=AE=9A=
=E4=B9=89=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=E7=BB=84=E3=80=
=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a>=
<a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_sou=
rce/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#=
">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com=
.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_=
answer.html#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippe=
t-formatted sh_sourceCode"><ol class=3D"snippet-num"><li><span class=3D"sh_=
keyword">public</span> <span class=3D"sh_keyword">class</span> ArrayUtil <s=
pan class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbs=
p;&nbsp;&nbsp; * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=
=88=90=E6=8C=87=E5=AE=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=
=B0=E7=BB=84=EF=BC=8C=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=
=E4=B8=BA=E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=
=9C=BA=E6=95=B0=EF=BC=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=
=84</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </=
span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span>=
<span class=3D"sh_type">@param</span><span class=3D"sh_comment"> length</sp=
an></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *          =
  =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=A6</span></l=
i><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span cl=
ass=3D"sh_type">@param</span><span class=3D"sh_comment"> max</span></li><li=
><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=
=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=A7=E5=80=BC</span></li>=
<li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span clas=
s=3D"sh_type">@return</span><span class=3D"sh_comment"> =E7=94=9F=E6=88=90=
=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=3D"sh_comment">&nbsp=
;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</span> int<=
span class=3D"sh_symbol">[]</span> <span class=3D"sh_function">generateArra=
y</span><span class=3D"sh_symbol">(</span>int length<span class=3D"sh_symbo=
l">,</span> int max<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbr=
acket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E5=88=9B=E5=BB=BA=E9=95=BF=
=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li class=3D=
"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=
=3D"sh_symbol">[]</span> arr <span class=3D"sh_symbol">=3D</span> <span cla=
ss=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span>length<sp=
an class=3D"sh_symbol">];</span></li><li class=3D"bold_code">    </li><li c=
lass=3D"bold_code">   </li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=BF=94=E5=9B=9E=E7=
=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li class=3D"bold_cod=
e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywor=
d">return</span> arr<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_=
cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonly sh_sourceC=
ode" style=3D"display:none;">public class ArrayUtil {
	/**
	 * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=
=87=E5=AE=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=B0=E7=BB=84=
=EF=BC=8C=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=
=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=
=B0=EF=BC=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84
	 *=20
	 * @param length
	 *            =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=
=A6
	 * @param max
	 *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=
=A7=E5=80=BC
	 * @return =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
	 */
	public static int[] generateArray(int length, int max) {
#cold_bold		// =E5=88=9B=E5=BB=BA=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=
=E6=95=B0=E7=BB=84
#cold_bold		int[] arr =3D new int[length];
#cold_bold   =20
#cold_bold  =20
#cold_bold		// =E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=
=84
#cold_bold		return arr;
	}
}
</pre></div></div>=20
    <p>=E5=9C=A8=E7=BC=96=E5=86=99=E4=BB=A3=E7=A0=81=E6=97=B6=EF=BC=8C=E5=
=AE=9A=E4=B9=89=E5=AE=8C=E6=88=90=E6=95=B0=E7=BB=84=E5=90=8E=EF=BC=8C=E5=8F=
=AF=E4=BB=A5=E7=9B=B4=E6=8E=A5=E5=86=99=E5=87=BAreturn=E8=AF=AD=E5=8F=A5=EF=
=BC=8C=E8=BF=94=E5=9B=9E=E6=95=B0=E7=BB=84arr=EF=BC=8C=E8=BF=99=E6=A0=B7=E5=
=B0=B1=E9=99=A4=E5=8E=BB=E4=BA=86=E5=BC=80=E5=8F=91=E5=B7=A5=E5=85=B7=E6=8F=
=90=E7=A4=BA=E7=9A=84=E7=BC=96=E8=AF=91=E9=94=99=E8=AF=AF=E3=80=82</p>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=89=EF=BC=9A=E6=95=B0=E7=BB=
=84=E7=9A=84=E8=B5=8B=E5=80=BC</p>=20
    <p>=E4=BD=BF=E7=94=A8 for =E8=AF=AD=E5=8F=A5=E6=9E=84=E5=BB=BA=E4=B8=80=
=E4=B8=AA length=E6=AC=A1=E7=9A=84=E5=BE=AA=E7=8E=AF=EF=BC=8C=E5=9C=A8=E6=
=AF=8F=E6=AC=A1=E5=BE=AA=E7=8E=AF=E4=B8=AD=EF=BC=8C=E9=9A=8F=E6=9C=BA=E4=BA=
=A7=E7=94=9F=E4=B8=80=E4=B8=AA 0=E5=88=B0max=E4=B9=8B=E9=97=B4=E7=9A=84=E6=
=95=B4=E6=95=B0=EF=BC=8C=E5=B9=B6=E5=AD=98=E5=85=A5=E6=95=B0=E7=BB=84=E3=80=
=82</p>=20
    <p>=E6=AD=A4=E6=A1=88=E4=BE=8B=E4=B8=AD=EF=BC=8C=E4=BD=BF=E7=94=A8 Rand=
om =E7=B1=BB=E7=9A=84 nextInt=E6=96=B9=E6=B3=95=E4=BA=A7=E7=94=9F=E9=9A=8F=
=E6=9C=BA=E6=95=B0=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=
=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a>=
<a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_sou=
rce/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#=
">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com=
.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_=
answer.html#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippe=
t-formatted sh_sourceCode"><ol class=3D"snippet-num"><li class=3D"bold_code=
">import java<span class=3D"sh_symbol">.</span>util<span class=3D"sh_symbol=
">.</span>Random<span class=3D"sh_symbol">;</span></li><li><span style=3D"d=
isplay:none;">&nbsp;</span></li><li><span class=3D"sh_keyword">public</span=
> <span class=3D"sh_keyword">class</span> ArrayUtil <span class=3D"sh_cbrac=
ket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/*=
*</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E8=
=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=87=E5=AE=
=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=
=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=8C=87=E5=
=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=B0=EF=BC=
=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84</span></li><li><s=
pan class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span c=
lass=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_typ=
e">@param</span><span class=3D"sh_comment"> length</span></li><li><span cla=
ss=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=E5=AE=9A=
=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=A6</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@par=
am</span><span class=3D"sh_comment"> max</span></li><li><span class=3D"sh_c=
omment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=E5=AE=9A=E8=8C=83=
=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=A7=E5=80=BC</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@ret=
urn</span><span class=3D"sh_comment"> =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=
=E7=BB=84</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp=
; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">publ=
ic</span> <span class=3D"sh_keyword">static</span> int<span class=3D"sh_sym=
bol">[]</span> <span class=3D"sh_function">generateArray</span><span class=
=3D"sh_symbol">(</span>int length<span class=3D"sh_symbol">,</span> int max=
<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comm=
ent">// =E5=88=9B=E5=BB=BA=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=
=B0=E7=BB=84</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;int<span class=3D"sh_symbol">[]</span> arr <span class=3D"sh_symbol">=3D</=
span> <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[<=
/span>length<span class=3D"sh_symbol">];</span></li><li><span style=3D"disp=
lay:none;">&nbsp;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E5=BE=AA=E7=8E=AF=
=E7=94=9F=E6=88=90length=E4=B8=AA=E6=95=B0=E5=80=BC=EF=BC=8C=E5=B9=B6=E8=B5=
=8B=E5=80=BC=E7=BB=99=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0</span></=
li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
Random ran <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">=
new</span> <span class=3D"sh_function">Random</span><span class=3D"sh_symbo=
l">();</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_symb=
ol">(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_nu=
mber">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol=
">&lt;</span> length<span class=3D"sh_symbol">;</span> i<span class=3D"sh_s=
ymbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bol=
d_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;arr<span class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</spa=
n> <span class=3D"sh_symbol">=3D</span> ran<span class=3D"sh_symbol">.</spa=
n><span class=3D"sh_function">nextInt</span><span class=3D"sh_symbol">(</sp=
an>max<span class=3D"sh_symbol">);</span></li><li class=3D"bold_code">&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_comment">// =E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=
=BB=84</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"sh_keyword">return</span> arr<span class=3D"sh_symbol">;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li=
><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-=
textonly sh_sourceCode" style=3D"display:none;">#cold_boldimport java.util.=
Random;

public class ArrayUtil {
	/**
	 * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=
=87=E5=AE=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=B0=E7=BB=84=
=EF=BC=8C=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=
=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=
=B0=EF=BC=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84
	 *=20
	 * @param length
	 *            =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=
=A6
	 * @param max
	 *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=
=A7=E5=80=BC
	 * @return =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
	 */
	public static int[] generateArray(int length, int max) {
		// =E5=88=9B=E5=BB=BA=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=
=E7=BB=84
		int[] arr =3D new int[length];

#cold_bold		// =E5=BE=AA=E7=8E=AF=E7=94=9F=E6=88=90length=E4=B8=AA=E6=95=B0=
=E5=80=BC=EF=BC=8C=E5=B9=B6=E8=B5=8B=E5=80=BC=E7=BB=99=E6=95=B0=E7=BB=84=E7=
=9A=84=E5=85=83=E7=B4=A0
#cold_bold		Random ran =3D new Random();
#cold_bold		for (int i =3D 0; i &lt; length; i++) {
#cold_bold			arr[i] =3D ran.nextInt(max);
#cold_bold		}
		// =E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
		return arr;
	}
}
</pre></div></div>=20
    <p>=E6=B3=A8=E6=84=8F=EF=BC=9A=E6=AD=A4=E6=AD=A5=E9=AA=A4=E4=B8=AD=EF=
=BC=8C=E9=9C=80=E8=A6=81=E5=AF=BC=E5=85=A5java.util=E5=8C=85=E4=B8=8B=E7=9A=
=84Random=E7=B1=BB=E3=80=82</p>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E5=9B=9B=EF=BC=9A=E8=B0=83=E7=94=
=A8=E6=96=B9=E6=B3=95</p>=20
    <p>=E5=9C=A8main=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E8=B0=83=E7=94=A8g=
enerateArray=E6=96=B9=E6=B3=95=EF=BC=8C=E6=8E=A5=E6=94=B6=E6=96=B9=E6=B3=95=
=E7=9A=84=E8=BF=94=E5=9B=9E=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=E5=B9=B6=E8=
=BE=93=E5=87=BA=E8=AF=A5=E6=95=B0=E7=BB=84=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=
=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a>=
<a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_sou=
rce/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#=
">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com=
.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_=
answer.html#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippe=
t-formatted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span c=
lass=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Arrays<spa=
n class=3D"sh_symbol">;</span></li><li>import java<span class=3D"sh_symbol"=
>.</span>util<span class=3D"sh_symbol">.</span>Random<span class=3D"sh_symb=
ol">;</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li><s=
pan class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">class</sp=
an> ArrayUtil <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span class=3D"sh_com=
ment">&nbsp;&nbsp;&nbsp;&nbsp; * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=
=B0=E7=94=9F=E6=88=90=E6=8C=87=E5=AE=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=
=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=
=85=83=E7=B4=A0=E4=B8=BA=E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=
=84=E9=9A=8F=E6=9C=BA=E6=95=B0=EF=BC=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=
=E6=95=B0=E7=BB=84</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&n=
bsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&=
nbsp; * </span><span class=3D"sh_type">@param</span><span class=3D"sh_comme=
nt"> length</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nb=
sp; *            =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=
=BA=A6</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
 </span><span class=3D"sh_type">@param</span><span class=3D"sh_comment"> ma=
x</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *     =
       =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=A7=E5=
=80=BC</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
 </span><span class=3D"sh_type">@return</span><span class=3D"sh_comment"> =
=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">st=
atic</span> int<span class=3D"sh_symbol">[]</span> <span class=3D"sh_functi=
on">generateArray</span><span class=3D"sh_symbol">(</span>int length<span c=
lass=3D"sh_symbol">,</span> int max<span class=3D"sh_symbol">)</span> <span=
 class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;<span class=3D"sh_comment">// =E5=88=9B=E5=BB=BA=E9=95=BF=E5=
=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span>=
 arr <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</s=
pan> int<span class=3D"sh_symbol">[</span>length<span class=3D"sh_symbol">]=
;</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E5=
=BE=AA=E7=8E=AF=E7=94=9F=E6=88=90length=E4=B8=AA=E6=95=B0=E5=80=BC=EF=BC=8C=
=E5=B9=B6=E8=B5=8B=E5=80=BC=E7=BB=99=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=
=B4=A0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rando=
m ran <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</=
span> <span class=3D"sh_function">Random</span><span class=3D"sh_symbol">()=
;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i <span c=
lass=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=
=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> length<span=
 class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span> <span c=
lass=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr<span class=3D"sh_symbol">[</span>i<s=
pan class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> ran<s=
pan class=3D"sh_symbol">.</span><span class=3D"sh_function">nextInt</span><=
span class=3D"sh_symbol">(</span>max<span class=3D"sh_symbol">);</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_comment">// =E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E7=9A=84=E6=
=95=B0=E7=BB=84</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"sh_keyword">return</span> arr<span class=3D"sh_symbol">;=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span=
></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">public</span> <span class=3D"sh_keyword">static</span> void <span cla=
ss=3D"sh_function">main</span><span class=3D"sh_symbol">(</span><span class=
=3D"sh_predef_func">String</span><span class=3D"sh_symbol">[]</span> args<s=
pan class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><=
li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_comment">//=E8=B0=83=E7=94=A8=E7=94=9F=E6=88=90=E6=95=B0=E7=
=BB=84=E7=9A=84=E6=96=B9=E6=B3=95</span></li><li class=3D"bold_code">&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</=
span> arr<span class=3D"sh_symbol">=3D</span><span class=3D"sh_function">ge=
nerateArray</span><span class=3D"sh_symbol">(</span><span class=3D"sh_numbe=
r">6</span><span class=3D"sh_symbol">,</span><span class=3D"sh_number">100<=
/span><span class=3D"sh_symbol">);</span></li><li class=3D"bold_code">&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">//=E8=
=BE=93=E5=87=BA=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li=
 class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System=
<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><spa=
n class=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><sp=
an class=3D"sh_string">"=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84=E4=B8=
=BA=EF=BC=9A"</span><span class=3D"sh_symbol">+</span>Arrays<span class=3D"=
sh_symbol">.</span><span class=3D"sh_function">toString</span><span class=
=3D"sh_symbol">(</span>arr<span class=3D"sh_symbol">));</span></li><li clas=
s=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span=
></li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D=
"snippet-textonly sh_sourceCode" style=3D"display:none;">import java.util.A=
rrays;
import java.util.Random;

public class ArrayUtil {
	/**
	 * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=
=87=E5=AE=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=B0=E7=BB=84=
=EF=BC=8C=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=
=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=
=B0=EF=BC=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84
	 *=20
	 * @param length
	 *            =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=
=A6
	 * @param max
	 *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=
=A7=E5=80=BC
	 * @return =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
	 */
	public static int[] generateArray(int length, int max) {
		// =E5=88=9B=E5=BB=BA=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=
=E7=BB=84
		int[] arr =3D new int[length];

		// =E5=BE=AA=E7=8E=AF=E7=94=9F=E6=88=90length=E4=B8=AA=E6=95=B0=E5=80=BC=
=EF=BC=8C=E5=B9=B6=E8=B5=8B=E5=80=BC=E7=BB=99=E6=95=B0=E7=BB=84=E7=9A=84=E5=
=85=83=E7=B4=A0
		Random ran =3D new Random();
		for (int i =3D 0; i &lt; length; i++) {
			arr[i] =3D ran.nextInt(max);
		}
		// =E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
		return arr;
	}
#cold_bold	public static void main(String[] args) {
#cold_bold		//=E8=B0=83=E7=94=A8=E7=94=9F=E6=88=90=E6=95=B0=E7=BB=84=E7=9A=
=84=E6=96=B9=E6=B3=95
#cold_bold		int[] arr=3DgenerateArray(6,100);
#cold_bold		//=E8=BE=93=E5=87=BA=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=
=84
#cold_bold		System.out.println("=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=
=84=E4=B8=BA=EF=BC=9A"+Arrays.toString(arr));
#cold_bold	}
}
</pre></div></div>=20
    <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh_s=
ourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#" style=
=3D"display: none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http:/=
/pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EX=
ERCISE/01/index_answer.html#">text</a><a class=3D"snippet-window sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#">pop-up</a></pre></div><pre class=
=3D"hide sh_javascript snippet-formatted sh_sourceCode"><ol class=3D"snippe=
t-num"><li>import java<span class=3D"sh_symbol">.</span>util<span class=3D"=
sh_symbol">.</span>Arrays<span class=3D"sh_symbol">;</span></li><li>import =
java<span class=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span=
>Random<span class=3D"sh_symbol">;</span></li><li><span style=3D"display:no=
ne;">&nbsp;</span></li><li><span class=3D"sh_keyword">public</span> <span c=
lass=3D"sh_keyword">class</span> ArrayUtil <span class=3D"sh_cbracket">{</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span><=
/li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E8=AF=A5=E6=
=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=87=E5=AE=9A=E5=85=
=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=E8=AF=A5=
=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=8C=87=E5=AE=9A=E8=
=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=B0=EF=BC=8C=E5=B9=
=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"s=
h_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param=
</span><span class=3D"sh_comment"> length</span></li><li><span class=3D"sh_=
comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=E5=AE=9A=E6=95=B0=
=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=A6</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</span>=
<span class=3D"sh_comment"> max</span></li><li><span class=3D"sh_comment">&=
nbsp;&nbsp;&nbsp;&nbsp; *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=
=E7=9A=84=E6=9C=80=E5=A4=A7=E5=80=BC</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</span=
><span class=3D"sh_comment"> =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84<=
/span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> =
<span class=3D"sh_keyword">static</span> int<span class=3D"sh_symbol">[]</s=
pan> <span class=3D"sh_function">generateArray</span><span class=3D"sh_symb=
ol">(</span>int length<span class=3D"sh_symbol">,</span> int max<span class=
=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E5=
=88=9B=E5=BB=BA=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=E7=BB=84=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span cl=
ass=3D"sh_symbol">[]</span> arr <span class=3D"sh_symbol">=3D</span> <span =
class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span>length=
<span class=3D"sh_symbol">];</span></li><li><span style=3D"display:none;">&=
nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_comment">// =E5=BE=AA=E7=8E=AF=E7=94=9F=E6=88=90length=E4=B8=AA=
=E6=95=B0=E5=80=BC=EF=BC=8C=E5=B9=B6=E8=B5=8B=E5=80=BC=E7=BB=99=E6=95=B0=E7=
=BB=84=E7=9A=84=E5=85=83=E7=B4=A0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;Random ran <span class=3D"sh_symbol">=3D</span> <span=
 class=3D"sh_keyword">new</span> <span class=3D"sh_function">Random</span><=
span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_sy=
mbol">(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_=
number">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_symb=
ol">&lt;</span> length<span class=3D"sh_symbol">;</span> i<span class=3D"sh=
_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr<span clas=
s=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"=
sh_symbol">=3D</span> ran<span class=3D"sh_symbol">.</span><span class=3D"s=
h_function">nextInt</span><span class=3D"sh_symbol">(</span>max<span class=
=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=BF=94=E5=9B=9E=E7=
=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> arr=
<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_keyword">public</span> <span class=3D"sh_keyword">static</span> void <s=
pan class=3D"sh_function">main</span><span class=3D"sh_symbol">(</span><spa=
n class=3D"sh_predef_func">String</span><span class=3D"sh_symbol">[]</span>=
 args<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_comment">//=E8=B0=83=E7=94=A8=E7=94=9F=E6=88=90=E6=95=B0=E7=BB=84=E7=9A=84=
=E6=96=B9=E6=B3=95</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;int<span class=3D"sh_symbol">[]</span> arr<span class=3D"sh_symbol">=
=3D</span><span class=3D"sh_function">generateArray</span><span class=3D"sh=
_symbol">(</span><span class=3D"sh_number">6</span><span class=3D"sh_symbol=
">,</span><span class=3D"sh_number">100</span><span class=3D"sh_symbol">);<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_comment">//=E8=BE=93=E5=87=BA=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=
=BB=84</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Syste=
m<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><sp=
an class=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><s=
pan class=3D"sh_string">"=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84=E4=
=B8=BA=EF=BC=9A"</span><span class=3D"sh_symbol">+</span>Arrays<span class=
=3D"sh_symbol">.</span><span class=3D"sh_function">toString</span><span cla=
ss=3D"sh_symbol">(</span>arr<span class=3D"sh_symbol">));</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span cl=
ass=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonly =
sh_sourceCode" style=3D"display:none;">import java.util.Arrays;
import java.util.Random;

public class ArrayUtil {
	/**
	 * =E8=AF=A5=E6=96=B9=E6=B3=95=E5=AE=9E=E7=8E=B0=E7=94=9F=E6=88=90=E6=8C=
=87=E5=AE=9A=E5=85=83=E7=B4=A0=E6=95=B0=E7=9B=AE=E7=9A=84=E6=95=B0=E7=BB=84=
=EF=BC=8C=E8=AF=A5=E6=95=B0=E7=BB=84=E7=9A=84=E5=85=83=E7=B4=A0=E4=B8=BA=E6=
=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E5=86=85=E7=9A=84=E9=9A=8F=E6=9C=BA=E6=95=
=B0=EF=BC=8C=E5=B9=B6=E8=BF=94=E5=9B=9E=E8=AF=A5=E6=95=B0=E7=BB=84
	 *=20
	 * @param length
	 *            =E6=8C=87=E5=AE=9A=E6=95=B0=E7=BB=84=E7=9A=84=E9=95=BF=E5=BA=
=A6
	 * @param max
	 *            =E6=8C=87=E5=AE=9A=E8=8C=83=E5=9B=B4=E7=9A=84=E6=9C=80=E5=A4=
=A7=E5=80=BC
	 * @return =E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
	 */
	public static int[] generateArray(int length, int max) {
		// =E5=88=9B=E5=BB=BA=E9=95=BF=E5=BA=A6=E4=B8=BAlength=E7=9A=84=E6=95=B0=
=E7=BB=84
		int[] arr =3D new int[length];

		// =E5=BE=AA=E7=8E=AF=E7=94=9F=E6=88=90length=E4=B8=AA=E6=95=B0=E5=80=BC=
=EF=BC=8C=E5=B9=B6=E8=B5=8B=E5=80=BC=E7=BB=99=E6=95=B0=E7=BB=84=E7=9A=84=E5=
=85=83=E7=B4=A0
		Random ran =3D new Random();
		for (int i =3D 0; i &lt; length; i++) {
			arr[i] =3D ran.nextInt(max);
		}
		// =E8=BF=94=E5=9B=9E=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
		return arr;
	}
	public static void main(String[] args) {
		//=E8=B0=83=E7=94=A8=E7=94=9F=E6=88=90=E6=95=B0=E7=BB=84=E7=9A=84=E6=96=
=B9=E6=B3=95
		int[] arr=3DgenerateArray(6,100);
		//=E8=BE=93=E5=87=BA=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84
		System.out.println("=E7=94=9F=E6=88=90=E7=9A=84=E6=95=B0=E7=BB=84=E4=B8=
=BA=EF=BC=9A"+Arrays.toString(arr));
	}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCIS=
E/01/index_answer.html#" class=3D"snippet-revealed snippet-toggle sh_url">=
=E9=9A=90=E8=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_aci=
d snippet-wrap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.=
com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/ind=
ex_answer.html#" class=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pr=
e></div></div>=20
   </div>=20
   <div>=20
    <h3>2 =E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=
=E5=AE=9E=E7=8E=B0=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7</h3>=20
    <p>=E4=B8=BA=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E6=B7=BB=E5=
=8A=A0=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=E3=80=82=E6=B8=B8=E6=88=8F=E7=AD=
=89=E7=BA=A7=E8=AE=BE=E4=B8=BA=E4=B8=89=E7=AD=89=EF=BC=9A5=E3=80=817=E5=92=
=8C9=EF=BC=8C=E4=BB=A3=E8=A1=A8=E6=89=80=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0=E3=80=82=E6=B8=B8=E6=88=8F=
=E5=BC=80=E5=A7=8B=E6=97=B6=EF=BC=8C=E7=94=B1=E7=8E=A9=E5=AE=B6=E9=80=89=E6=
=8B=A9=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=EF=BC=885=EF=BC=8C7=EF=BC=8C9=EF=
=BC=89=E3=80=82=E5=A6=82=E6=9E=9C=E9=80=89=E6=8B=A97=EF=BC=8C=E5=88=99=E4=
=BC=9A=E9=9A=8F=E6=9C=BA=E4=BA=A7=E7=94=9F7=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=
=BC=8C=E7=84=B6=E5=90=8E=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E4=B8=80=E4=B8=
=AA=E5=AD=97=E7=AC=A6=E4=B8=B2=E5=8C=85=E5=90=AB7=E4=B8=AA=E5=AD=97=E7=AC=
=A6=EF=BC=8C=E7=9C=8B=E8=BF=997=E4=B8=AA=E5=AD=97=E7=AC=A6=E5=92=8C=E9=9A=
=8F=E6=9C=BA=E4=BA=A7=E7=94=9F=E7=9A=847=E4=B8=AA=E5=AD=97=E7=AC=A6=E6=AF=
=94=E8=BE=83=EF=BC=8C=E7=9C=8B=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=
=E5=B9=B6=E7=BB=9F=E8=AE=A1=E5=88=86=E6=95=B0=E3=80=82=E5=8F=A6=E5=A4=96=EF=
=BC=8C=E5=A6=82=E6=9E=9C=E8=BE=93=E5=85=A5=E5=85=B6=E5=AE=83=EF=BC=8C=E9=87=
=8D=E6=96=B0=E6=8F=90=E7=A4=BA=E8=BE=93=E5=85=A5=E6=B8=B8=E6=88=8F=E7=AD=89=
=E7=BA=A7=E3=80=82=E7=B3=BB=E7=BB=9F=E4=BA=A4=E4=BA=92=E6=83=85=E5=86=B5=E5=
=A6=82=E5=9B=BE-1=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"image">=20
     <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V=
06/FUNDAMENTAL/DAY06/EXERCISE/01/index.files/image001.png">=20
     <p>=E5=9B=BE- 1</p>=20
    </div>=20
    <p class=3D"answerTitle">=E5=8F=82=E8=80=83=E7=AD=94=E6=A1=88</p>=20
    <p>=E9=A6=96=E5=85=88=EF=BC=8C=E4=BD=BF=E7=94=A8=E5=BE=AA=E7=8E=AF=EF=
=BC=8C=E5=88=A4=E6=96=AD=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E7=AD=
=89=E7=BA=A7=E3=80=82=E5=A6=82=E6=9E=9C=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=
=E7=9A=84=E7=AD=89=E7=BA=A7=E4=B8=8D=E6=98=AF5=EF=BC=8C7=EF=BC=8C9=E5=BD=93=
=E4=B8=AD=E7=9A=84=E4=B8=80=E4=B8=AA=EF=BC=8C=E9=82=A3=E4=B9=88=E5=BE=AA=E7=
=8E=AF=E4=B8=80=E7=9B=B4=E8=BF=9B=E8=A1=8C=E4=B8=8B=E5=8E=BB=E3=80=82</p>=
=20
    <p>=E5=85=B6=E6=AC=A1=EF=BC=8C=E5=9C=A8=E5=BE=AA=E7=8E=AF=E4=B8=AD=EF=
=BC=8C=E4=BD=BF=E7=94=A8Scanner=E7=B1=BB=E7=9A=84nextInt=E6=96=B9=E6=B3=95=
=EF=BC=8C=E6=8E=A5=E6=94=B6=E6=8E=A7=E5=88=B6=E5=8F=B0=E8=BE=93=E5=85=A5=E7=
=9A=84=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=E3=80=82</p>=20
    <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E5=88=A4=E6=96=
=AD=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E7=AD=89=E7=BA=A7</p>=20
    <p>=E5=9C=A8=E8=AF=BE=E4=B8=8A=E6=A1=88=E4=BE=8B=E7=9A=84=E5=9F=BA=E7=
=A1=80=E4=B8=8A=EF=BC=8C=E9=A6=96=E5=85=88=EF=BC=8C=E5=9C=A8GuessingGame=E7=
=B1=BB=E7=9A=84main=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E4=BD=BF=E7=94=A8do=
-while=E5=BE=AA=E7=8E=AF=EF=BC=8C=E5=88=A4=E6=96=AD=E7=8E=A9=E5=AE=B6=E8=BE=
=93=E5=85=A5=E7=9A=84=E7=AD=89=E7=BA=A7=E3=80=82=E5=BE=AA=E7=8E=AF=E8=BF=9B=
=E8=A1=8C=E7=9A=84=E6=9D=A1=E4=BB=B6=E4=B8=BA=EF=BC=9A=E7=8E=A9=E5=AE=B6=E8=
=BE=93=E5=85=A5=E7=9A=84=E7=AD=89=E7=BA=A7=E4=B8=8D=E6=98=AF5=EF=BC=8C7=EF=
=BC=8C9=E5=BD=93=E4=B8=AD=E7=9A=84=E4=B8=80=E4=B8=AA=EF=BC=8C=E5=8D=B3=EF=
=BC=8C=E5=BD=93=E7=94=A8=E6=88=B7=E8=BE=93=E5=85=A5=E9=9D=9E5=EF=BC=8C7=EF=
=BC=8C9=E5=BD=93=E4=B8=AD=E4=B8=80=E4=B8=AA=E6=97=B6=EF=BC=8C=E5=BE=AA=E7=
=8E=AF=E7=BB=A7=E7=BB=AD=EF=BC=9B=E7=84=B6=E5=90=8E=EF=BC=8C=E6=9B=B4=E6=94=
=B9generate=E6=96=B9=E6=B3=95=E7=9A=84=E5=A3=B0=E6=98=8E=EF=BC=8C=E4=BC=A0=
=E5=85=A5=E7=AD=89=E7=BA=A7=E5=8F=82=E6=95=B0=EF=BC=8C=E4=BB=A3=E7=A0=81=E5=
=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a>=
<a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_sou=
rce/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#=
">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com=
.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_=
answer.html#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippe=
t-formatted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span c=
lass=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Scanner<sp=
an class=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp=
;</span></li><li><span class=3D"sh_keyword">public</span> <span class=3D"sh=
_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">{</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <spa=
n class=3D"sh_keyword">static</span> void <span class=3D"sh_function">main<=
/span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">Stri=
ng</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">=
)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=
=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"=
sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"sh_comment">// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=
=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result <=
span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> i=
nt<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><span=
 class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;Scanner scanner <span class=3D"sh_symbol">=3D</span> <span clas=
s=3D"sh_keyword">new</span> <span class=3D"sh_function">Scanner</span><span=
 class=3D"sh_symbol">(</span>System<span class=3D"sh_symbol">.</span><span =
class=3D"sh_keyword">in</span><span class=3D"sh_symbol">);</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symb=
ol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function=
">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string"=
>"GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=E7=8C=9C=E5=AD=97=E6=
=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81"</span><span class=3D"sh_symbol">);</span=
></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=
=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=EF=BC=8C=E9=BB=98=E8=AE=A4=E4=
=B8=BA5</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;int level <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_number">5</span><span class=3D"sh_symbol">;</span></li><li class=3D"=
bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_keyword">do</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"=
bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=
=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_cbracket">}</span> <span class=3D"sh_keyword">while</span> <span cla=
ss=3D"sh_symbol">(</span>level <span class=3D"sh_symbol">!=3D</span> <span =
class=3D"sh_number">5</span> <span class=3D"sh_symbol">&amp;&amp;</span> le=
vel <span class=3D"sh_symbol">!=3D</span> <span class=3D"sh_number">7</span=
> <span class=3D"sh_symbol">&amp;&amp;</span> level <span class=3D"sh_symbo=
l">!=3D</span> <span class=3D"sh_number">9</span><span class=3D"sh_symbol">=
);</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =
=E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</s=
pan></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol"=
>=3D</span> <span class=3D"sh_function">generate</span><span class=3D"sh_sy=
mbol">(</span>level<span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span=
>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function">println</=
span><span class=3D"sh_symbol">(</span>chs<span class=3D"sh_symbol">);</spa=
n></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span clas=
s=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D=
"sh_function">println</span><span class=3D"sh_symbol">(</span><span class=
=3D"sh_string">"GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=EF=BC=
=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=E4=B8=
=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=94=E2=
=80=94=E9=80=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_keyword">while</span> <span class=3D"sh_symbol">(</span><span class=3D"sh_=
keyword">true</span><span class=3D"sh_symbol">)</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_predef_func">String</span> inputStr=
 <span class=3D"sh_symbol">=3D</span> scanner<span class=3D"sh_symbol">.</s=
pan><span class=3D"sh_function">next</span><span class=3D"sh_symbol">().</s=
pan><span class=3D"sh_function">trim</span><span class=3D"sh_symbol">().</s=
pan><span class=3D"sh_function">toUpperCase</span><span class=3D"sh_symbol"=
>();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_sym=
bol">(</span><span class=3D"sh_string">"EXIT"</span><span class=3D"sh_symbo=
l">.</span><span class=3D"sh_function">equals</span><span class=3D"sh_symbo=
l">(</span>inputStr<span class=3D"sh_symbol">))</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbo=
l">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function"=
>println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string">=
"GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=84=E5=B0=9D=E8=AF=95=EF=
=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81"</span><span class=3D"sh_symbol">);</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break</span><span=
 class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li=
><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh=
_symbol">[]</span> input <span class=3D"sh_symbol">=3D</span> inputStr<span=
 class=3D"sh_symbol">.</span><span class=3D"sh_function">toCharArray</span>=
<span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result <span class=3D"sh_symbol">=
=3D</span> <span class=3D"sh_function">check</span><span class=3D"sh_symbol=
">(</span>chs<span class=3D"sh_symbol">,</span> input<span class=3D"sh_symb=
ol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_s=
ymbol">(</span>result<span class=3D"sh_symbol">[</span><span class=3D"sh_nu=
mber">0</span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=
=3D=3D</span> chs<span class=3D"sh_symbol">.</span>length<span class=3D"sh_=
symbol">)</span> <span class=3D"sh_cbracket">{</span><span class=3D"sh_comm=
ent">// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E6=83=85=E5=86=B5</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int score <span class=3D"sh_symbol">=3D</s=
pan> <span class=3D"sh_number">100</span> <span class=3D"sh_symbol">*</span=
> chs<span class=3D"sh_symbol">.</span>length <span class=3D"sh_symbol">-</=
span> count <span class=3D"sh_symbol">*</span> <span class=3D"sh_number">10=
</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Syst=
em<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><s=
pan class=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><=
span class=3D"sh_string">"GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=E7=8C=
=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=98=AF=
=EF=BC=9A"</span> <span class=3D"sh_symbol">+</span> score<span class=3D"sh=
_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">=
break</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbrac=
ket">}</span> <span class=3D"sh_keyword">else</span> <span class=3D"sh_cbra=
cket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count<span class=3D"sh_symbol">=
++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</=
span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function">print=
ln</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"Guess=
ingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9"</span> <span class=3D"sh_symbol">+<=
/span> result<span class=3D"sh_symbol">[</span><span class=3D"sh_number">1<=
/span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">+</span>=
 <span class=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E5=85=B6=
=E4=B8=AD"</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;<span class=3D"sh_symbol">+</span> result<span class=3D=
"sh_symbol">[</span><span class=3D"sh_number">0</span><span class=3D"sh_sym=
bol">]</span> <span class=3D"sh_symbol">+</span> <span class=3D"sh_string">=
"=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=E6=AD=A3=E7=A1=AE=
=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D"</span> <span class=3D"sh_=
symbol">+</span> count <span class=3D"sh_symbol">+</span> <span class=3D"sh=
_string">"=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89"</span=
><span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;scanner<span class=3D"sh_symbol">.</span><span class=3D"sh_function">clo=
se</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nb=
sp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none=
;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment"=
>/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =
=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh=
_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</spa=
n><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=
=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li class=3D"bold_code">&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_=
keyword">static</span> char<span class=3D"sh_symbol">[]</span> <span class=
=3D"sh_function">generate</span><span class=3D"sh_symbol">(</span>int level=
<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li=
><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> lette=
rs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_cbracket">{</span=
> <span class=3D"sh_string">'A'</span><span class=3D"sh_symbol">,</span> <s=
pan class=3D"sh_string">'B'</span><span class=3D"sh_symbol">,</span> <span =
class=3D"sh_string">'C'</span><span class=3D"sh_symbol">,</span> <span clas=
s=3D"sh_string">'D'</span><span class=3D"sh_symbol">,</span> <span class=3D=
"sh_string">'E'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_=
string">'F'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_stri=
ng">'G'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'H'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'I'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'J'</spa=
n><span class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_string">'K'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'L'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'M'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'N'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'O'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'=
P'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Q'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'</span=
><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'S'</span><sp=
an class=3D"sh_symbol">,</span> <span class=3D"sh_string">'T'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'U'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'V'</span><span class=3D"=
sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">=
'W'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'X'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Y'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Z'</span> <=
span class=3D"sh_cbracket">}</span><span class=3D"sh_symbol">;</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh=
_symbol">[]</span> flags <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> boolean<span class=3D"sh_symbol">[</span>letters=
<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">];</span>=
</li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;char<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D=
</span> <span class=3D"sh_keyword">new</span> char<span class=3D"sh_symbol"=
>[</span>level<span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span =
class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</span> <spa=
n class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> i <span cl=
ass=3D"sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</span>length<s=
pan class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span> <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int index<span class=3D"sh_symbol">;<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"sh_keyword">do</span> <span class=3D"sh_cbracket=
">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index <span class=3D"sh_symbol">=3D=
</span> <span class=3D"sh_symbol">(</span>int<span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_symbol">(</span><span class=3D"sh_predef_var">Math</=
span><span class=3D"sh_symbol">.</span><span class=3D"sh_function">random</=
span><span class=3D"sh_symbol">()</span> <span class=3D"sh_symbol">*</span>=
 <span class=3D"sh_symbol">(</span>letters<span class=3D"sh_symbol">.</span=
>length<span class=3D"sh_symbol">));</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket=
">}</span> <span class=3D"sh_keyword">while</span> <span class=3D"sh_symbol=
">(</span>flags<span class=3D"sh_symbol">[</span>index<span class=3D"sh_sym=
bol">]);</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=
=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;chs<span class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</s=
pan> <span class=3D"sh_symbol">=3D</span> letters<span class=3D"sh_symbol">=
[</span>index<span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags<span class=3D"s=
h_symbol">[</span>index<span class=3D"sh_symbol">]</span> <span class=3D"sh=
_symbol">=3D</span> <span class=3D"sh_keyword">true</span><span class=3D"sh=
_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> chs<span class=3D=
"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span=
 class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=
=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=
=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=
=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=
=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=
=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_c=
omment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</s=
pan><span class=3D"sh_comment"> chs</span></li><li><span class=3D"sh_commen=
t">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=
=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@=
param</span><span class=3D"sh_comment"> input</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=
=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><s=
pan class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"s=
h_type">@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=
=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BC=
int=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=
=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=
=AE</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *   =
      =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=
=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=
=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=
=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=
=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82</span></li><li><span class=3D"sh_comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</sp=
an> int<span class=3D"sh_symbol">[]</span> <span class=3D"sh_function">chec=
k</span><span class=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]<=
/span> chs<span class=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">=
[]</span> input<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracke=
t">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<spa=
n class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span>=
 <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span=
><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">for</span> <span class=3D"sh_symbol">(</span>int i <span class=3D"sh_sy=
mbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol=
">;</span> i <span class=3D"sh_symbol">&lt;</span> input<span class=3D"sh_s=
ymbol">.</span>length<span class=3D"sh_symbol">;</span> i<span class=3D"sh_=
symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int j <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"=
sh_symbol">;</span> j <span class=3D"sh_symbol">&lt;</span> chs<span class=
=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> j<span clas=
s=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_sy=
mbol">(</span>input<span class=3D"sh_symbol">[</span>i<span class=3D"sh_sym=
bol">]</span> <span class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_=
symbol">[</span>j<span class=3D"sh_symbol">])</span> <span class=3D"sh_cbra=
cket">{</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=
=AC=A6=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</span><span c=
lass=3D"sh_number">1</span><span class=3D"sh_symbol">]++;</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</s=
pan> <span class=3D"sh_symbol">(</span>i <span class=3D"sh_symbol">=3D=3D</=
span> j<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</sp=
an><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=
=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</=
span><span class=3D"sh_number">0</span><span class=3D"sh_symbol">]++;</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cb=
racket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> result<s=
pan class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li=
></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:=
none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
		Scanner scanner =3D new Scanner(System.in);
		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=
=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");

		// =E8=A1=A8=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=EF=BC=8C=E9=BB=
=98=E8=AE=A4=E4=B8=BA5
#cold_bold		int level =3D 5;
#cold_bold		do {
#cold_bold	=09
#cold_bold		} while (level !=3D 5 &amp;&amp; level !=3D 7 &amp;&amp; level =
!=3D 9);

		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
#cold_bold		char[] chs =3D generate(level);
		System.out.println(chs);
		System.out.println("GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=
=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=
=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=
=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
		while (true) {
			String inputStr =3D scanner.next().trim().toUpperCase();
			if ("EXIT".equals(inputStr)) {
				System.out.println("GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=
=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81");
				break;
			}

			char[] input =3D inputStr.toCharArray();
			result =3D check(chs, input);
			if (result[0] =3D=3D chs.length) {// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E6=83=85=E5=86=B5
				int score =3D 100 * chs.length - count * 10;
				System.out.println("GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=E7=8C=
=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=98=AF=
=EF=BC=9A" + score);
				break;
			} else {
				count++;
				System.out.println("GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9" + resu=
lt[1] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E5=85=B6=E4=B8=AD"
						+ result[0] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=
=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D" + count=
 + "=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
			}
		}
		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
#cold_bold	public static char[] generate(int level) {

		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
#cold_bold		char[] chs =3D new char[level];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre></div></div>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E6=8E=A5=E6=94=
=B6=E6=8E=A7=E5=88=B6=E5=8F=B0=E8=BE=93=E5=85=A5</p>=20
    <p>=E5=9C=A8=E5=BE=AA=E7=8E=AF=E4=B8=AD=EF=BC=8C=E9=A6=96=E5=85=88=E6=
=8F=90=E7=A4=BA=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E6=B8=B8=E6=88=8F=E7=AD=
=89=E7=BA=A7=EF=BC=8C=E7=84=B6=E5=90=8E=E4=BD=BF=E7=94=A8Scanner=E7=B1=BB=
=E7=9A=84nextInt=E6=96=B9=E6=B3=95=EF=BC=8C=E6=8E=A5=E6=94=B6=E7=8E=A9=E5=
=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E4=BF=A1=E6=81=AF=E3=80=82=E4=BB=A3=E7=A0=
=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a>=
<a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_sou=
rce/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#=
">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com=
.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_=
answer.html#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippe=
t-formatted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span c=
lass=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Scanner<sp=
an class=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp=
;</span></li><li><span class=3D"sh_keyword">public</span> <span class=3D"sh=
_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">{</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <spa=
n class=3D"sh_keyword">static</span> void <span class=3D"sh_function">main<=
/span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">Stri=
ng</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">=
)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=
=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"=
sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"sh_comment">// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=
=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result <=
span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> i=
nt<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><span=
 class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;Scanner scanner <span class=3D"sh_symbol">=3D</span> <span clas=
s=3D"sh_keyword">new</span> <span class=3D"sh_function">Scanner</span><span=
 class=3D"sh_symbol">(</span>System<span class=3D"sh_symbol">.</span><span =
class=3D"sh_keyword">in</span><span class=3D"sh_symbol">);</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symb=
ol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function=
">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string"=
>"GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=E7=8C=9C=E5=AD=97=E6=
=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81"</span><span class=3D"sh_symbol">);</span=
></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=
=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=EF=BC=8C=E9=BB=98=E8=AE=A4=E4=
=B8=BA5</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int =
level <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">5</spa=
n><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">do</span> <span class=3D"sh_cb=
racket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.=
</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function">pri=
nt</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"Guess=
ingGame&gt;=E8=AF=B7=E8=BE=93=E5=85=A5=E6=B8=B8=E6=88=8F=E7=BA=A7=E5=88=AB=
=EF=BC=885=E3=80=817=E3=80=819=EF=BC=89=EF=BC=9F"</span><span class=3D"sh_s=
ymbol">);</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;level <span class=3D"sh_symbol">=
=3D</span> scanner<span class=3D"sh_symbol">.</span><span class=3D"sh_funct=
ion">nextInt</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <=
span class=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(</span>le=
vel <span class=3D"sh_symbol">!=3D</span> <span class=3D"sh_number">5</span=
> <span class=3D"sh_symbol">&amp;&amp;</span> level <span class=3D"sh_symbo=
l">!=3D</span> <span class=3D"sh_number">7</span> <span class=3D"sh_symbol"=
>&amp;&amp;</span> level <span class=3D"sh_symbol">!=3D</span> <span class=
=3D"sh_number">9</span><span class=3D"sh_symbol">);</span></li><li><span st=
yle=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span></li><li>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> c=
hs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_function">generat=
e</span><span class=3D"sh_symbol">(</span>level<span class=3D"sh_symbol">);=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span=
 class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span cla=
ss=3D"sh_function">println</span><span class=3D"sh_symbol">(</span>chs<span=
 class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_sy=
mbol">.</span><span class=3D"sh_function">println</span><span class=3D"sh_s=
ymbol">(</span><span class=3D"sh_string">"GuessingGame&gt;=E6=B8=B8=E6=88=
=8F=E5=BC=80=E5=A7=8B=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=
=E7=8C=9C=E7=9A=845=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=
=EF=BC=88exit=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89"</span><span cla=
ss=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(=
</span><span class=3D"sh_keyword">true</span><span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_predef_fun=
c">String</span> inputStr <span class=3D"sh_symbol">=3D</span> scanner<span=
 class=3D"sh_symbol">.</span><span class=3D"sh_function">next</span><span c=
lass=3D"sh_symbol">().</span><span class=3D"sh_function">trim</span><span c=
lass=3D"sh_symbol">().</span><span class=3D"sh_function">toUpperCase</span>=
<span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</sp=
an> <span class=3D"sh_symbol">(</span><span class=3D"sh_string">"EXIT"</spa=
n><span class=3D"sh_symbol">.</span><span class=3D"sh_function">equals</spa=
n><span class=3D"sh_symbol">(</span>inputStr<span class=3D"sh_symbol">))</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Syst=
em<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><s=
pan class=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><=
span class=3D"sh_string">"GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=
=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81"</span><span clas=
s=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_ke=
yword">break</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_cbracket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;char<span class=3D"sh_symbol">[]</span> input <span class=3D"sh_symbol">=
=3D</span> inputStr<span class=3D"sh_symbol">.</span><span class=3D"sh_func=
tion">toCharArray</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result <s=
pan class=3D"sh_symbol">=3D</span> <span class=3D"sh_function">check</span>=
<span class=3D"sh_symbol">(</span>chs<span class=3D"sh_symbol">,</span> inp=
ut<span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</s=
pan> <span class=3D"sh_symbol">(</span>result<span class=3D"sh_symbol">[</s=
pan><span class=3D"sh_number">0</span><span class=3D"sh_symbol">]</span> <s=
pan class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_symbol">.</span>=
length<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</spa=
n><span class=3D"sh_comment">// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=
=84=E6=83=85=E5=86=B5</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int score <span c=
lass=3D"sh_symbol">=3D</span> <span class=3D"sh_number">100</span> <span cl=
ass=3D"sh_symbol">*</span> chs<span class=3D"sh_symbol">.</span>length <spa=
n class=3D"sh_symbol">-</span> count <span class=3D"sh_symbol">*</span> <sp=
an class=3D"sh_number">10</span><span class=3D"sh_symbol">;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=
=3D"sh_symbol">.</span><span class=3D"sh_function">println</span><span clas=
s=3D"sh_symbol">(</span><span class=3D"sh_string">"GuessingGame&gt;=E6=81=
=AD=E5=96=9C=E4=BD=A0=E7=8C=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=
=E5=BE=97=E5=88=86=E6=98=AF=EF=BC=9A"</span> <span class=3D"sh_symbol">+</s=
pan> score<span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"sh_cbracket">}</span> <span class=3D"sh_keyword">else</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coun=
t<span class=3D"sh_symbol">++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<s=
pan class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span =
class=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><span=
 class=3D"sh_string">"GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9"</span> <=
span class=3D"sh_symbol">+</span> result<span class=3D"sh_symbol">[</span><=
span class=3D"sh_number">1</span><span class=3D"sh_symbol">]</span> <span c=
lass=3D"sh_symbol">+</span> <span class=3D"sh_string">"=E4=B8=AA=E5=AD=97=
=E7=AC=A6=EF=BC=8C=E5=85=B6=E4=B8=AD"</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_symbol">+<=
/span> result<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0<=
/span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">+</span>=
 <span class=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=
=E7=BD=AE=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D=
"</span> <span class=3D"sh_symbol">+</span> count <span class=3D"sh_symbol"=
>+</span> <span class=3D"sh_string">"=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=
=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanner<span class=3D"sh_symbol">.</span><sp=
an class=3D"sh_function">close</span><span class=3D"sh_symbol">();</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li=
><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_comment">/**</span></li><li><span class=3D"sh_comment">=
&nbsp;&nbsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=
=A6=81=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span=
></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li=
><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span cla=
ss=3D"sh_type">@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=
=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li>=
<li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span class=
=3D"sh_keyword">static</span> char<span class=3D"sh_symbol">[]</span> <span=
 class=3D"sh_function">generate</span><span class=3D"sh_symbol">(</span>int=
 level<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</spa=
n></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span>=
 letters <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_cbracket">{=
</span> <span class=3D"sh_string">'A'</span><span class=3D"sh_symbol">,</sp=
an> <span class=3D"sh_string">'B'</span><span class=3D"sh_symbol">,</span> =
<span class=3D"sh_string">'C'</span><span class=3D"sh_symbol">,</span> <spa=
n class=3D"sh_string">'D'</span><span class=3D"sh_symbol">,</span> <span cl=
ass=3D"sh_string">'E'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'F'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'G'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'H'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'I'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'=
J'</span><span class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"sh_string">'K'</span><span class=3D"sh_symbol">,</span> <span =
class=3D"sh_string">'L'</span><span class=3D"sh_symbol">,</span> <span clas=
s=3D"sh_string">'M'</span><span class=3D"sh_symbol">,</span> <span class=3D=
"sh_string">'N'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_=
string">'O'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_stri=
ng">'P'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'Q'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'S'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'T'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'U'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'V'</span><span clas=
s=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_str=
ing">'W'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string"=
>'X'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Y'=
</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Z'</sp=
an> <span class=3D"sh_cbracket">}</span><span class=3D"sh_symbol">;</span><=
/li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean<span class=
=3D"sh_symbol">[]</span> flags <span class=3D"sh_symbol">=3D</span> <span c=
lass=3D"sh_keyword">new</span> boolean<span class=3D"sh_symbol">[</span>let=
ters<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">];</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span clas=
s=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span> <span cl=
ass=3D"sh_keyword">new</span> char<span class=3D"sh_symbol">[</span>level<s=
pan class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_symb=
ol">(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_nu=
mber">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol=
">&lt;</span> chs<span class=3D"sh_symbol">.</span>length<span class=3D"sh_=
symbol">;</span> i<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;int index<span class=3D"sh_symbol">;</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_keyword">do</span> <span class=3D"sh_cbracket">{</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;index <span class=3D"sh_symbol">=3D</span> <span cl=
ass=3D"sh_symbol">(</span>int<span class=3D"sh_symbol">)</span> <span class=
=3D"sh_symbol">(</span><span class=3D"sh_predef_var">Math</span><span class=
=3D"sh_symbol">.</span><span class=3D"sh_function">random</span><span class=
=3D"sh_symbol">()</span> <span class=3D"sh_symbol">*</span> <span class=3D"=
sh_symbol">(</span>letters<span class=3D"sh_symbol">.</span>length<span cla=
ss=3D"sh_symbol">));</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span=
 class=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(</span>flags<=
span class=3D"sh_symbol">[</span>index<span class=3D"sh_symbol">]);</span><=
span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<span=
 class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span clas=
s=3D"sh_symbol">=3D</span> letters<span class=3D"sh_symbol">[</span>index<s=
pan class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags<span class=3D"sh_symbol">[</sp=
an>index<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</s=
pan> <span class=3D"sh_keyword">true</span><span class=3D"sh_symbol">;</spa=
n></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">return</span> chs<span class=3D"sh_symbol">;</=
span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span><=
/li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span class=3D"sh_co=
mment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=
=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=
=8B=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=
=E5=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=
=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=
=94=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li><span class=3D"sh_comment">&n=
bsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&=
nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</span><span class=
=3D"sh_comment"> chs</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;=
&nbsp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=
=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment"=
>&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</span><sp=
an class=3D"sh_comment"> input</span></li><li><span class=3D"sh_comment">&n=
bsp;&nbsp;&nbsp;&nbsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=
=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh=
_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return=
</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=
=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=
=BB=84 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=
=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><l=
i><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=94=A8=
=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=
=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=
=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=
=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=
=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=
=E7=A1=AE)=E3=80=82</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&=
nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">public</span> <span class=3D"sh_keyword">static</span> int<span class=
=3D"sh_symbol">[]</span> <span class=3D"sh_function">check</span><span clas=
s=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]</span> chs<span cl=
ass=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">[]</span> input<sp=
an class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symb=
ol">[]</span> result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh=
_keyword">new</span> int<span class=3D"sh_symbol">[</span><span class=3D"sh=
_number">2</span><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <sp=
an class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</span> <=
span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> i <span=
 class=3D"sh_symbol">&lt;</span> input<span class=3D"sh_symbol">.</span>len=
gth<span class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span>=
 <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</=
span> <span class=3D"sh_symbol">(</span>int j <span class=3D"sh_symbol">=3D=
</span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span=
> j <span class=3D"sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</s=
pan>length<span class=3D"sh_symbol">;</span> j<span class=3D"sh_symbol">++)=
</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span>input=
<span class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span=
 class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_symbol">[</span>j<s=
pan class=3D"sh_symbol">])</span> <span class=3D"sh_cbracket">{</span><span=
 class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;result<span class=3D"sh_symbol">[</span><span class=3D"sh_number"=
>1</span><span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=
=3D"sh_symbol">(</span>i <span class=3D"sh_symbol">=3D=3D</span> j<span cla=
ss=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span><span class=
=3D"sh_comment">// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=90=A6=
=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</span><span c=
lass=3D"sh_number">0</span><span class=3D"sh_symbol">]++;</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_keyword">break</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> result<span class=3D=
"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li><span class=3D"sh_cbracket">}</span></li></ol></pre>=
<pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">impor=
t java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
		Scanner scanner =3D new Scanner(System.in);
		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=
=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");

		// =E8=A1=A8=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=EF=BC=8C=E9=BB=
=98=E8=AE=A4=E4=B8=BA5
		int level =3D 5;
		do {
#cold_bold			System.out.print("GuessingGame&gt;=E8=AF=B7=E8=BE=93=E5=85=A5=
=E6=B8=B8=E6=88=8F=E7=BA=A7=E5=88=AB=EF=BC=885=E3=80=817=E3=80=819=EF=BC=89=
=EF=BC=9F");
#cold_bold			level =3D scanner.nextInt();
		} while (level !=3D 5 &amp;&amp; level !=3D 7 &amp;&amp; level !=3D 9);

		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3D generate(level);
		System.out.println(chs);
		System.out.println("GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=
=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=
=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=
=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
		while (true) {
			String inputStr =3D scanner.next().trim().toUpperCase();
			if ("EXIT".equals(inputStr)) {
				System.out.println("GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=
=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81");
				break;
			}

			char[] input =3D inputStr.toCharArray();
			result =3D check(chs, input);
			if (result[0] =3D=3D chs.length) {// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E6=83=85=E5=86=B5
				int score =3D 100 * chs.length - count * 10;
				System.out.println("GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=E7=8C=
=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=98=AF=
=EF=BC=9A" + score);
				break;
			} else {
				count++;
				System.out.println("GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9" + resu=
lt[1] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E5=85=B6=E4=B8=AD"
						+ result[0] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=
=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D" + count=
 + "=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
			}
		}
		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate(int level) {

		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
		char[] chs =3D new char[level];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}

</pre></div></div>=20
    <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh_s=
ourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index_answer.html#" style=
=3D"display: none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http:/=
/pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EX=
ERCISE/01/index_answer.html#">text</a><a class=3D"snippet-window sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMEN=
TAL/DAY06/EXERCISE/01/index_answer.html#">pop-up</a></pre></div><pre class=
=3D"hide sh_javascript snippet-formatted sh_sourceCode"><ol class=3D"snippe=
t-num"><li>import java<span class=3D"sh_symbol">.</span>util<span class=3D"=
sh_symbol">.</span>Scanner<span class=3D"sh_symbol">;</span></li><li><span =
style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh_keyword">pu=
blic</span> <span class=3D"sh_keyword">class</span> GuessingGame <span clas=
s=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_keyword">public</span> <span class=3D"sh_keyword">static</span> void <spa=
n class=3D"sh_function">main</span><span class=3D"sh_symbol">(</span><span =
class=3D"sh_predef_func">String</span><span class=3D"sh_symbol">[]</span> a=
rgs<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span><=
/li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_c=
omment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=
=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_num=
ber">0</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E7=94=A8=E4=BA=
=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=9C</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh=
_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span><span class=
=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner scanner <span class=3D"sh_s=
ymbol">=3D</span> <span class=3D"sh_keyword">new</span> <span class=3D"sh_f=
unction">Scanner</span><span class=3D"sh_symbol">(</span>System<span class=
=3D"sh_symbol">.</span><span class=3D"sh_keyword">in</span><span class=3D"s=
h_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</sp=
an><span class=3D"sh_function">println</span><span class=3D"sh_symbol">(</s=
pan><span class=3D"sh_string">"GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=
=E8=AF=95=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81"</span><spa=
n class=3D"sh_symbol">);</span></li><li><span style=3D"display:none;">&nbsp=
;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=
=EF=BC=8C=E9=BB=98=E8=AE=A4=E4=B8=BA5</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;int level <span class=3D"sh_symbol">=3D</span> <s=
pan class=3D"sh_number">5</span><span class=3D"sh_symbol">;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">=
do</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh=
_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_fun=
ction">print</span><span class=3D"sh_symbol">(</span><span class=3D"sh_stri=
ng">"GuessingGame&gt;=E8=AF=B7=E8=BE=93=E5=85=A5=E6=B8=B8=E6=88=8F=E7=BA=A7=
=E5=88=AB=EF=BC=885=E3=80=817=E3=80=819=EF=BC=89=EF=BC=9F"</span><span clas=
s=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;level <span class=3D"sh_symbol">=3D</span> s=
canner<span class=3D"sh_symbol">.</span><span class=3D"sh_function">nextInt=
</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=
=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(</span>level <span =
class=3D"sh_symbol">!=3D</span> <span class=3D"sh_number">5</span> <span cl=
ass=3D"sh_symbol">&amp;&amp;</span> level <span class=3D"sh_symbol">!=3D</s=
pan> <span class=3D"sh_number">7</span> <span class=3D"sh_symbol">&amp;&amp=
;</span> level <span class=3D"sh_symbol">!=3D</span> <span class=3D"sh_numb=
er">9</span><span class=3D"sh_symbol">);</span></li><li><span style=3D"disp=
lay:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span cla=
ss=3D"sh_symbol">=3D</span> <span class=3D"sh_function">generate</span><spa=
n class=3D"sh_symbol">(</span>level<span class=3D"sh_symbol">);</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh=
_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_fun=
ction">println</span><span class=3D"sh_symbol">(</span>chs<span class=3D"sh=
_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</spa=
n><span class=3D"sh_function">println</span><span class=3D"sh_symbol">(</sp=
an><span class=3D"sh_string">"GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=
=E5=A7=8B=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=
=9A=845=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=
=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symb=
ol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(</span><span =
class=3D"sh_keyword">true</span><span class=3D"sh_symbol">)</span> <span cl=
ass=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_predef_func">String</sp=
an> inputStr <span class=3D"sh_symbol">=3D</span> scanner<span class=3D"sh_=
symbol">.</span><span class=3D"sh_function">next</span><span class=3D"sh_sy=
mbol">().</span><span class=3D"sh_function">trim</span><span class=3D"sh_sy=
mbol">().</span><span class=3D"sh_function">toUpperCase</span><span class=
=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span c=
lass=3D"sh_symbol">(</span><span class=3D"sh_string">"EXIT"</span><span cla=
ss=3D"sh_symbol">.</span><span class=3D"sh_function">equals</span><span cla=
ss=3D"sh_symbol">(</span>inputStr<span class=3D"sh_symbol">))</span> <span =
class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span cla=
ss=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=
=3D"sh_function">println</span><span class=3D"sh_symbol">(</span><span clas=
s=3D"sh_string">"GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=84=E5=B0=
=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81"</span><span class=3D"sh_s=
ymbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">br=
eak</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracke=
t">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<s=
pan class=3D"sh_symbol">[]</span> input <span class=3D"sh_symbol">=3D</span=
> inputStr<span class=3D"sh_symbol">.</span><span class=3D"sh_function">toC=
harArray</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_function">check</span><span cla=
ss=3D"sh_symbol">(</span>chs<span class=3D"sh_symbol">,</span> input<span c=
lass=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <spa=
n class=3D"sh_symbol">(</span>result<span class=3D"sh_symbol">[</span><span=
 class=3D"sh_number">0</span><span class=3D"sh_symbol">]</span> <span class=
=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_symbol">.</span>length<sp=
an class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span><span c=
lass=3D"sh_comment">// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E6=83=
=85=E5=86=B5</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int score <span class=3D"s=
h_symbol">=3D</span> <span class=3D"sh_number">100</span> <span class=3D"sh=
_symbol">*</span> chs<span class=3D"sh_symbol">.</span>length <span class=
=3D"sh_symbol">-</span> count <span class=3D"sh_symbol">*</span> <span clas=
s=3D"sh_number">10</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_=
symbol">.</span><span class=3D"sh_function">println</span><span class=3D"sh=
_symbol">(</span><span class=3D"sh_string">"GuessingGame&gt;=E6=81=AD=E5=96=
=9C=E4=BD=A0=E7=8C=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=
=E5=88=86=E6=98=AF=EF=BC=9A"</span> <span class=3D"sh_symbol">+</span> scor=
e<span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"sh_cbracket">}</span> <span class=3D"sh_keyword">else</span> <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count<span cl=
ass=3D"sh_symbol">++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=
=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"=
sh_function">println</span><span class=3D"sh_symbol">(</span><span class=3D=
"sh_string">"GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9"</span> <span clas=
s=3D"sh_symbol">+</span> result<span class=3D"sh_symbol">[</span><span clas=
s=3D"sh_number">1</span><span class=3D"sh_symbol">]</span> <span class=3D"s=
h_symbol">+</span> <span class=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=
=EF=BC=8C=E5=85=B6=E4=B8=AD"</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_symbol">+</span> re=
sult<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0</span><sp=
an class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">+</span> <span cl=
ass=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=
=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D"</span> =
<span class=3D"sh_symbol">+</span> count <span class=3D"sh_symbol">+</span>=
 <span class=3D"sh_string">"=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=80=E5=87=
=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;scanner<span class=3D"sh_symbol">.</span><span class=
=3D"sh_function">close</span><span class=3D"sh_symbol">();</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span s=
tyle=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&n=
bsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=
=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></li>=
<li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><=
span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"=
sh_type">@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=
=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><s=
pan class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh=
_keyword">static</span> char<span class=3D"sh_symbol">[]</span> <span class=
=3D"sh_function">generate</span><span class=3D"sh_symbol">(</span>int level=
<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li=
><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> lette=
rs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_cbracket">{</span=
> <span class=3D"sh_string">'A'</span><span class=3D"sh_symbol">,</span> <s=
pan class=3D"sh_string">'B'</span><span class=3D"sh_symbol">,</span> <span =
class=3D"sh_string">'C'</span><span class=3D"sh_symbol">,</span> <span clas=
s=3D"sh_string">'D'</span><span class=3D"sh_symbol">,</span> <span class=3D=
"sh_string">'E'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_=
string">'F'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_stri=
ng">'G'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'H'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'I'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'J'</spa=
n><span class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_string">'K'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'L'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'M'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'N'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'O'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'=
P'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Q'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'</span=
><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'S'</span><sp=
an class=3D"sh_symbol">,</span> <span class=3D"sh_string">'T'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'U'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'V'</span><span class=3D"=
sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">=
'W'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'X'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Y'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Z'</span> <=
span class=3D"sh_cbracket">}</span><span class=3D"sh_symbol">;</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh=
_symbol">[]</span> flags <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> boolean<span class=3D"sh_symbol">[</span>letters=
<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">];</span>=
</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D=
"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> char<span class=3D"sh_symbol">[</span>level<span=
 class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_symbol"=
>(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_numbe=
r">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&=
lt;</span> chs<span class=3D"sh_symbol">.</span>length<span class=3D"sh_sym=
bol">;</span> i<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cbrac=
ket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;int index<span class=3D"sh_symbol">;</span></li><li>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"sh_keyword">do</span> <span class=3D"sh_cbracket">{</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;index <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_symbol">(</span>int<span class=3D"sh_symbol">)</span> <span class=3D=
"sh_symbol">(</span><span class=3D"sh_predef_var">Math</span><span class=3D=
"sh_symbol">.</span><span class=3D"sh_function">random</span><span class=3D=
"sh_symbol">()</span> <span class=3D"sh_symbol">*</span> <span class=3D"sh_=
symbol">(</span>letters<span class=3D"sh_symbol">.</span>length<span class=
=3D"sh_symbol">));</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span c=
lass=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(</span>flags<sp=
an class=3D"sh_symbol">[</span>index<span class=3D"sh_symbol">]);</span><sp=
an class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=E5=
=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<span cl=
ass=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span class=
=3D"sh_symbol">=3D</span> letters<span class=3D"sh_symbol">[</span>index<sp=
an class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags<span class=3D"sh_symbol">[</spa=
n>index<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</sp=
an> <span class=3D"sh_keyword">true</span><span class=3D"sh_symbol">;</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"sh_keyword">return</span> chs<span class=3D"sh_symbol">;</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></=
li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span class=3D"sh_com=
ment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=
=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=
=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=
=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=
=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=
=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li><span class=3D"sh_comment">&nbsp=
;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbs=
p;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</span><span class=3D=
"sh_comment"> chs</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nb=
sp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=
=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&n=
bsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</span><span =
class=3D"sh_comment"> input</span></li><li><span class=3D"sh_comment">&nbsp=
;&nbsp;&nbsp;&nbsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=
=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_co=
mment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</s=
pan><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=
=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=
=84 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=
=8C=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><li><=
span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=94=A8=E4=
=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=
=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=
=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=9A=
=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=
=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=
=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=
=A1=AE)=E3=80=82</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbs=
p;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywor=
d">public</span> <span class=3D"sh_keyword">static</span> int<span class=3D=
"sh_symbol">[]</span> <span class=3D"sh_function">check</span><span class=
=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]</span> chs<span cla=
ss=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">[]</span> input<spa=
n class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbo=
l">[]</span> result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_=
keyword">new</span> int<span class=3D"sh_symbol">[</span><span class=3D"sh_=
number">2</span><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <spa=
n class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</span> <s=
pan class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> i <span =
class=3D"sh_symbol">&lt;</span> input<span class=3D"sh_symbol">.</span>leng=
th<span class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span> =
<span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</s=
pan> <span class=3D"sh_symbol">(</span>int j <span class=3D"sh_symbol">=3D<=
/span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span>=
 j <span class=3D"sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</sp=
an>length<span class=3D"sh_symbol">;</span> j<span class=3D"sh_symbol">++)<=
/span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span>input<=
span class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span =
class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_symbol">[</span>j<sp=
an class=3D"sh_symbol">])</span> <span class=3D"sh_cbracket">{</span><span =
class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=
=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;result<span class=3D"sh_symbol">[</span><span class=3D"sh_number">1<=
/span><span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"s=
h_symbol">(</span>i <span class=3D"sh_symbol">=3D=3D</span> j<span class=3D=
"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span><span class=3D"sh_=
comment">// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=90=A6=E6=AD=A3=
=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</span><span class=3D"s=
h_number">0</span><span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword"=
>break</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</=
span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;<span class=3D"sh_keyword">return</span> result<span class=3D"sh_sym=
bol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}=
</span></li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre cl=
ass=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">import java.=
util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
		Scanner scanner =3D new Scanner(System.in);
		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=
=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");

		// =E8=A1=A8=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=AD=89=E7=BA=A7=EF=BC=8C=E9=BB=
=98=E8=AE=A4=E4=B8=BA5
		int level =3D 5;
		do {
			System.out.print("GuessingGame&gt;=E8=AF=B7=E8=BE=93=E5=85=A5=E6=B8=B8=
=E6=88=8F=E7=BA=A7=E5=88=AB=EF=BC=885=E3=80=817=E3=80=819=EF=BC=89=EF=BC=9F=
");
			level =3D scanner.nextInt();
		} while (level !=3D 5 &amp;&amp; level !=3D 7 &amp;&amp; level !=3D 9);

		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3D generate(level);
		System.out.println(chs);
		System.out.println("GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=
=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=
=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=
=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
		while (true) {
			String inputStr =3D scanner.next().trim().toUpperCase();
			if ("EXIT".equals(inputStr)) {
				System.out.println("GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=
=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81");
				break;
			}

			char[] input =3D inputStr.toCharArray();
			result =3D check(chs, input);
			if (result[0] =3D=3D chs.length) {// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E6=83=85=E5=86=B5
				int score =3D 100 * chs.length - count * 10;
				System.out.println("GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=E7=8C=
=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=98=AF=
=EF=BC=9A" + score);
				break;
			} else {
				count++;
				System.out.println("GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9" + resu=
lt[1] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E5=85=B6=E4=B8=AD"
						+ result[0] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=
=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D" + count=
 + "=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
			}
		}
		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate(int level) {

		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
		char[] chs =3D new char[level];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCIS=
E/01/index_answer.html#" class=3D"snippet-revealed snippet-toggle sh_url">=
=E9=9A=90=E8=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_aci=
d snippet-wrap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.=
com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/ind=
ex_answer.html#" class=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pr=
e></div></div>=20
   </div>=20
  </div> =20
=20
<div id=3D"qb-sougou-search" style=3D"display: none; opacity: 0;"><p>=E6=90=
=9C=E7=B4=A2</p><p class=3D"last-btn">=E5=A4=8D=E5=88=B6</p><iframe src=3D"=
cid:frame-281-711a3f1b-ab2b-475e-bd24-2a14d2dfdf62@mhtml.blink"></iframe></=
div></body></html>
------MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index.files/index.css

@charset "utf-8";

div.source_style_exercise { font-family: =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=
=91, "Times New Roman"; font-size: 14px; min-width: 400px; padding: 10px 20=
px; color: rgb(0, 0, 0); }

div.source_style_exercise div.wordSection { width: 95%; padding: 5px; margi=
n: 5px; }

div.source_style_exercise h3 { clear: both; font-size: 18px; font-weight: b=
old; margin: 20px 0px; text-indent: 0px; }

div.source_style_exercise h4 { font-size: 16px; font-weight: bold; margin: =
10px 0px 5px 3px; text-indent: 21pt; color: purple; }

div.source_style_exercise p { margin: 3px; padding: 2px 2px 2px 30px; text-=
indent: 21pt; font-size: 14px; line-height: 25px; }

div.source_style_exercise p.answerTitle { clear: both; font-weight: bold; p=
adding: 10px 0px; font-size: 16px; }

div.source_style_exercise div.image { text-align: center; padding: 5px 0px;=
 }

div.source_style_exercise div.image img { max-width: 900px; }

div.source_style_exercise div.image > p { text-align: center; margin: 5px; =
padding: 3px; font-size: 12px; }

div.source_style_exercise div.table { text-align: center; padding: 5px 0px;=
 }

div.source_style_exercise div.table img { max-width: 900px; }

div.source_style_exercise div.table > p { text-align: center; margin: 5px; =
padding: 3px; font-size: 12px; }

div.source_style_exercise p.code, div.source_style_exercise pre { font-size=
: 14px; margin-left: 60px; }

div.source_style_exercise .code_level1 { text-indent: 21pt; }

div.source_style_exercise .code_level2 { text-indent: 42pt; }

div.source_style_exercise .code_level3 { text-indent: 63pt; }

div.source_style_exercise .code_level4 { text-indent: 84pt; }

div.source_style_exercise ul.list, div.source_style_exercise ol.list { marg=
in-left: 30px; }

div.source_style_exercise ol.list { padding-left: 45px; }

div.source_style_exercise ul.list li { padding-left: 10px; }

div.source_style_exercise ol.list li { padding-left: 5px; }

div.source_style_exercise p.emphasiz { font-weight: bold; font-style: itali=
c; }

div.source_style_exercise p.number { font-weight: bold; margin-top: 8px; ma=
rgin-bottom: 8px; }

div.source_style_exercise ul.index { margin: 0px 0px 20px 40px; font-size: =
12px; }

div.source_style_exercise ul.index li { padding: 0px; margin: 3px 50px 10px=
 0px; list-style-image: url("ph.gif"); list-style-type: none; }

div.source_style_exercise ul.index li a, div.source_style_exercise ul.index=
 li a:visited { color: blue; text-decoration: underline; }

div.source_style_exercise ul.index li a:hover { color: purple; }

div.source_style_exercise .highlighter { border: 2px solid rgb(221, 221, 22=
1); padding: 5px; background: rgb(238, 238, 238); }

div.source_style_exercise .command_help { display: none; }
------MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index.files/jquery.snippet.css

@charset "utf-8";

a.snippet-toggle { margin-right: 40px; }

.bold_code { font-weight: bold; font-size: 11pt; color: blue !important; }

.bold_code > span { font-family: =CE=A2=EF=BF=BD=EF=BF=BD=EF=BF=BD=C5=BA=EF=
=BF=BD; font-weight: bold; font-size: 11pt; color: blue !important; }

.sh_acid { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_acid .sh_sourceCode { background-color: rgb(238, 238, 238); color: rgb(=
0, 0, 0); font-weight: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_keyword { color: rgb(187, 121, 119); font-weigh=
t: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_type { color: rgb(128, 128, 192); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_string { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_regexp { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_comment { color: rgb(255, 128, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_number { color: rgb(128, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_preproc { color: rgb(0, 128, 192); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_symbol { color: rgb(255, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_function { color: rgb(0, 68, 102); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_url { color: rgb(166, 133, 0); font-weight: nor=
mal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_date { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_time { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_file { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_ip { color: rgb(166, 133, 0); font-weight: norm=
al; font-style: normal; }

.sh_acid .sh_sourceCode .sh_name { color: rgb(166, 133, 0); font-weight: no=
rmal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_variable { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_newfile { color: rgb(166, 133, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_difflines { color: rgb(187, 121, 119); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_selector { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_property { color: rgb(187, 121, 119); font-weig=
ht: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_value { color: rgb(166, 133, 0); font-weight: n=
ormal; font-style: normal; }

.sh_berries-dark { background: none; padding: 0px; margin: 0px; border: 0px=
 none; }

.sh_berries-dark .sh_sourceCode { background-color: rgb(128, 191, 255); col=
or: rgb(64, 0, 128); font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_keyword { color: rgb(63, 43, 240); font=
-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_type { color: rgb(63, 43, 240); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_string { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_regexp { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_specialchar { color: rgb(119, 55, 154);=
 font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_comment { color: rgb(223, 9, 89); font-=
weight: normal; font-style: italic; }

.sh_berries-dark .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_function { color: rgb(144, 17, 100); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_url { color: rgb(196, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_date { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_time { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_file { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_ip { color: rgb(196, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_name { color: rgb(196, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_variable { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_oldfile { color: rgb(119, 55, 154); fon=
t-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_newfile { color: rgb(196, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_difflines { color: rgb(63, 43, 240); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_selector { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_property { color: rgb(63, 43, 240); fon=
t-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_value { color: rgb(196, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_berries-light { background: none; padding: 0px; margin: 0px; border: 0p=
x none; }

.sh_berries-light .sh_sourceCode { background-color: rgb(215, 255, 255); co=
lor: rgb(71, 64, 109); font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_keyword { color: rgb(44, 174, 30); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_type { color: rgb(139, 81, 192); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_string { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_regexp { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_specialchar { color: rgb(95, 129, 179)=
; font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_comment { color: rgb(156, 60, 175); fo=
nt-weight: normal; font-style: italic; }

.sh_berries-light .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_symbol { color: rgb(210, 7, 59); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_function { color: rgb(144, 17, 100); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_cbracket { color: rgb(210, 7, 59); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_url { color: rgb(95, 129, 179); font-w=
eight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_date { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_time { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_file { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_ip { color: rgb(95, 129, 179); font-we=
ight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_name { color: rgb(95, 129, 179); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_variable { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_oldfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_newfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_difflines { color: rgb(44, 174, 30); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_selector { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_property { color: rgb(44, 174, 30); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_value { color: rgb(95, 129, 179); font=
-weight: normal; font-style: normal; }

.sh_bipolar { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_bipolar .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(209=
, 73, 166); font-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_keyword { color: rgb(238, 133, 226); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_type { color: rgb(170, 221, 139); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_string { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_regexp { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_specialchar { color: rgb(158, 244, 87); font=
-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_comment { color: rgb(53, 214, 229); font-wei=
ght: normal; font-style: italic; }

.sh_bipolar .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_preproc { color: rgb(7, 246, 191); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_symbol { color: rgb(52, 143, 239); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_function { color: rgb(213, 25, 147); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_cbracket { color: rgb(52, 143, 239); font-we=
ight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_url { color: rgb(158, 244, 87); font-weight:=
 normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_date { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_time { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_file { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_ip { color: rgb(158, 244, 87); font-weight: =
normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_name { color: rgb(158, 244, 87); font-weight=
: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_variable { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_oldfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_newfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_difflines { color: rgb(238, 133, 226); font-=
weight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_selector { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_property { color: rgb(238, 133, 226); font-w=
eight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_value { color: rgb(158, 244, 87); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_blacknblue .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(=
35, 70, 213); font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_keyword { color: rgb(30, 222, 220); font-=
weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_type { color: rgb(192, 108, 248); font-we=
ight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_string { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_regexp { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_specialchar { color: rgb(204, 198, 198); =
font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_comment { color: rgb(111, 178, 196); font=
-weight: normal; font-style: italic; }

.sh_blacknblue .sh_sourceCode .sh_number { color: rgb(196, 172, 96); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_preproc { color: rgb(128, 128, 255); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_symbol { color: rgb(204, 198, 198); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_function { color: rgb(28, 150, 237); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_cbracket { color: rgb(204, 198, 198); fon=
t-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_url { color: rgb(207, 198, 49); font-weig=
ht: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_date { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_time { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_file { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_ip { color: rgb(207, 198, 49); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_name { color: rgb(207, 198, 49); font-wei=
ght: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_variable { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_oldfile { color: rgb(204, 198, 198); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_newfile { color: rgb(207, 198, 49); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_difflines { color: rgb(30, 222, 220); fon=
t-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_selector { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_property { color: rgb(30, 222, 220); font=
-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_value { color: rgb(207, 198, 49); font-we=
ight: normal; font-style: normal; }

.sh_bright { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_bright .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(64, 30, 122); font-weight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_keyword { color: rgb(255, 48, 48); font-weigh=
t: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_type { color: rgb(247, 185, 44); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_string { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_regexp { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_specialchar { color: rgb(24, 97, 167); font-w=
eight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_comment { color: rgb(56, 173, 36); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_number { color: rgb(50, 186, 6); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_preproc { color: rgb(83, 116, 176); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_symbol { color: rgb(48, 48, 238); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_function { color: rgb(209, 28, 237); font-wei=
ght: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_cbracket { color: rgb(48, 48, 238); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_url { color: rgb(24, 97, 167); font-weight: n=
ormal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_date { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_time { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_file { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_ip { color: rgb(24, 97, 167); font-weight: no=
rmal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_name { color: rgb(24, 97, 167); font-weight: =
normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_oldfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_newfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_difflines { color: rgb(255, 48, 48); font-wei=
ght: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_property { color: rgb(255, 48, 48); font-weig=
ht: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_value { color: rgb(24, 97, 167); font-weight:=
 normal; font-style: normal; }

.sh_contrast { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_contrast .sh_sourceCode { background-color: rgb(237, 97, 4); color: rgb=
(0, 0, 255); font-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_string { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_regexp { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_specialchar { color: rgb(17, 248, 12); font=
-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_number { color: rgb(151, 26, 216); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_preproc { color: rgb(123, 68, 224); font-we=
ight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_symbol { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_function { color: rgb(255, 247, 0); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_cbracket { color: rgb(222, 222, 222); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_url { color: rgb(17, 248, 12); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_ip { color: rgb(17, 248, 12); font-weight: =
normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_name { color: rgb(17, 248, 12); font-weight=
: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_variable { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_oldfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_newfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font=
-weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_selector { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_value { color: rgb(17, 248, 12); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkblue .sh_sourceCode { background-color: rgb(0, 0, 64); color: rgb(1=
99, 199, 199); font-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_keyword { color: rgb(255, 255, 96); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_type { color: rgb(96, 255, 96); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_string { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_regexp { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_specialchar { color: rgb(255, 165, 0); font=
-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_comment { color: rgb(128, 160, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_number { color: rgb(66, 202, 217); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_preproc { color: rgb(255, 128, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_symbol { color: rgb(216, 233, 27); font-wei=
ght: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_cbracket { color: rgb(216, 233, 27); font-w=
eight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_url { color: rgb(255, 160, 160); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_date { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_time { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_file { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_ip { color: rgb(255, 160, 160); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_name { color: rgb(255, 160, 160); font-weig=
ht: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_oldfile { color: rgb(255, 165, 0); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_newfile { color: rgb(255, 160, 160); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_difflines { color: rgb(255, 255, 96); font-=
weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_property { color: rgb(255, 255, 96); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_value { color: rgb(255, 160, 160); font-wei=
ght: normal; font-style: normal; }

.sh_darkness { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkness .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_keyword { color: rgb(255, 255, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_string { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_regexp { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_specialchar { color: rgb(191, 191, 191); fo=
nt-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_darkness .sh_sourceCode .sh_number { color: rgb(97, 157, 231); font-wei=
ght: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_preproc { color: rgb(29, 163, 207); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_symbol { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_function { color: rgb(243, 70, 39); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_url { color: rgb(171, 171, 0); font-weight:=
 bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_date { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_time { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_file { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_ip { color: rgb(171, 171, 0); font-weight: =
bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_name { color: rgb(171, 171, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_oldfile { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_newfile { color: rgb(171, 171, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_difflines { color: rgb(255, 255, 0); font-w=
eight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_property { color: rgb(255, 255, 0); font-we=
ight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_value { color: rgb(171, 171, 0); font-weigh=
t: bold; font-style: normal; }

.sh_desert { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_desert .sh_sourceCode { background-color: rgb(175, 148, 126); color: rg=
b(255, 253, 236); font-weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_keyword { color: rgb(254, 248, 188); font-wei=
ght: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_type { color: rgb(254, 248, 188); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_string { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_regexp { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_specialchar { color: rgb(246, 246, 71); font-=
weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_comment { color: rgb(160, 0, 0); font-weight:=
 normal; font-style: italic; }

.sh_desert .sh_sourceCode .sh_number { color: rgb(62, 63, 37); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_preproc { color: rgb(131, 57, 20); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_symbol { color: rgb(102, 87, 79); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_function { color: rgb(243, 210, 102); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_cbracket { color: rgb(102, 87, 79); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_url { color: rgb(246, 246, 71); font-weight: =
normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_date { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_time { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_file { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_ip { color: rgb(246, 246, 71); font-weight: n=
ormal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_name { color: rgb(246, 246, 71); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_oldfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_newfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_difflines { color: rgb(254, 248, 188); font-w=
eight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_property { color: rgb(254, 248, 188); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_value { color: rgb(246, 246, 71); font-weight=
: normal; font-style: normal; }

.sh_dull { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_dull .sh_sourceCode { background-color: rgb(191, 191, 191); color: rgb(=
101, 101, 101); font-weight: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_keyword { color: rgb(53, 53, 53); font-weight: =
bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_type { color: rgb(50, 65, 198); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_string { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_regexp { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_specialchar { color: rgb(0, 85, 153); font-weig=
ht: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_comment { color: rgb(209, 29, 32); font-weight:=
 normal; font-style: italic; }

.sh_dull .sh_sourceCode .sh_number { color: rgb(22, 147, 13); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_preproc { color: rgb(0, 0, 51); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_symbol { color: rgb(34, 34, 34); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_function { color: rgb(56, 37, 92); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_cbracket { color: rgb(34, 34, 34); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_url { color: rgb(0, 85, 153); font-weight: norm=
al; font-style: normal; }

.sh_dull .sh_sourceCode .sh_date { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_time { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_file { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_ip { color: rgb(0, 85, 153); font-weight: norma=
l; font-style: normal; }

.sh_dull .sh_sourceCode .sh_name { color: rgb(0, 85, 153); font-weight: nor=
mal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_variable { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_oldfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_newfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_difflines { color: rgb(53, 53, 53); font-weight=
: bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_selector { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_property { color: rgb(53, 53, 53); font-weight:=
 bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_value { color: rgb(0, 85, 153); font-weight: no=
rmal; font-style: normal; }

.sh_easter { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_easter .sh_sourceCode { background-color: rgb(255, 255, 128); color: rg=
b(44, 123, 52); font-weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_keyword { color: rgb(29, 69, 214); font-weigh=
t: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_type { color: rgb(237, 15, 85); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_string { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_regexp { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_specialchar { color: rgb(202, 75, 227); font-=
weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_comment { color: rgb(36, 200, 21); font-weigh=
t: normal; font-style: italic; }

.sh_easter .sh_sourceCode .sh_number { color: rgb(225, 26, 112); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_preproc { color: rgb(21, 131, 177); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_symbol { color: rgb(250, 71, 0); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_function { color: rgb(29, 69, 214); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_cbracket { color: rgb(250, 71, 0); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_url { color: rgb(202, 75, 227); font-weight: =
normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_date { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_time { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_file { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_ip { color: rgb(202, 75, 227); font-weight: n=
ormal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_name { color: rgb(202, 75, 227); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_variable { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_oldfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_newfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_difflines { color: rgb(29, 69, 214); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_selector { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_property { color: rgb(29, 69, 214); font-weig=
ht: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_value { color: rgb(202, 75, 227); font-weight=
: normal; font-style: normal; }

.sh_emacs { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_emacs .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_keyword { color: rgb(156, 32, 238); font-weigh=
t: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_type { color: rgb(32, 137, 32); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_string { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_regexp { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_specialchar { color: rgb(189, 141, 139); font-=
weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_comment { color: rgb(172, 32, 32); font-weight=
: normal; font-style: italic; }

.sh_emacs .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_url { color: rgb(189, 141, 139); font-weight: =
normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_date { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_time { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_file { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_ip { color: rgb(189, 141, 139); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_name { color: rgb(189, 141, 139); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_oldfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_newfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_difflines { color: rgb(156, 32, 238); font-wei=
ght: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_property { color: rgb(156, 32, 238); font-weig=
ht: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_value { color: rgb(189, 141, 139); font-weight=
: normal; font-style: normal; }

.sh_golden { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_golden .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(221,=
 187, 0); font-weight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_keyword { color: rgb(255, 237, 138); font-wei=
ght: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_type { color: rgb(255, 237, 138); font-weight=
: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_comment { color: rgb(151, 131, 69); font-weig=
ht: normal; font-style: italic; }

.sh_golden .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_preproc { color: rgb(255, 221, 170); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_symbol { color: rgb(171, 171, 171); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_function { color: rgb(221, 187, 0); font-weig=
ht: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_cbracket { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_date { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_time { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_file { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_golden .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_variable { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_difflines { color: rgb(255, 237, 138); font-w=
eight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_selector { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_property { color: rgb(255, 237, 138); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_greenlcd { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_greenlcd .sh_sourceCode { background-color: rgb(0, 52, 0); color: rgb(0=
, 187, 0); font-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_keyword { color: rgb(0, 237, 0); font-weigh=
t: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_type { color: rgb(0, 237, 0); font-weight: =
normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_string { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_regexp { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_specialchar { color: rgb(223, 223, 223); fo=
nt-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_greenlcd .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_symbol { color: rgb(47, 231, 169); font-wei=
ght: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_function { color: rgb(192, 255, 115); font-=
weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_cbracket { color: rgb(47, 231, 169); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_url { color: rgb(223, 223, 223); font-weigh=
t: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_date { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_time { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_file { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_ip { color: rgb(223, 223, 223); font-weight=
: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_name { color: rgb(223, 223, 223); font-weig=
ht: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_variable { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_oldfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_newfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_difflines { color: rgb(0, 237, 0); font-wei=
ght: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_selector { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_property { color: rgb(0, 237, 0); font-weig=
ht: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_value { color: rgb(223, 223, 223); font-wei=
ght: normal; font-style: normal; }

.sh_ide-anjuta { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-anjuta .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_keyword { color: rgb(0, 0, 128); font-wei=
ght: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_type { color: rgb(0, 0, 128); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_string { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_regexp { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_specialchar { color: rgb(221, 187, 0); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-anjuta .sh_sourceCode .sh_number { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_preproc { color: rgb(103, 128, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_url { color: rgb(221, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_date { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_time { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_file { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_ip { color: rgb(221, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_name { color: rgb(221, 187, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_oldfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_newfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_difflines { color: rgb(0, 0, 128); font-w=
eight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_property { color: rgb(0, 0, 128); font-we=
ight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_value { color: rgb(221, 187, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-codewarrior { background: none; padding: 0px; margin: 0px; border: =
0px none; }

.sh_ide-codewarrior .sh_sourceCode { background-color: rgb(255, 255, 255); =
color: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_keyword { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_type { color: rgb(76, 115, 166); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_string { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_regexp { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_specialchar { color: rgb(102, 102, 1=
02); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_comment { color: rgb(179, 0, 0); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_preproc { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_url { color: rgb(102, 102, 102); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_date { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_time { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_file { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_ip { color: rgb(102, 102, 102); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_name { color: rgb(102, 102, 102); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_variable { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_oldfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_newfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_difflines { color: rgb(0, 0, 179); f=
ont-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_selector { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_property { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_value { color: rgb(102, 102, 102); f=
ont-weight: normal; font-style: normal; }

.sh_ide-devcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-devcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_comment { color: rgb(0, 0, 128); font-wei=
ght: normal; font-style: italic; }

.sh_ide-devcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-wei=
ght: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse { background: none; padding: 0px; margin: 0px; border: 0px =
none; }

.sh_ide-eclipse .sh_sourceCode { background-color: rgb(255, 255, 255); colo=
r: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_keyword { color: rgb(127, 0, 85); font-w=
eight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_type { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_string { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_regexp { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_comment { color: rgb(113, 122, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_preproc { color: rgb(63, 95, 191); font-=
weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_url { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_date { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_time { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_file { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_ip { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_name { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_variable { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_newfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_difflines { color: rgb(127, 0, 85); font=
-weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_selector { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_property { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_value { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-kdev { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_ide-kdev .sh_sourceCode { background-color: rgb(255, 255, 255); color: =
rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_keyword { color: rgb(96, 0, 0); font-weight=
: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_type { color: rgb(96, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: italic; }

.sh_ide-kdev .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_date { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_time { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_file { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_variable { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_difflines { color: rgb(96, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_selector { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_property { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-msvcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-msvcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_comment { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-msvcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_preproc { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-w=
eight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_kwrite .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_type { color: rgb(131, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-w=
eight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_comment { color: rgb(131, 129, 131); font-wei=
ght: normal; font-style: italic; }

.sh_kwrite .sh_sourceCode .sh_number { color: rgb(41, 40, 255); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_preproc { color: rgb(0, 130, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_function { color: rgb(1, 1, 129); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_matlab .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_string { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_regexp { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_url { color: rgb(128, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_ip { color: rgb(128, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_name { color: rgb(128, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_newfile { color: rgb(128, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_value { color: rgb(128, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_navy { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_navy .sh_sourceCode { background-color: rgb(0, 0, 53); color: rgb(0, 13=
9, 255); font-weight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_keyword { color: rgb(248, 197, 11); font-weight=
: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_type { color: rgb(225, 231, 47); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_comment { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: italic; }

.sh_navy .sh_sourceCode .sh_number { color: rgb(248, 127, 244); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_preproc { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_symbol { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_cbracket { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_date { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_time { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_file { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_variable { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_difflines { color: rgb(248, 197, 11); font-weig=
ht: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_selector { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_property { color: rgb(248, 197, 11); font-weigh=
t: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_nedit { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_nedit .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_type { color: rgb(165, 42, 42); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_string { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_regexp { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_specialchar { color: rgb(46, 139, 87); font-we=
ight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: italic; }

.sh_nedit .sh_sourceCode .sh_number { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_preproc { color: rgb(39, 64, 139); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_url { color: rgb(0, 100, 0); font-weight: norm=
al; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_ip { color: rgb(0, 100, 0); font-weight: norma=
l; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_name { color: rgb(0, 100, 0); font-weight: nor=
mal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_variable { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_oldfile { color: rgb(46, 139, 87); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_newfile { color: rgb(0, 100, 0); font-weight: =
normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_selector { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_value { color: rgb(0, 100, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_neon .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, 2=
55, 255); font-weight: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_keyword { color: rgb(0, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_type { color: rgb(255, 255, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_string { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_regexp { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_specialchar { color: rgb(205, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: n=
ormal; font-style: italic; }

.sh_neon .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_preproc { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_symbol { color: rgb(238, 88, 150); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_cbracket { color: rgb(238, 88, 150); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_url { color: rgb(205, 0, 255); font-weight: nor=
mal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_date { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_time { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_file { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_ip { color: rgb(205, 0, 255); font-weight: norm=
al; font-style: normal; }

.sh_neon .sh_sourceCode .sh_name { color: rgb(205, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_variable { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_oldfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_newfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_difflines { color: rgb(0, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_selector { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_property { color: rgb(0, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_value { color: rgb(205, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_night .sh_sourceCode { background-color: rgb(0, 0, 68); color: rgb(221,=
 0, 255); font-weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_type { color: rgb(241, 21, 124); font-weight: =
bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_specialchar { color: rgb(130, 214, 109); font-=
weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_number { color: rgb(142, 225, 25); font-weight=
: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_preproc { color: rgb(0, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_symbol { color: rgb(231, 238, 92); font-weight=
: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_function { color: rgb(255, 6, 205); font-weigh=
t: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_cbracket { color: rgb(231, 238, 92); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_variable { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_oldfile { color: rgb(130, 214, 109); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_selector { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-wei=
ght: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_pablo .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, =
255, 255); font-weight: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_keyword { color: rgb(192, 192, 0); font-weight=
: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_type { color: rgb(0, 192, 0); font-weight: bol=
d; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_string { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_regexp { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_comment { color: rgb(128, 128, 128); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_number { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_preproc { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_function { color: rgb(255, 34, 185); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_url { color: rgb(0, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_date { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_time { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_file { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_ip { color: rgb(0, 255, 255); font-weight: nor=
mal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_name { color: rgb(0, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_variable { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_newfile { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_difflines { color: rgb(192, 192, 0); font-weig=
ht: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_selector { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_property { color: rgb(192, 192, 0); font-weigh=
t: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_value { color: rgb(0, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_peachpuff { background: none; padding: 0px; margin: 0px; border: 0px no=
ne; }

.sh_peachpuff .sh_sourceCode { background-color: rgb(255, 218, 185); color:=
 rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-we=
ight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_type { color: rgb(46, 139, 87); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_string { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_regexp { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_specialchar { color: rgb(106, 90, 205); fo=
nt-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_comment { color: rgb(64, 96, 144); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_number { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_preproc { color: rgb(205, 0, 205); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_function { color: rgb(82, 28, 199); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_url { color: rgb(192, 0, 88); font-weight:=
 normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_ip { color: rgb(192, 0, 88); font-weight: =
normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_name { color: rgb(192, 0, 88); font-weight=
: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_variable { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_oldfile { color: rgb(106, 90, 205); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_newfile { color: rgb(192, 0, 88); font-wei=
ght: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-=
weight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_selector { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_value { color: rgb(192, 0, 88); font-weigh=
t: normal; font-style: normal; }

.sh_print { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_print .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-weig=
ht: normal; font-style: italic; }

.sh_print .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_print .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_print .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_print .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_print .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_rand01 { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_rand01 .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(18, 27, 40); font-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_keyword { color: rgb(10, 127, 109); font-weig=
ht: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_type { color: rgb(196, 38, 56); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_string { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_regexp { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_specialchar { color: rgb(167, 100, 203); font=
-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-wei=
ght: normal; font-style: italic; }

.sh_rand01 .sh_sourceCode .sh_number { color: rgb(13, 163, 68); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_preproc { color: rgb(98, 10, 198); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_symbol { color: rgb(0, 0, 222); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 222); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_url { color: rgb(43, 131, 186); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_date { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_time { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_file { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_ip { color: rgb(43, 131, 186); font-weight: n=
ormal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_name { color: rgb(43, 131, 186); font-weight:=
 normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_variable { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_oldfile { color: rgb(167, 100, 203); font-wei=
ght: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_newfile { color: rgb(43, 131, 186); font-weig=
ht: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_difflines { color: rgb(10, 127, 109); font-we=
ight: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_selector { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_property { color: rgb(10, 127, 109); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_value { color: rgb(43, 131, 186); font-weight=
: normal; font-style: normal; }

.sh_the { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_the .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_type { color: rgb(136, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_string { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_regexp { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: no=
rmal; font-style: italic; }

.sh_the .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_preproc { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_url { color: rgb(0, 0, 136); font-weight: normal=
; font-style: normal; }

.sh_the .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_ip { color: rgb(0, 0, 136); font-weight: normal;=
 font-style: normal; }

.sh_the .sh_sourceCode .sh_name { color: rgb(0, 0, 136); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_the .sh_sourceCode .sh_newfile { color: rgb(0, 0, 136); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_value { color: rgb(0, 0, 136); font-weight: norm=
al; font-style: normal; }

.sh_typical { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_typical .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_specialchar { color: rgb(196, 45, 168); font=
-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-we=
ight: normal; font-style: italic; }

.sh_typical .sh_sourceCode .sh_number { color: rgb(169, 0, 169); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_preproc { color: rgb(0, 184, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_variable { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_oldfile { color: rgb(196, 45, 168); font-wei=
ght: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weig=
ht: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_selector { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weigh=
t: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vampire { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_vampire .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_type { color: rgb(243, 94, 30); font-weight:=
 bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_string { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_regexp { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: italic; }

.sh_vampire .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_preproc { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_symbol { color: rgb(243, 230, 81); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_function { color: rgb(123, 199, 16); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_cbracket { color: rgb(243, 230, 81); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_url { color: rgb(187, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_ip { color: rgb(187, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_name { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_variable { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_newfile { color: rgb(187, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_selector { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_value { color: rgb(187, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_vim-dark { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_vim-dark .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_vim { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_vim .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); font-wei=
ght: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_vim .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_vim .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_whatis { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_whatis .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(0, 2=
55, 0); font-weight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_keyword { color: rgb(250, 90, 3); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_string { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_regexp { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_specialchar { color: rgb(255, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_number { color: rgb(255, 255, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_symbol { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_function { color: rgb(231, 33, 211); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_cbracket { color: rgb(0, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_url { color: rgb(255, 187, 0); font-weight: n=
ormal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_date { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_time { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_file { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_ip { color: rgb(255, 187, 0); font-weight: no=
rmal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_name { color: rgb(255, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_variable { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_oldfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_newfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_difflines { color: rgb(250, 90, 3); font-weig=
ht: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_selector { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_property { color: rgb(250, 90, 3); font-weigh=
t: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_value { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_whitengrey .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(105, 105, 105); font-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_keyword { color: rgb(105, 105, 105); font=
-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_type { color: rgb(105, 105, 105); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_string { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_regexp { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_specialchar { color: rgb(0, 136, 0); font=
-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_comment { color: rgb(19, 38, 162); font-w=
eight: normal; font-style: italic; }

.sh_whitengrey .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_preproc { color: rgb(71, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_url { color: rgb(0, 136, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_date { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_time { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_file { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_ip { color: rgb(0, 136, 0); font-weight: =
normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_name { color: rgb(0, 136, 0); font-weight=
: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_variable { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_oldfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_newfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_difflines { color: rgb(105, 105, 105); fo=
nt-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_selector { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_property { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_value { color: rgb(0, 136, 0); font-weigh=
t: normal; font-style: normal; }

.sh_zellner { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_zellner .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_string { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_regexp { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-=
weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_preproc { color: rgb(160, 32, 240); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_url { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_ip { color: rgb(255, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_name { color: rgb(255, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_variable { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_newfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-we=
ight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_selector { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_value { color: rgb(255, 0, 255); font-weight=
: normal; font-style: normal; }

.snippet-wrap { position: relative; }

:first-child + html .snippet-wrap { display: inline-block; }

* html .snippet-wrap { display: inline-block; }

.snippet-reveal { text-decoration: underline; }

.snippet-wrap .snippet-menu, .snippet-wrap .snippet-hide { position: absolu=
te; top: 10px; right: 15px; font-size: 0.9em; z-index: 1; background-color:=
 transparent; }

.snippet-wrap .snippet-hide { top: auto; bottom: 10px; }

:first-child + html .snippet-wrap .snippet-hide { bottom: 25px; }

* html .snippet-wrap .snippet-hide { bottom: 25px; }

.snippet-wrap .snippet-menu pre, .snippet-wrap .snippet-hide pre { backgrou=
nd-color: transparent; margin: 0px; padding: 0px; }

.snippet-wrap .snippet-menu a, .snippet-wrap .snippet-hide a { padding: 0px=
 5px; text-decoration: underline; }

.snippet-wrap pre.sh_sourceCode { padding: 1em; line-height: 1.8em; overflo=
w: auto; position: relative; border-radius: 15px; box-shadow: rgb(0, 0, 0) =
2px 2px 5px; }

.snippet-wrap pre.snippet-textonly { padding: 2em; }

:first-child + html .snippet-wrap pre.snippet-formatted { padding: 2em 1em;=
 }

* html .snippet-wrap pre.snippet-formatted { padding: 2em 1em; }

.snippet-reveal pre.sh_sourceCode { padding: 0.5em 1em; text-align: right; =
}

.snippet-wrap .snippet-num li { padding-left: 1.5em; }

.snippet-wrap .snippet-no-num { list-style: none; padding: 0.6em 1em; margi=
n: 0px; }

.snippet-wrap .snippet-no-num li { list-style: none; padding-left: 0px; }

.snippet-wrap .snippet-num { margin: 1em 0px 1em 1em; padding-left: 3em; }

.snippet-wrap .snippet-num li { list-style: decimal-leading-zero outside no=
ne; }

.snippet-wrap .snippet-no-num li.box { padding: 0px 6px; margin-left: -6px;=
 }

.snippet-wrap .snippet-num li.box { border: 1px solid; list-style-position:=
 inside; margin-left: -3em; padding-left: 6px; }

:first-child + html .snippet-wrap .snippet-num li.box { margin-left: -2.4em=
; }

* html .snippet-wrap .snippet-num li.box { margin-left: -2.4em; }

.snippet-wrap li.box-top { border-width: 1px 1px 0px !important; }

.snippet-wrap li.box-bot { border-width: 0px 1px 1px !important; }

.snippet-wrap li.box-mid { border-width: 0px 1px !important; }

.snippet-wrap .snippet-num li .box-sp { width: 18px; display: inline-block;=
 }

:first-child + html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

* html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

.snippet-wrap .snippet-no-num li.box { border: 1px solid; }

.snippet-wrap .snippet-no-num li .box-sp { display: none; }
------MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/EXERCISE/01/index.files/image001.png

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
RK5CYII=
------MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv----
Content-Type: text/html
Content-ID: <frame-281-711a3f1b-ab2b-475e-bd24-2a14d2dfdf62@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--2G3xm0h8dyYdKaHRrpKdRVHyvb6aNpeQ8bgs3kvlPv------
