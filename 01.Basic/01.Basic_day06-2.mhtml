From: <Saved by Blink>
Subject: CASE
Date: Wed, 28 Feb 2017 10:26:39 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----"

------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: text/html
Content-ID: <frame-101-e2dfdd57-8a59-481c-b0da-9b5bb2d6975c@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html

<html xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta http-equiv=3D"Cont=
ent-Type" content=3D"text/html; charset=3DUTF-8">
    <title>CASE</title>
   =20
   =20
   =20
   =20
    <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/t=
tsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/index.css" rel=
=3D"Stylesheet">
    <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/t=
tsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/jquery.snippet.=
css" rel=3D"Stylesheet">
  </head>
  <body>
    <div class=3D"source_style_case">
      <a name=3D"page_top_case" id=3D"top_anchor">
      </a><a id=3D"link_top" href=3D"http://pdf7.tarena.com.cn/tts8_source/=
ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#page_top_case">=
Top</a>
      <h1>JAVA Fundamental DAY06</h1>
      <ol class=3D"index">
        <li>
          <a href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD=
_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#case1">=E7=8C=9C=E5=AD=97=E6=AF=
=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=E8=AE=BE=E8=AE=A1=E6=95=B0=E6=8D=AE=
=E7=BB=93=E6=9E=84</a>
        </li>
        <li>
          <a href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD=
_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#case2">=E7=8C=9C=E5=AD=97=E6=AF=
=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=E8=AE=BE=E8=AE=A1=E7=A8=8B=E5=BA=8F=
=E7=BB=93=E6=9E=84</a>
        </li>
        <li>
          <a href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD=
_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#case3">=E7=8C=9C=E5=AD=97=E6=AF=
=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=E5=AE=9E=E7=8E=B0=E5=AD=97=E6=AF=8D=
=E7=94=9F=E6=88=90=E6=96=B9=E6=B3=95</a>
        </li>
        <li>
          <a href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD=
_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#case4">=E7=8C=9C=E5=AD=97=E6=AF=
=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=E5=AE=9E=E7=8E=B0=E5=AD=97=E6=AF=8D=
=E6=A3=80=E6=B5=8B=E6=96=B9=E6=B3=95</a>
        </li>
        <li>
          <a href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD=
_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#case5">=E7=8C=9C=E5=AD=97=E6=AF=
=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=E5=AE=9E=E7=8E=B0=E4=B8=BB=E6=96=B9=
=E6=B3=95</a>
        </li>
      </ol>
      <a name=3D"case1">
      </a>
      <h2>1 =E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=
=E8=AE=BE=E8=AE=A1=E6=95=B0=E6=8D=AE=E7=BB=93=E6=9E=84</h2>
      <h3>1.1 =E9=97=AE=E9=A2=98</h3>
      <p>=E6=9C=89=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=8C=E5=
=85=B6=E6=B8=B8=E6=88=8F=E8=A7=84=E5=88=99=E4=B8=BA=EF=BC=9A=E7=A8=8B=E5=BA=
=8F=E9=9A=8F=E6=9C=BA=E4=BA=A7=E7=94=9F5=E4=B8=AA=E6=8C=89=E7=85=A7=E4=B8=
=80=E5=AE=9A=E9=A1=BA=E5=BA=8F=E6=8E=92=E5=88=97=E7=9A=84=E5=AD=97=E7=AC=A6=
=E4=BD=9C=E4=B8=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E7=BB=93=E6=9E=9C=EF=BC=8C=E7=
=94=B1=E7=8E=A9=E5=AE=B6=E6=9D=A5=E7=8C=9C=E6=B5=8B=E6=AD=A4=E5=AD=97=E7=AC=
=A6=E4=B8=B2=E3=80=82=E7=8E=A9=E5=AE=B6=E5=8F=AF=E4=BB=A5=E7=8C=9C=E6=B5=8B=
=E5=A4=9A=E6=AC=A1=EF=BC=8C=E6=AF=8F=E7=8C=9C=E6=B5=8B=E4=B8=80=E6=AC=A1=EF=
=BC=8C=E5=88=99=E7=94=B1=E7=B3=BB=E7=BB=9F=E6=8F=90=E7=A4=BA=E7=BB=93=E6=9E=
=9C=E3=80=82=E5=A6=82=E6=9E=9C=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AE=8C=E5=85=A8=
=E6=AD=A3=E7=A1=AE=EF=BC=8C=E5=88=99=E6=B8=B8=E6=88=8F=E7=BB=93=E6=9D=9F=EF=
=BC=8C=E8=AE=A1=E7=AE=97=E7=8E=A9=E5=AE=B6=E7=9A=84=E6=B8=B8=E6=88=8F=E5=BE=
=97=E5=88=86=E5=B9=B6=E8=BE=93=E5=87=BA=EF=BC=9B=E5=A6=82=E6=9E=9C=E6=B2=A1=
=E6=9C=89=E7=8C=9C=E5=AF=B9=EF=BC=8C=E5=88=99=E6=8F=90=E7=A4=BA=E7=8C=9C=E6=
=B5=8B=E7=9A=84=E7=BB=93=E6=9E=9C=EF=BC=8C=E5=A6=82=E7=8C=9C=E5=AF=B9=E4=BA=
=86=E5=87=A0=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E4=BB=A5=E5=8F=8A=E7=8C=9C=
=E5=AF=B9=E4=BA=86=E5=87=A0=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=
=BD=AE=E7=AD=89=E4=BF=A1=E6=81=AF=EF=BC=8C=E5=B9=B6=E6=8F=90=E7=A4=BA=E7=8E=
=A9=E5=AE=B6=E6=B8=B8=E6=88=8F=E7=BB=A7=E7=BB=AD=E3=80=82</p>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E8=A6=81=E6=B1=82=E4=BD=BF=E7=94=A8=E4=
=BA=A4=E4=BA=92=E7=9A=84=E6=96=B9=E5=BC=8F=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=B8=
=B8=E6=88=8F=EF=BC=9A=E7=94=B1=E7=8E=A9=E5=AE=B6=E5=9C=A8=E6=8E=A7=E5=88=B6=
=E5=8F=B0=E8=BE=93=E5=85=A5=E6=89=80=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=
=AC=A6=E4=B8=B2=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=89=80=E7=8C=9C=E6=B5=8B=E7=9A=
=84=E5=AD=97=E7=AC=A6=E4=B8=B2=E4=B8=8E=E7=BB=93=E6=9E=9C=E5=B9=B6=E4=B8=8D=
=E5=AE=8C=E5=85=A8=E7=9B=B8=E5=90=8C=EF=BC=8C=E5=88=99=E5=9C=A8=E7=95=8C=E9=
=9D=A2=E8=BE=93=E5=87=BA=E6=AF=94=E8=BE=83=E5=90=8E=E7=9A=84=E7=BB=93=E6=9E=
=9C=EF=BC=8C=E5=B9=B6=E6=8F=90=E9=86=92=E7=8E=A9=E5=AE=B6=E7=BB=A7=E7=BB=AD=
=E7=8C=9C=E6=B5=8B=E3=80=82=E4=BA=A4=E4=BA=92=E8=BF=87=E7=A8=8B=E5=A6=82=E5=
=9B=BE=EF=BC=8D7=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"image">
        <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image001.png">
        <p>=E5=9B=BE- 7</p>
      </div>
      <p>=E7=94=B1=E5=9B=BE=EF=BC=8D7=E5=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=
=EF=BC=8C=E6=AF=8F=E6=AC=A1=E7=8C=9C=E6=B5=8B=E5=90=8E=EF=BC=8C=E7=A8=8B=E5=
=BA=8F=E5=B0=86=E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E6=89=80=E8=BE=93=E5=85=
=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2=EF=BC=8C=E6=AF=94=E8=BE=83=E5=AD=97=
=E7=AC=A6=E4=BB=A5=E5=8F=8A=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=EF=
=BC=8C=E7=84=B6=E5=90=8E=E6=8F=90=E7=A4=BA=E7=BB=93=E6=9E=9C=EF=BC=9A5=E4=
=B8=AA=E5=AD=97=E7=AC=A6=E4=B8=AD=E6=AD=A3=E7=A1=AE=E7=9A=84=E5=AD=97=E7=AC=
=A6=E4=B8=AA=E6=95=B0=EF=BC=8C=E4=BB=A5=E5=8F=8A=E4=BD=8D=E7=BD=AE=E6=AD=A3=
=E7=A1=AE=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=AA=E6=95=B0=EF=BC=8C=E4=BB=A5=E4=
=BE=BF=E4=BA=8E=E7=8E=A9=E5=AE=B6=E5=88=A4=E6=96=AD=E5=90=8E=E7=BB=AD=E5=A6=
=82=E4=BD=95=E8=BF=9B=E8=A1=8C=E7=8C=9C=E6=B5=8B=E3=80=82</p>
      <p>=E7=8E=A9=E5=AE=B6=E7=BB=88=E4=BA=8E=E7=8C=9C=E6=B5=8B=E6=AD=A3=E7=
=A1=AE=E5=90=8E=EF=BC=8C=E6=B8=B8=E6=88=8F=E7=BB=93=E6=9D=9F=EF=BC=8C=E5=B9=
=B6=E7=BB=99=E5=87=BA=E6=B8=B8=E6=88=8F=E5=BE=97=E5=88=86=EF=BC=8C=E4=BA=A4=
=E4=BA=92=E8=BF=87=E7=A8=8B=E5=A6=82=E5=9B=BE=EF=BC=8D8=E6=89=80=E7=A4=BA=
=EF=BC=9A</p>
      <div class=3D"image">
        <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image002.png">
        <p>=E5=9B=BE- 8</p>
      </div>
      <p>=E5=85=B6=E4=B8=AD=EF=BC=8C=E6=B8=B8=E6=88=8F=E7=9A=84=E5=BE=97=E5=
=88=86=E8=A7=84=E5=88=99=E4=B8=BA=EF=BC=9A=E5=AD=97=E7=AC=A6=E7=9A=84=E4=B8=
=AA=E6=95=B0=E4=B9=98=E4=BB=A5100=E4=B8=BA=E6=80=BB=E5=88=86=EF=BC=8C=E5=8D=
=B3=E6=AD=A4=E6=B8=B8=E6=88=8F=E7=9A=84=E6=80=BB=E5=88=86=E4=B8=BA 500 =E5=
=88=86=E3=80=82=E7=8E=A9=E5=AE=B6=E5=A6=82=E6=9E=9C=E7=AC=AC=E4=B8=80=E6=AC=
=A1=E5=B0=B1=E7=8C=9C=E5=AF=B9=EF=BC=8C=E5=88=99=E5=BE=97=E6=BB=A1=E5=88=86=
=EF=BC=88500=E5=88=86=EF=BC=89=EF=BC=9B=E6=AF=8F=E5=A4=9A=E7=8C=9C=E6=B5=8B=
=E4=B8=80=E6=AC=A1=EF=BC=8C=E5=88=99=E6=89=A310=E5=88=86=E3=80=82=E7=94=B1=
=E5=9B=BE=EF=BC=8D8=E5=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=EF=BC=8C=E7=8E=A9=
=E5=AE=B6=E5=85=B1=E7=8C=9C=E6=B5=8B=E4=BA=865=E6=AC=A1=EF=BC=8C=E5=9B=A0=
=E6=AD=A4=EF=BC=8C=E5=BE=97=E5=88=86=E4=B8=BA 450=E3=80=82</p>
      <p>=E6=9C=80=E5=90=8E=EF=BC=8C=E5=A6=82=E6=9E=9C=E7=8E=A9=E5=AE=B6=E5=
=9C=A8=E6=8E=A7=E5=88=B6=E5=8F=B0=E5=BD=95=E5=85=A5 exit=EF=BC=8C=E5=88=99=
=E6=B8=B8=E6=88=8F=E4=B8=AD=E6=AD=A2=EF=BC=8C=E7=A8=8B=E5=BA=8F=E7=BB=93=E6=
=9D=9F=E3=80=82=E4=BA=A4=E4=BA=92=E8=BF=87=E7=A8=8B=E5=A6=82=E5=9B=BE=EF=BC=
=8D9=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"image">
        <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image003.png">
        <p>=E5=9B=BE- 9</p>
      </div>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E5=AE=9E=E7=8E=B0=E7=
=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E4=B8=AD=E7=9A=84=E6=95=B0=E6=8D=
=AE=E7=BB=93=E6=9E=84=E8=AE=BE=E8=AE=A1=EF=BC=8C=E5=8D=B3=EF=BC=8C=E8=AE=BE=
=E8=AE=A1=E7=9B=B8=E5=85=B3=E7=9A=84=E6=95=B0=E6=8D=AE=E7=BB=93=E6=9E=84=EF=
=BC=8C=E5=8F=AF=E4=BB=A5=E5=AD=98=E5=82=A8=E6=AD=A4=E7=A8=8B=E5=BA=8F=E4=B8=
=AD=E6=89=80=E7=94=A8=E5=88=B0=E7=9A=84=E7=9B=B8=E5=85=B3=E6=95=B0=E6=8D=AE=
=E3=80=82</p>
      <h3>1.2 =E6=96=B9=E6=A1=88</h3>
      <p>=E5=88=86=E6=9E=90=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E5=
=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=EF=BC=8C=E6=AD=A4=E7=A8=8B=E5=BA=8F=E9=9C=
=80=E8=A6=81=E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0=E3=80=81=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=
=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=81=E7=8E=A9=E5=AE=B6=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E6=80=BB=E6=AC=A1=E6=95=B0=E3=80=81=E7=8E=A9=E5=AE=B6=
=E5=BD=95=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2=EF=BC=8C=E4=BB=A5=E5=
=8F=8A=E6=AF=94=E8=BE=83=E5=90=8E=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E5=9B=
=A0=E6=AD=A4=EF=BC=8C=E8=AE=BE=E8=AE=A1=E5=A6=82=E4=B8=8B=E5=8F=98=E9=87=8F=
=E6=9D=A5=E5=AD=98=E5=82=A8=E6=AD=A4=E6=B8=B8=E6=88=8F=E4=B8=AD=E9=9C=80=E8=
=A6=81=E7=94=A8=E5=88=B0=E7=9A=84=E7=9B=B8=E5=85=B3=E6=95=B0=E6=8D=AE=EF=BC=
=9A</p>
      <ul class=3D"list">
        <li>int =E7=B1=BB=E5=9E=8B=E5=8F=98=E9=87=8F count=EF=BC=9A=E7=94=
=A8=E4=BA=8E=E8=AE=B0=E5=BD=95=E7=8E=A9=E5=AE=B6=E7=8C=9C=E5=AD=97=E6=AF=8D=
=E7=9A=84=E6=80=BB=E6=AC=A1=E6=95=B0=EF=BC=9B
</li>
        <li>char=E6=95=B0=E7=BB=84=E7=B1=BB=E5=9E=8B=E5=8F=98=E9=87=8F inpu=
t=EF=BC=9A=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E7=94=A8=E6=88=B7=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE=E3=80=82
</li>
        <li>char=E6=95=B0=E7=BB=84=E7=B1=BB=E5=9E=8B=E5=8F=98=E9=87=8F chs=
=EF=BC=9A =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E9=9A=8F=E6=9C=BA=E7=94=9F=
=E6=88=90=E7=9A=84=E5=A4=9A=E4=B8=AA=E5=AD=97=E6=AF=8D=E6=89=80=E7=BB=84=E6=
=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2=EF=BC=9B
</li>
        <li>int =E7=B1=BB=E5=9E=8B=E6=95=B0=E7=BB=84=E5=8F=98=E9=87=8F resu=
lt =EF=BC=9A=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=
=E7=BB=93=E6=9E=9C=E3=80=82=E6=AD=A4=E6=95=B0=E7=BB=84=E6=9C=89=E4=B8=A4=E4=
=B8=AA=E5=85=83=E7=B4=A0=EF=BC=8C=E7=AC=AC=E4=B8=80=E4=B8=AA=E7=94=A8=E4=BA=
=8E=E4=BF=9D=E5=AD=98=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=
=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=E4=B8=94=
=E4=BD=8D=E7=BD=AE=E4=B9=9F=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=AC=AC=E4=BA=8C=
=E4=B8=AA=E5=85=83=E7=B4=A0=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E7=8C=9C=E5=
=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=
=AD=A3=E7=A1=AE=E4=BD=86=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=
=80=82
</li>
      </ul>
      <h3>1.3 =E6=AD=A5=E9=AA=A4</h3>
      <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E5=AE=9A=E4=
=B9=89=E7=B1=BB=E5=8F=8A main=E6=96=B9=E6=B3=95</p>
      <p>=E9=A6=96=E5=85=88=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=AA=E5=90=8D=E4=
=B8=BA GuessingGame =E7=9A=84=E7=B1=BB=EF=BC=8C=E5=B9=B6=E5=9C=A8=E7=B1=BB=
=E4=B8=AD=E6=B7=BB=E5=8A=A0Java=E5=BA=94=E7=94=A8=E7=A8=8B=E5=BA=8F=E7=9A=
=84=E4=B8=BB=E6=96=B9=E6=B3=95main=EF=BC=8C=E4=BB=A3=E7=A0=81=E5=A6=82=E4=
=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <span =
class=3D"sh_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_func=
tion">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef=
_func">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"=
sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</spa=
n></li></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"di=
splay:none;">public class GuessingGame {
	public static void main(String[] args) {
	=09
	}
}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E5=AD=98=E5=
=82=A8=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</p>
      <p>=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=AAint=E7=B1=BB=E5=9E=8B=E5=8F=98=
=E9=87=8F count=EF=BC=8C=E7=94=A8=E4=BA=8E=E8=AE=B0=E5=BD=95=E7=8E=A9=E5=AE=
=B6=E7=8C=9C=E5=AD=97=E6=AF=8D=E7=9A=84=E6=80=BB=E6=AC=A1=E6=95=B0=EF=BC=8C=
=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <span =
class=3D"sh_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_func=
tion">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef=
_func">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"=
sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"b=
old_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span c=
lass=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=
=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_c=
bracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li></ol></p=
re><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">pu=
blic class GuessingGame {
	public static void main(String[] args) {
#cold_bold		int count =3D 0;
	}
}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=89=EF=BC=9A=E5=AD=98=E5=
=82=A8=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</p>
      <p>char=E6=95=B0=E7=BB=84=E7=B1=BB=E5=9E=8B=E5=8F=98=E9=87=8F input=
=EF=BC=9A=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E7=94=A8=E6=88=B7=E7=8C=9C=E6=
=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE=EF=BC=8C=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=
=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <span =
class=3D"sh_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_func=
tion">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef=
_func">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"=
sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=
=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</s=
pan></li><li class=3D"bold_code">     char<span class=3D"sh_symbol">[]</spa=
n> input<span class=3D"sh_symbol">=3D</span><span class=3D"sh_keyword">null=
</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</=
span></li></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D=
"display:none;">public class GuessingGame {
	public static void main(String[] args) {
		int count =3D 0;
#cold_bold     char[] input=3Dnull;
	}
}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E5=9B=9B=EF=BC=9A=E5=AD=98=E5=
=82=A8=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E7=9A=84=E5=A4=9A=E4=B8=AA=E5=AD=
=97=E6=AF=8D</p>
      <p>=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=AAchar=E6=95=B0=E7=BB=84=E7=B1=
=BB=E5=9E=8B chs=EF=BC=8C =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E9=9A=8F=E6=
=9C=BA=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E3=80=82=E4=BB=A3=E7=A0=
=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <span =
class=3D"sh_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_func=
tion">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef=
_func">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"=
sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=
=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</s=
pan></li><li>char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh=
_symbol">=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_=
symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=
=3D"sh_symbol">=3D</span><span class=3D"sh_keyword">null</span><span class=
=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_c=
bracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li></ol></p=
re><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">pu=
blic class GuessingGame {
	public static void main(String[] args) {
		int count =3D 0;
char[] input=3Dnull;
#cold_bold		char[] chs =3Dnull;
	}
}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=94=EF=BC=9A=E5=AD=98=E5=
=82=A8=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C</p>
      <p>=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=AAint=E6=95=B0=E7=BB=84=E7=B1=BB=
=E5=9E=8B=E5=8F=98=E9=87=8F result=EF=BC=8C=E7=94=A8=E4=BA=8E=E5=AD=98=E5=
=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=AF=A5=E6=95=
=B0=E7=BB=84=E6=9C=89=E4=B8=A4=E4=B8=AA=E5=85=83=E7=B4=A0=EF=BC=8C=E7=AC=AC=
=E4=B8=80=E4=B8=AA=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=AE=8C=E5=85=A8=E7=
=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=
=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=
=AC=AC=E4=BA=8C=E4=B8=AA=E5=85=83=E7=B4=A0=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=
=98=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=
=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=
=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=
=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li><span class=3D"sh_keyword">public</span> <span =
class=3D"sh_keyword">class</span> GuessingGame <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> void <span class=3D"sh_func=
tion">main</span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef=
_func">String</span><span class=3D"sh_symbol">[]</span> args<span class=3D"=
sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=
=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</s=
pan></li><li>char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh=
_symbol">=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_=
symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=
ar<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</sp=
an><span class=3D"sh_keyword">null</span><span class=3D"sh_symbol">;</span>=
</li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;int<span class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=
=3D</span><span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol=
">[</span><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></=
li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"sn=
ippet-textonly sh_sourceCode" style=3D"display:none;">public class Guessing=
Game {
	public static void main(String[] args) {
		int count =3D 0;
char[] input=3Dnull;
		char[] chs =3Dnull;
#cold_bold		int[] result =3Dnew int[2];
	}
}
</pre></div></div>
      <h3>1.4 =E5=AE=8C=E6=95=B4=E4=BB=A3=E7=A0=81</h3>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh=
_sourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" style=3D"display:=
 none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena=
.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.=
html#">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.taren=
a.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index=
.html#">pop-up</a></pre></div><pre class=3D"hide sh_javascript snippet-form=
atted sh_sourceCode"><ol class=3D"snippet-num"><li><span class=3D"sh_keywor=
d">public</span> <span class=3D"sh_keyword">class</span> GuessingGame <span=
 class=3D"sh_cbracket">{</span>&nbsp;&nbsp;&nbsp;&nbsp;</li><li><span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</span> void=
 <span class=3D"sh_function">main</span><span class=3D"sh_symbol">(</span><=
span class=3D"sh_predef_func">String</span><span class=3D"sh_symbol">[]</sp=
an> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <span class=3D"=
sh_number">0</span><span class=3D"sh_symbol">;</span></li><li>    <span cla=
ss=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=
=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=3D"sh_symbol">[]=
</span> input<span class=3D"sh_symbol">=3D</span><span class=3D"sh_keyword"=
>null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=
=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol"=
>[]</span> chs <span class=3D"sh_symbol">=3D</span><span class=3D"sh_keywor=
d">null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E7=94=A8=E4=BA=
=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=9C</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh=
_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span><span class=
=3D"sh_number">2</span><span class=3D"sh_symbol">];</span>&nbsp;&nbsp;&nbsp=
;&nbsp;</li><li><span class=3D"sh_cbracket">}</span></li><li><span class=3D=
"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonly sh_sou=
rceCode" style=3D"display:none;">public class GuessingGame {=09
public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
    //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=
=B0=E6=8D=AE
char[] input=3Dnull;
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];=09
}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01=
/index.html#" class=3D"snippet-revealed snippet-toggle sh_url">=E9=9A=90=E8=
=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_acid snippet-wr=
ap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.com.cn/tts8_=
source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" class=
=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pre></div></div>
      <a name=3D"case2">
      </a>
      <h2>2 =E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=
=E8=AE=BE=E8=AE=A1=E7=A8=8B=E5=BA=8F=E7=BB=93=E6=9E=84</h2>
      <h3>2.1 =E9=97=AE=E9=A2=98</h3>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E5=AE=9E=E7=8E=B0=E7=
=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E7=A8=8B=E5=BA=8F=E4=B8=AD=E7=9A=
=84=E7=A8=8B=E5=BA=8F=E7=BB=93=E6=9E=84=E8=AE=BE=E8=AE=A1=E3=80=82</p>
      <h3>2.2 =E6=96=B9=E6=A1=88</h3>
      <p>=E5=88=86=E6=9E=90=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E5=
=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=EF=BC=8C=E7=A8=8B=E5=BA=8F=E9=A6=96=E5=85=
=88=E9=9C=80=E8=A6=81=E9=9A=8F=E6=9C=BA=E4=BA=A7=E7=94=9F 5 =E4=B8=AA=E4=B8=
=8D=E5=90=8C=E7=9A=84=E5=AD=97=E6=AF=8D=E4=BD=9C=E4=B8=BA=E9=9C=80=E8=A6=81=
=E7=8C=9C=E6=B5=8B=E7=9A=84=E7=BB=93=E6=9E=9C=EF=BC=8C=E5=9B=A0=E6=AD=A4=EF=
=BC=8C=E5=8F=AF=E4=BB=A5=E5=85=88=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=AA=E6=96=
=B9=E6=B3=95=EF=BC=8C=E4=BB=A5=E5=AE=9E=E7=8E=B0=E6=AD=A4=E5=8A=9F=E8=83=BD=
=EF=BC=9B=E5=85=B6=E6=AC=A1=EF=BC=8C=E6=AF=8F=E5=BD=93=E7=8E=A9=E5=AE=B6=E7=
=8C=9C=E6=B5=8B=E4=B8=80=E6=AC=A1=E5=90=8E=EF=BC=8C=E7=A8=8B=E5=BA=8F=E9=9C=
=80=E8=A6=81=E5=B0=86=E7=8E=A9=E5=AE=B6=E5=BD=95=E5=85=A5=E7=9A=84=E5=AD=97=
=E7=AC=A6=E4=B8=B2=E5=92=8C=E6=AD=A3=E7=A1=AE=E7=AD=94=E6=A1=88=E8=BF=9B=E8=
=A1=8C=E6=AF=94=E8=BE=83=EF=BC=8C=E7=BB=9F=E8=AE=A1=E6=AD=A3=E7=A1=AE=E7=9A=
=84=E5=AD=97=E7=AC=A6=E4=B8=AA=E6=95=B0=E4=BB=A5=E5=8F=8A=E6=AD=A3=E7=A1=AE=
=E7=9A=84=E4=BD=8D=E7=BD=AE=E4=B8=AA=E6=95=B0=EF=BC=8C=E5=9B=A0=E6=AD=A4=EF=
=BC=8C=E4=B9=9F=E5=8F=AF=E4=BB=A5=E5=85=88=E5=AE=9A=E4=B9=89=E4=B8=80=E4=B8=
=AA=E6=96=B9=E6=B3=95=EF=BC=8C=E4=B8=93=E7=94=A8=E4=BA=8E=E5=AE=9E=E7=8E=B0=
=E6=AF=94=E8=BE=83=E5=8A=9F=E8=83=BD=E3=80=82=E8=BF=99=E6=A0=B7=EF=BC=8C=E5=
=B0=B1=E5=8F=AF=E4=BB=A5=E5=9C=A8 main =E6=96=B9=E6=B3=95=E4=B8=AD=E8=B0=83=
=E7=94=A8=E8=BF=99=E4=B8=A4=E4=B8=AA=E6=96=B9=E6=B3=95=E3=80=82</p>
      <h3>2.3 =E6=AD=A5=E9=AA=A4</h3>
      <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E5=AE=9A=E4=
=B9=89=E6=96=B9=E6=B3=95 generate()</p>
      <p>=E5=9C=A8 GuessingGame =E7=B1=BB=E4=B8=AD=EF=BC=8C=E5=AE=9A=E4=B9=
=89=E6=96=B9=E6=B3=95 generate()=EF=BC=8C=E8=AF=A5=E6=96=B9=E6=B3=95=E7=94=
=A8=E4=BA=8E=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E4=BA=94=E4=B8=AA=E4=B8=8D=
=E5=90=8C=E7=9A=84=E5=AD=97=E6=AF=8D=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=
=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>import java<span class=3D"sh_symbol">.</span>ut=
il<span class=3D"sh_symbol">.</span>Scanner<span class=3D"sh_symbol">;</spa=
n></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">class</span> Guess=
ingGame <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">stati=
c</span> void <span class=3D"sh_function">main</span><span class=3D"sh_symb=
ol">(</span><span class=3D"sh_predef_func">String</span><span class=3D"sh_s=
ymbol">[]</span> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_c=
bracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <sp=
an class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span></li><li> =
   <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=3D"s=
h_symbol">[]</span> input<span class=3D"sh_symbol">=3D</span><span class=3D=
"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=
=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=
=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span><span clas=
s=3D"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =
=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=
=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<s=
pan class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</spa=
n> <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</sp=
an><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nb=
sp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none=
;">&nbsp;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_comment">/**</span></li><li class=3D"bold_code"><span class=3D"=
sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=
=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=
=88=97</span></li><li class=3D"bold_code"><span class=3D"sh_comment">&nbsp;=
&nbsp;&nbsp;&nbsp; * </span></li><li class=3D"bold_code"><span class=3D"sh_=
comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return<=
/span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=
=AD=97=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li class=3D"bold_cod=
e"><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li cl=
ass=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public=
</span> <span class=3D"sh_keyword">static</span> char<span class=3D"sh_symb=
ol">[]</span> <span class=3D"sh_function">generate</span><span class=3D"sh_=
symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bol=
d_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"=
sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">new</span> char<span class=3D"sh_symbol">[</span><span clas=
s=3D"sh_number">5</span><span class=3D"sh_symbol">];</span></li><li class=
=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li cla=
ss=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_keyword">return</span> chs<span class=3D"sh_symbol">;</span></li><l=
i class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}=
</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span c=
lass=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonly=
 sh_sourceCode" style=3D"display:none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
    //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=
=B0=E6=8D=AE
char[] input=3Dnull;
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];	=09
	}

#cold_bold	/**
#cold_bold	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
#cold_bold	 *=20
#cold_bold	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=
=A6=E7=9A=84=E6=95=B0=E7=BB=84
#cold_bold	 */
#cold_bold	public static char[] generate() {
#cold_bold		char[] chs =3D new char[5];
#cold_bold	=09
#cold_bold		return chs;
#cold_bold	}

}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E5=AE=9A=E4=
=B9=89=E6=96=B9=E6=B3=95 check()</p>
      <p>=E5=9C=A8GuessingGame=E7=B1=BB=E4=B8=AD=EF=BC=8C=E5=AE=9A=E4=B9=89=
=E6=96=B9=E6=B3=95 check()=E3=80=82=E8=AF=A5=E6=96=B9=E6=B3=95=E7=94=A8=E4=
=BA=8E=E5=B0=86=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=A4=9A=E4=B8=
=AA=E5=AD=97=E6=AF=8D=EF=BC=88=E5=8F=82=E6=95=B0 input =EF=BC=89=E5=92=8C=
=E7=B3=BB=E7=BB=9F=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E7=9A=84=E5=A4=9A=E4=
=B8=AA=E5=AD=97=E6=AF=8D=EF=BC=88=E5=8F=82=E6=95=B0 chs=EF=BC=89=E8=BF=9B=
=E8=A1=8C=E6=AF=94=E8=BE=83=EF=BC=8C=E7=BB=9F=E8=AE=A1=E6=AD=A3=E7=A1=AE=E7=
=9A=84=E5=AD=97=E7=AC=A6=E4=B8=AA=E6=95=B0=EF=BC=8C=E4=BB=A5=E5=8F=8A=E4=BD=
=8D=E7=BD=AE=E6=AD=A3=E7=A1=AE=E7=9A=84=E4=B8=AA=E6=95=B0=EF=BC=8C=E5=B9=B6=
=E5=B0=86=E7=BB=93=E6=9E=9C=E5=AD=98=E5=82=A8=E5=88=B0=E6=95=B0=E7=BB=84=E4=
=B8=AD=EF=BC=8C=E7=84=B6=E5=90=8E=E8=BF=94=E5=9B=9E=E7=BB=99=E8=B0=83=E7=94=
=A8=E6=96=B9=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=
=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>import java<span class=3D"sh_symbol">.</span>ut=
il<span class=3D"sh_symbol">.</span>Scanner<span class=3D"sh_symbol">;</spa=
n></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">class</span> Guess=
ingGame <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">stati=
c</span> void <span class=3D"sh_function">main</span><span class=3D"sh_symb=
ol">(</span><span class=3D"sh_predef_func">String</span><span class=3D"sh_s=
ymbol">[]</span> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_c=
bracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <sp=
an class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span></li><li> =
   <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=3D"s=
h_symbol">[]</span> input<span class=3D"sh_symbol">=3D</span><span class=3D=
"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=
=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=
=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span><span clas=
s=3D"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =
=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=
=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<s=
pan class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</spa=
n> <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</sp=
an><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><sp=
an style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<s=
pan class=3D"sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbs=
p;&nbsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=
=81=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></=
li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><l=
i><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=
=3D"sh_type">@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=
=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li>=
<li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span class=
=3D"sh_keyword">static</span> char<span class=3D"sh_symbol">[]</span> <span=
 class=3D"sh_function">generate</span><span class=3D"sh_symbol">()</span> <=
span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=3D=
"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> char<span clas=
s=3D"sh_symbol">[</span><span class=3D"sh_number">5</span><span class=3D"sh=
_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_=
keyword">return</span> chs<span class=3D"sh_symbol">;</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=
=3D"display:none;">&nbsp;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li class=3D"bold_code"=
><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=
=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=
=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=
=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=
=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li class=3D=
"bold_code"><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></=
li><li class=3D"bold_code"><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nb=
sp; * </span><span class=3D"sh_type">@param</span><span class=3D"sh_comment=
"> chs</span></li><li class=3D"bold_code"><span class=3D"sh_comment">&nbsp;=
&nbsp;&nbsp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=
=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li class=3D"bold_code">=
<span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D=
"sh_type">@param</span><span class=3D"sh_comment"> input</span></li><li cla=
ss=3D"bold_code"><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *     =
       =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E5=
=BA=8F=E5=88=97</span></li><li class=3D"bold_code"><span class=3D"sh_commen=
t">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</span>=
<span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=
=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84=
 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=
=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><li clas=
s=3D"bold_code"><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *      =
   =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=
=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=
=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=
=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=
=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=
=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=
=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82</span></li><li class=3D"bold_code"><span=
 class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li class=3D"b=
old_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> =
<span class=3D"sh_keyword">static</span> int<span class=3D"sh_symbol">[]</s=
pan> <span class=3D"sh_function">check</span><span class=3D"sh_symbol">(</s=
pan>char<span class=3D"sh_symbol">[]</span> chs<span class=3D"sh_symbol">,<=
/span> char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh_symbo=
l">)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bold_code=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symb=
ol">[]</span> result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh=
_keyword">new</span> int<span class=3D"sh_symbol">[</span><span class=3D"sh=
_number">2</span><span class=3D"sh_symbol">];</span></li><li class=3D"bold_=
code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=3D"bol=
d_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_k=
eyword">return</span> result<span class=3D"sh_symbol">;</span></li><li clas=
s=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span=
></li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D=
"snippet-textonly sh_sourceCode" style=3D"display:none;">import java.util.S=
canner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
    //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=
=B0=E6=8D=AE
char[] input=3Dnull;
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];		=09
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
		char[] chs =3D new char[5];
	=09
		return chs;
	}

#cold_bold	/**
#cold_bold	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=
=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=
=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=
=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=
=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=
=E6=9E=9C
#cold_bold	 *=20
#cold_bold	 * @param chs
#cold_bold	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=
=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97
#cold_bold	 * @param input
#cold_bold	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=
=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97
#cold_bold	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=
=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=
=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=
=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
#cold_bold	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=
=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=
=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=
=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=
=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=
=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=
=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
#cold_bold	 */
#cold_bold	public static int[] check(char[] chs, char[] input) {
#cold_bold		int[] result =3D new int[2];
#cold_bold	=09
#cold_bold		return result;
#cold_bold	}
}

</pre></div></div>
      <h3>2.4 =E5=AE=8C=E6=95=B4=E4=BB=A3=E7=A0=81</h3>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh=
_sourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" style=3D"display:=
 none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena=
.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.=
html#">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.taren=
a.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index=
.html#">pop-up</a></pre></div><pre class=3D"hide sh_javascript snippet-form=
atted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=
=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Scanner<span c=
lass=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp;</s=
pan></li><li><span class=3D"sh_keyword">public</span> <span class=3D"sh_key=
word">class</span> GuessingGame <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span cl=
ass=3D"sh_keyword">static</span> void <span class=3D"sh_function">main</spa=
n><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">String</=
span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp; =
   <span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> =
<span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span></li><l=
i>    <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=
=8C=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=
=3D"sh_symbol">[]</span> input<span class=3D"sh_symbol">=3D</span><span cla=
ss=3D"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =
=E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span clas=
s=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span><span cla=
ss=3D"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =
=E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=
=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<s=
pan class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</spa=
n> <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</sp=
an><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span>&nb=
sp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbr=
acket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li><spa=
n class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=
=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=
=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&n=
bsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&=
nbsp; * </span><span class=3D"sh_type">@return</span><span class=3D"sh_comm=
ent"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=
=B0=E7=BB=84</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">p=
ublic</span> <span class=3D"sh_keyword">static</span> char<span class=3D"sh=
_symbol">[]</span> <span class=3D"sh_function">generate</span><span class=
=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]=
</span> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword"=
>new</span> char<span class=3D"sh_symbol">[</span><span class=3D"sh_number"=
>5</span><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">return</span> chs<span class=3D"sh_symbo=
l">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</=
span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=
=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=
=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=
=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=
=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=
=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&=
nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</span><span=
 class=3D"sh_comment"> chs</span></li><li><span class=3D"sh_comment">&nbsp;=
&nbsp;&nbsp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=
=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_co=
mment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</sp=
an><span class=3D"sh_comment"> input</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=
=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@=
return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=
=83=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=
=B0=E7=BB=84 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=
=AD=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span><=
/li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=
=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=
=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=
=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=
=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=
=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=
=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=
=E6=AD=A3=E7=A1=AE)=E3=80=82</span></li><li><span class=3D"sh_comment">&nbs=
p;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</span> int<=
span class=3D"sh_symbol">[]</span> <span class=3D"sh_function">check</span>=
<span class=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]</span> c=
hs<span class=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">[]</span=
> input<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=
=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span> <span =
class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span><span =
class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> result<=
span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></l=
i></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display=
:none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
	    // =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=
=AC=A1=E6=95=B0
		int count =3D 0;
    //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=
=B0=E6=8D=AE
char[] input=3Dnull;
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];=09
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
		char[] chs =3D new char[5];
	=09
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
	=09
		return result;
	}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01=
/index.html#" class=3D"snippet-revealed snippet-toggle sh_url">=E9=9A=90=E8=
=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_acid snippet-wr=
ap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.com.cn/tts8_=
source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" class=
=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pre></div></div>
      <a name=3D"case3">
      </a>
      <h2>3 =E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=
=E5=AE=9E=E7=8E=B0=E5=AD=97=E6=AF=8D=E7=94=9F=E6=88=90=E6=96=B9=E6=B3=95</h=
2>
      <h3>3.1 =E9=97=AE=E9=A2=98</h3>
      <p>=E5=AE=9E=E7=8E=B0=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E4=
=B8=AD=E7=9A=84=E5=AD=97=E6=AF=8D=E7=94=9F=E6=88=90=E6=96=B9=E6=B3=95=EF=BC=
=8C=E5=8D=B3=EF=BC=8C=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90 5 =E4=B8=AA=E4=B8=
=8D=E5=90=8C=E7=9A=84=E5=AD=97=E6=AF=8D=E4=BD=9C=E4=B8=BA=E7=8C=9C=E6=B5=8B=
=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82</p>
      <h3>3.2 =E6=96=B9=E6=A1=88</h3>
      <p>=E5=AE=9E=E7=8E=B0gererate=E6=96=B9=E6=B3=95=EF=BC=8C=E9=A6=96=E5=
=85=88=E5=A3=B0=E6=98=8E=E4=B8=80=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=B1=BB=E5=9E=
=8B=E7=9A=84=E6=95=B0=E7=BB=84=EF=BC=8C=E7=94=A8=E4=BA=8E=E5=AD=98=E5=82=A8=
 26 =E4=B8=AA=E5=A4=A7=E5=86=99=E5=AD=97=E6=AF=8D=EF=BC=8C=E7=84=B6=E5=90=
=8E=E5=A3=B0=E6=98=8E=E4=B8=80=E4=B8=AA boolean =E7=B1=BB=E5=9E=8B=E7=9A=84=
=E6=95=B0=E7=BB=84=EF=BC=8C=E5=85=B6=E9=95=BF=E5=BA=A6=E4=B9=9F=E4=B8=BA 26=
=E3=80=82=E6=AD=A4=E6=95=B0=E7=BB=84=E4=B8=AD=E7=9A=84=E5=88=9D=E5=A7=8B=E5=
=80=BC=E5=9D=87=E4=B8=BAfalse=EF=BC=8C=E6=84=8F=E5=91=B3=E7=9D=80=EF=BC=8C=
=E7=A8=8B=E5=BA=8F=E8=B5=B7=E5=A7=8B=EF=BC=8C=E6=B2=A1=E6=9C=89=E4=BB=BB=E4=
=BD=95=E5=AD=97=E6=AF=8D=E8=A2=AB=E9=80=89=E4=B8=AD=E3=80=82=E5=A6=82=E6=9E=
=9C=E6=9F=90=E4=B8=AA=E5=AD=97=E6=AF=8D=E8=A2=AB=E9=80=89=E4=B8=AD=EF=BC=8C=
=E5=88=99=E5=90=8C=E6=97=B6=E8=AE=BE=E7=BD=AE=E8=AF=A5=E5=AD=97=E6=AF=8D=E5=
=9C=A8 boolean =E7=B1=BB=E5=9E=8B=E6=95=B0=E7=BB=84=E4=B8=AD=E5=AF=B9=E5=BA=
=94=E4=BD=8D=E7=BD=AE=E4=B8=8A=E7=9A=84=E5=80=BC=E4=B8=BAtrue=EF=BC=8C=E8=
=A1=A8=E7=A4=BA=E8=AF=A5=E5=AD=97=E6=AF=8D=E8=A2=AB=E9=80=89=E4=B8=AD=E8=BF=
=87=E3=80=82</p>
      <p>=E7=84=B6=E5=90=8E=EF=BC=8C=E4=BD=BF=E7=94=A8=E5=B5=8C=E5=A5=97=E5=
=BE=AA=E7=8E=AF=EF=BC=9A=E5=A4=96=E5=B1=82=E5=BE=AA=E7=8E=AF=E7=94=A8=E4=BA=
=8E=E6=8E=A7=E5=88=B6=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=
=E4=B8=AA=E6=95=B0=EF=BC=8C=E5=8D=B3=EF=BC=8C=E5=BE=AA=E7=8E=AF 5 =E6=AC=A1=
=EF=BC=8C=E4=BB=A5=E4=BA=A7=E7=94=9F5 =E4=B8=AA=E5=AD=97=E6=AF=8D=EF=BC=9B=
=E8=80=8C=E5=86=85=E5=B1=82=E5=BE=AA=E7=8E=AF=E5=88=99=E7=94=A8=E4=BA=8E=E5=
=88=A4=E6=96=AD=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E6=98=
=AF=E5=90=A6=E9=87=8D=E5=A4=8D=E3=80=82generate=E6=96=B9=E6=B3=95=E7=9A=84=
=E7=A8=8B=E5=BA=8F=E6=B5=81=E7=A8=8B=E5=A6=82=E5=9B=BE-10=E6=89=80=E7=A4=BA=
=E3=80=82</p>
      <div class=3D"image">
        <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image004.png">
        <p>=E5=9B=BE- 10</p>
      </div>
      <h3>3.3 =E6=AD=A5=E9=AA=A4</h3>
      <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E6=9E=84=E5=
=BB=BA=E5=AD=98=E5=82=A8=E6=89=80=E6=9C=89=E5=AD=97=E6=AF=8D=E7=9A=84=E6=95=
=B0=E7=BB=84</p>
      <p>=E5=9C=A8generate=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E9=A6=96=E5=
=85=88=E5=AE=9A=E4=B9=89 char =E7=B1=BB=E5=9E=8B=E7=9A=84=E6=95=B0=E7=BB=84=
=E5=8F=98=E9=87=8F letters=EF=BC=8C=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE26 =
=E4=B8=AA=E5=A4=A7=E5=86=99=E5=AD=97=E6=AF=8D=EF=BC=8C=E7=84=B6=E5=90=8E=E5=
=AE=9A=E4=B9=89 boolean =E7=B1=BB=E5=9E=8B=E7=9A=84=E6=95=B0=E7=BB=84=E5=8F=
=98=E9=87=8F flag=EF=BC=8Cflag=E6=95=B0=E7=BB=84=E7=9A=84=E5=A4=A7=E5=B0=8F=
=E5=92=8Cletters=E6=95=B0=E7=BB=84=E7=9A=84=E5=A4=A7=E5=B0=8F=E7=9B=B8=E5=
=90=8C=EF=BC=8C=E7=94=A8=E4=BA=8E=E8=AE=B0=E8=BD=BD=E6=9F=90=E5=AD=97=E6=AF=
=8D=E6=98=AF=E5=90=A6=E8=A2=AB=E9=80=89=E4=B8=AD=EF=BC=8C=E4=BB=A5=E4=BE=BF=
=E4=BA=8E=E5=88=A4=E6=96=AD=E5=AD=97=E6=AF=8D=E6=98=AF=E5=90=A6=E9=87=8D=E5=
=A4=8D=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=
=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">public</span> <span class=3D"sh_keyword">static</span> char<span class=
=3D"sh_symbol">[]</span> <span class=3D"sh_function">generate</span><span c=
lass=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>c=
har<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</s=
pan> <span class=3D"sh_keyword">new</span> char<span class=3D"sh_symbol">[<=
/span><span class=3D"sh_number">5</span><span class=3D"sh_symbol">];</span>=
</li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;char<span class=3D"sh_symbol">[]</span> letters <span class=3D"sh_symbol"=
>=3D</span> <span class=3D"sh_cbracket">{</span> <span class=3D"sh_string">=
'A'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'B'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'C'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'D'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'E'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'F'</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_string">'G'</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_string">'H'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'I'</span><span class=3D"sh_symb=
ol">,</span> <span class=3D"sh_string">'J'</span><span class=3D"sh_symbol">=
,</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_string">'K'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_str=
ing">'L'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string"=
>'M'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'N'=
</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'O'</sp=
an><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'P'</span><=
span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Q'</span><span=
 class=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'</span><span cla=
ss=3D"sh_symbol">,</span> <span class=3D"sh_string">'S'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'T'</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_string">'U'</span><span class=3D"sh_s=
ymbol">,</span> <span class=3D"sh_string">'V'</span><span class=3D"sh_symbo=
l">,</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_string">'W'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_=
string">'X'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_stri=
ng">'Y'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'Z'</span> <span class=3D"sh_cbracket">}</span><span class=3D"sh_symbol">;<=
/span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;boolean<span class=3D"sh_symbol">[]</span> flags <span class=3D"sh_=
symbol">=3D</span> <span class=3D"sh_keyword">new</span> boolean<span class=
=3D"sh_symbol">[</span>letters<span class=3D"sh_symbol">.</span>length<span=
 class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_keyword">return</span> chs<span class=3D"sh_symbol">;</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li></ol=
></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;=
">	public static char[] generate() {
char[] chs =3D new char[5];
#cold_bold		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I=
', 'J',
#cold_bold				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
#cold_bold				'W', 'X', 'Y', 'Z' };
#cold_bold		boolean[] flags =3D new boolean[letters.length];
	=09
		return chs;
	}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E9=9A=8F=E6=
=9C=BA=E9=80=89=E6=8B=A9 5 =E4=B8=AA=E4=B8=8D=E5=90=8C=E7=9A=84=E5=AD=97=E6=
=AF=8D</p>
      <p>=E4=BD=BF=E7=94=A8=E5=B5=8C=E5=A5=97=E5=BE=AA=E7=8E=AF=EF=BC=8C=E9=
=9A=8F=E6=9C=BA=E9=80=89=E6=8B=A9 5 =E4=B8=AA=E4=B8=8D=E5=90=8C=E7=9A=84=E5=
=AD=97=E6=AF=8D,=E5=B9=B6=E4=B8=94=E8=BF=99=E4=BA=94=E4=B8=AA=E5=AD=97=E6=
=AF=8D=E5=90=84=E4=B8=8D=E7=9B=B8=E5=90=8C=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=
=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">public</span> <span class=3D"sh_keyword">static</span> char<span class=
=3D"sh_symbol">[]</span> <span class=3D"sh_function">generate</span><span c=
lass=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol=
">[]</span> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyw=
ord">new</span> char<span class=3D"sh_symbol">[</span><span class=3D"sh_num=
ber">5</span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">;=
</span></li><li>char<span class=3D"sh_symbol">[]</span> letters <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_cbracket">{</span> <span class=
=3D"sh_string">'A'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'B'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'C'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'D'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'=
E'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'F'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'G'</span=
><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'H'</span><sp=
an class=3D"sh_symbol">,</span> <span class=3D"sh_string">'I'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'J'</span><span class=
=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_stri=
ng">'K'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'L'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'M'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'N'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'O'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'P'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Q'</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_string">'S'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'T'</span><span class=3D"sh_symb=
ol">,</span> <span class=3D"sh_string">'U'</span><span class=3D"sh_symbol">=
,</span> <span class=3D"sh_string">'V'</span><span class=3D"sh_symbol">,</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'W'</span><span=
 class=3D"sh_symbol">,</span> <span class=3D"sh_string">'X'</span><span cla=
ss=3D"sh_symbol">,</span> <span class=3D"sh_string">'Y'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'Z'</span> <span class=3D=
"sh_cbracket">}</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh_symbol">[]</=
span> flags <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword"=
>new</span> boolean<span class=3D"sh_symbol">[</span>letters<span class=3D"=
sh_symbol">.</span>length<span class=3D"sh_symbol">];</span></li><li class=
=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i <span cl=
ass=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=
=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> chs<span cl=
ass=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> i<span c=
lass=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li =
class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;int index<span class=3D"sh_symbol">;</span></li><li class=
=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"sh_keyword">do</span> <span class=3D"sh_cbracket=
">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index <span cla=
ss=3D"sh_symbol">=3D</span> <span class=3D"sh_symbol">(</span>int<span clas=
s=3D"sh_symbol">)</span> <span class=3D"sh_symbol">(</span><span class=3D"s=
h_predef_var">Math</span><span class=3D"sh_symbol">.</span><span class=3D"s=
h_function">random</span><span class=3D"sh_symbol">()</span> <span class=3D=
"sh_symbol">*</span> <span class=3D"sh_symbol">(</span>letters<span class=
=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">));</span></li><li c=
lass=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=3D"sh_keyw=
ord">while</span> <span class=3D"sh_symbol">(</span>flags<span class=3D"sh_=
symbol">[</span>index<span class=3D"sh_symbol">]);</span><span class=3D"sh_=
comment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=
=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li class=3D"bold_code">&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<sp=
an class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span cl=
ass=3D"sh_symbol">=3D</span> letters<span class=3D"sh_symbol">[</span>index=
<span class=3D"sh_symbol">];</span></li><li class=3D"bold_code">&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags<span cla=
ss=3D"sh_symbol">[</span>index<span class=3D"sh_symbol">]</span> <span clas=
s=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">true</span><span clas=
s=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">retu=
rn</span> chs<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snip=
pet-textonly sh_sourceCode" style=3D"display:none;">	public static char[] g=
enerate() {
		char[] chs =3D new char[5] ;
char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
#cold_bold		for (int i =3D 0; i &lt; chs.length; i++) {
#cold_bold			int index;
#cold_bold			do {
#cold_bold				index =3D (int) (Math.random() * (letters.length));
#cold_bold			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=
=E7=9A=84=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
#cold_bold			chs[i] =3D letters[index];
#cold_bold			flags[index] =3D true;
#cold_bold		}
		return chs;
	}
</pre></div></div>
      <h3>3.4 =E5=AE=8C=E6=95=B4=E4=BB=A3=E7=A0=81</h3>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh=
_sourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" style=3D"display:=
 none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena=
.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.=
html#">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.taren=
a.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index=
.html#">pop-up</a></pre></div><pre class=3D"hide sh_javascript snippet-form=
atted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=
=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Scanner<span c=
lass=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp;</s=
pan></li><li><span class=3D"sh_keyword">public</span> <span class=3D"sh_key=
word">class</span> GuessingGame <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span cl=
ass=3D"sh_keyword">static</span> void <span class=3D"sh_function">main</spa=
n><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">String</=
span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=
=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"s=
h_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_sy=
mbol">;</span></li><li>    <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=
=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li>=
<li>char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh_symbol">=
=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_symbol">;=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=
=E7=AC=A6=E4=B8=B2</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol=
">=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_symbol"=
>;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_comment">// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=
=E7=9A=84=E7=BB=93=E6=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> int<span cl=
ass=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><span class=3D"=
sh_symbol">];</span>&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none;=
">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">=
/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =
=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh=
_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</spa=
n><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=
=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</spa=
n> char<span class=3D"sh_symbol">[]</span> <span class=3D"sh_function">gene=
rate</span><span class=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">=
{</span></li><li>char<span class=3D"sh_symbol">[]</span> chs <span class=3D=
"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> char<span clas=
s=3D"sh_symbol">[</span><span class=3D"sh_number">5</span><span class=3D"sh=
_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
char<span class=3D"sh_symbol">[]</span> letters <span class=3D"sh_symbol">=
=3D</span> <span class=3D"sh_cbracket">{</span> <span class=3D"sh_string">'=
A'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'B'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'C'</span=
><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'D'</span><sp=
an class=3D"sh_symbol">,</span> <span class=3D"sh_string">'E'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'F'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'G'</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_string">'H'</span><span class=3D"sh_s=
ymbol">,</span> <span class=3D"sh_string">'I'</span><span class=3D"sh_symbo=
l">,</span> <span class=3D"sh_string">'J'</span><span class=3D"sh_symbol">,=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'K'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'L'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'M'</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_string">'N'</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_string">'O'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'P'</span><span class=3D"sh_symb=
ol">,</span> <span class=3D"sh_string">'Q'</span><span class=3D"sh_symbol">=
,</span> <span class=3D"sh_string">'R'</span><span class=3D"sh_symbol">,</s=
pan> <span class=3D"sh_string">'S'</span><span class=3D"sh_symbol">,</span>=
 <span class=3D"sh_string">'T'</span><span class=3D"sh_symbol">,</span> <sp=
an class=3D"sh_string">'U'</span><span class=3D"sh_symbol">,</span> <span c=
lass=3D"sh_string">'V'</span><span class=3D"sh_symbol">,</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'W'</span><span class=3D"sh_sym=
bol">,</span> <span class=3D"sh_string">'X'</span><span class=3D"sh_symbol"=
>,</span> <span class=3D"sh_string">'Y'</span><span class=3D"sh_symbol">,</=
span> <span class=3D"sh_string">'Z'</span> <span class=3D"sh_cbracket">}</s=
pan><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh_symbol">[]</span> flags <span =
class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> boolea=
n<span class=3D"sh_symbol">[</span>letters<span class=3D"sh_symbol">.</span=
>length<span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i =
<span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><spa=
n class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> chs<=
span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> i=
<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;int index<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">do</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;index <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_symbol">=
(</span>int<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">(</=
span><span class=3D"sh_predef_var">Math</span><span class=3D"sh_symbol">.</=
span><span class=3D"sh_function">random</span><span class=3D"sh_symbol">()<=
/span> <span class=3D"sh_symbol">*</span> <span class=3D"sh_symbol">(</span=
>letters<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">)=
);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=3D"sh_keywo=
rd">while</span> <span class=3D"sh_symbol">(</span>flags<span class=3D"sh_s=
ymbol">[</span>index<span class=3D"sh_symbol">]);</span><span class=3D"sh_c=
omment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=
=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<span class=3D"sh_symbo=
l">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=
=3D</span> letters<span class=3D"sh_symbol">[</span>index<span class=3D"sh_=
symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;flags<span class=3D"sh_symbol">[</span>index<span cl=
ass=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">true</span><span class=3D"sh_symbol">;</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_keyword">return</span> chs<span class=3D"sh_symbol">;</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span st=
yle=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nb=
sp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=
=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=
=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=
=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=
=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=
=93=E6=9E=9C</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; =
* </span><span class=3D"sh_type">@param</span><span class=3D"sh_comment"> c=
hs</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *    =
        =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=
=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp=
;&nbsp; * </span><span class=3D"sh_type">@param</span><span class=3D"sh_com=
ment"> input</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=
=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&n=
bsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</span><span class=
=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=
=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=
=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=94=A8=E4=BA=8E=E5=AD=
=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=
=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=
=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=
=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=
=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=
=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=
=80=82</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
/</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> int<span class=3D"sh_symbol=
">[]</span> <span class=3D"sh_function">check</span><span class=3D"sh_symbo=
l">(</span>char<span class=3D"sh_symbol">[]</span> chs<span class=3D"sh_sym=
bol">,</span> char<span class=3D"sh_symbol">[]</span> input<span class=3D"s=
h_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span>=
 result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new=
</span> int<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</s=
pan><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;<span class=3D"sh_keyword">return</span> result<span class=3D"sh_symbol"=
>;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</sp=
an></li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=
=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">import java.uti=
l.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
    //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=
=B0=E6=8D=AE
char[] input=3Dnull;
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];=09
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
char[] chs =3D new char[5];
		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
				for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
	=09
		return result;
	}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01=
/index.html#" class=3D"snippet-revealed snippet-toggle sh_url">=E9=9A=90=E8=
=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_acid snippet-wr=
ap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.com.cn/tts8_=
source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" class=
=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pre></div></div>
      <a name=3D"case4">
      </a>
      <h2>4 =E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=
=E5=AE=9E=E7=8E=B0=E5=AD=97=E6=AF=8D=E6=A3=80=E6=B5=8B=E6=96=B9=E6=B3=95</h=
2>
      <h3>4.1 =E9=97=AE=E9=A2=98</h3>
      <p>=E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=
=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=
=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=
=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=
=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=
=9C=E3=80=82</p>
      <h3>4.2 =E6=96=B9=E6=A1=88</h3>
      <p>=E5=AE=9E=E7=8E=B0check=E6=96=B9=E6=B3=95=EF=BC=8C=E9=9C=80=E8=A6=
=81=E9=80=90=E4=B8=80=E5=8F=96=E5=87=BA=E7=8E=A9=E5=AE=B6=E5=BD=95=E5=85=A5=
=E7=9A=84=E6=AF=8F=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E5=B9=B6=E5=92=8C=E7=
=BB=93=E6=9E=9C=E5=AD=97=E7=AC=A6=E4=B8=B2=E4=B8=80=E4=B8=80=E6=AF=94=E8=BE=
=83=EF=BC=9A=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E6=9C=AC=E8=BA=AB=E4=BB=A5=
=E5=8F=8A=E5=AD=97=E7=AC=A6=E6=89=80=E5=9C=A8=E7=9A=84=E4=BD=8D=E7=BD=AE=EF=
=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=
=9C=E3=80=82=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E4=BD=BF=E7=94=A8=
=E5=B5=8C=E5=A5=97=E5=BE=AA=E7=8E=AF=E6=9D=A5=E5=AE=9E=E7=8E=B0=E3=80=82che=
ck=E6=96=B9=E6=B3=95=E7=9A=84=E6=B5=81=E7=A8=8B=E5=A6=82=E5=9B=BE-11=E6=89=
=80=E7=A4=BA=EF=BC=8C=E5=85=B6=E4=B8=AD=E7=BA=A2=E8=89=B2=E9=83=A8=E5=88=86=
=E8=A1=A8=E7=A4=BA=E5=A4=96=E5=B1=82=E5=BE=AA=E7=8E=AF=EF=BC=8C=E8=93=9D=E8=
=89=B2=E9=83=A8=E5=88=86=E8=A1=A8=E7=A4=BA=E5=86=85=E5=B1=82=E5=BE=AA=E7=8E=
=AF=E3=80=82</p>
      <div class=3D"image">
        <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image005.png">
        <p>=E5=9B=BE- 11</p>
      </div>
      <h3>4.3 =E6=AD=A5=E9=AA=A4</h3>
      <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E6=9E=84=E5=
=BB=BA=E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C=E7=9A=84=E6=95=
=B0=E7=BB=84</p>
      <p>=E5=9C=A8check() =E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E9=A6=96=E5=
=85=88=E5=AE=9A=E4=B9=89int =E7=B1=BB=E5=9E=8B=E7=9A=84=E6=95=B0=E7=BB=84=
=E7=B1=BB=E5=9E=8B=E5=8F=98=E9=87=8Fresult=EF=BC=8C=E7=94=A8=E4=BA=8E=E5=AD=
=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E6=95=B0=
=E7=BB=84 result =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=
=B8=AD=EF=BC=8Cresut[0] =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=
=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=
=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=
=8Cresult[1] =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=
=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=
=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE=
)=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</=
p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">public</span> <span class=3D"sh_keyword">static</span> int<span class=
=3D"sh_symbol">[]</span> <span class=3D"sh_function">check</span><span clas=
s=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]</span> chs<span cl=
ass=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">[]</span> input<sp=
an class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><l=
i class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<s=
pan class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</spa=
n> <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</sp=
an><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></l=
i><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;</li><li class=3D"bold_co=
de">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">return</span> result<span class=3D"sh_symbol">;</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li></ol></pre><pre cl=
ass=3D"snippet-textonly sh_sourceCode" style=3D"display:none;">	public stat=
ic int[] check(char[] chs, char[] input) {
#cold_bold		int[] result =3D new int[2];
#cold_bold=09
#cold_bold		return result;
	}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E6=AF=94=E8=
=BE=83</p>
      <p>=E4=BD=BF=E7=94=A8=E5=B5=8C=E5=A5=97=E5=BE=AA=E7=8E=AF=EF=BC=8C=E7=
=BB=9F=E8=AE=A1=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=
=8D=E4=B8=AA=E6=95=B0=EF=BC=8C=E5=92=8C=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=
=E6=AF=8D=E4=B8=AA=E6=95=B0(=E4=BD=8D=E7=BD=AE=E4=B8=8D=E5=AF=B9)=EF=BC=8C=
=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">public</span> <span class=3D"sh_keyword">static</span> int<span class=
=3D"sh_symbol">[]</span> <span class=3D"sh_function">check</span><span clas=
s=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]</span> chs<span cl=
ass=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">[]</span> input<sp=
an class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symb=
ol">[]</span> result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh=
_keyword">new</span> int<span class=3D"sh_symbol">[</span><span class=3D"sh=
_number">2</span><span class=3D"sh_symbol">];</span></li><li class=3D"bold_=
code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">for</span> <span class=3D"sh_symbol">(</span>int i <span class=3D"sh_=
symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_symb=
ol">;</span> i <span class=3D"sh_symbol">&lt;</span> input<span class=3D"sh=
_symbol">.</span>length<span class=3D"sh_symbol">;</span> i<span class=3D"s=
h_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"=
bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</=
span>int j <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0=
</span><span class=3D"sh_symbol">;</span> j <span class=3D"sh_symbol">&lt;<=
/span> chs<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol"=
>;</span> j<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket"=
>{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_keyword">if</span> <span class=3D"sh_symbol">(</span>input<span class=3D"=
sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_sy=
mbol">=3D=3D</span> chs<span class=3D"sh_symbol">[</span>j<span class=3D"sh=
_symbol">])</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bo=
ld_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"=
sh_symbol">[</span><span class=3D"sh_number">1</span><span class=3D"sh_symb=
ol">]++;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol=
">(</span>i <span class=3D"sh_symbol">=3D=3D</span> j<span class=3D"sh_symb=
ol">)</span> <span class=3D"sh_cbracket">{</span></li><li class=3D"bold_cod=
e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res=
ult<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0</span><spa=
n class=3D"sh_symbol">]++;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><l=
i class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</span></li><li c=
lass=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span=
></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li cla=
ss=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">return</span> result<span class=3D"sh_sy=
mbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">=
}</span></li></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=
=3D"display:none;">	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
#cold_bold		for (int i =3D 0; i &lt; input.length; i++) {
#cold_bold			for (int j =3D 0; j &lt; chs.length; j++) {
#cold_bold				if (input[i] =3D=3D chs[j]) {
#cold_bold					result[1]++;
#cold_bold					if (i =3D=3D j) {
#cold_bold						result[0]++;
#cold_bold					}
#cold_bold					break;
#cold_bold				}
#cold_bold			}
#cold_bold		}
		return result;
	}
</pre></div></div>
      <h3>4.4 =E5=AE=8C=E6=95=B4=E4=BB=A3=E7=A0=81</h3>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh=
_sourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" style=3D"display:=
 none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena=
.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.=
html#">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.taren=
a.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index=
.html#">pop-up</a></pre></div><pre class=3D"hide sh_javascript snippet-form=
atted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=
=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Scanner<span c=
lass=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp;</s=
pan></li><li><span class=3D"sh_keyword">public</span> <span class=3D"sh_key=
word">class</span> GuessingGame <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span cl=
ass=3D"sh_keyword">static</span> void <span class=3D"sh_function">main</spa=
n><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">String</=
span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=
=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"s=
h_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_sy=
mbol">;</span></li><li>    <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=
=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li>=
<li>char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh_symbol">=
=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_symbol">;=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=
=E7=AC=A6=E4=B8=B2</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol=
">=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_symbol"=
>;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_comment">// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=
=E7=9A=84=E7=BB=93=E6=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> int<span cl=
ass=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><span class=3D"=
sh_symbol">];</span>&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"display:none;=
">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">=
/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =
=E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh=
_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</spa=
n><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=
=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=3D"sh_comme=
nt">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</spa=
n> char<span class=3D"sh_symbol">[]</span> <span class=3D"sh_function">gene=
rate</span><span class=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">=
{</span></li><li>char<span class=3D"sh_symbol">[]</span> chs <span class=3D=
"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> char<span clas=
s=3D"sh_symbol">[</span><span class=3D"sh_number">5</span><span class=3D"sh=
_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
char<span class=3D"sh_symbol">[]</span> letters <span class=3D"sh_symbol">=
=3D</span> <span class=3D"sh_cbracket">{</span> <span class=3D"sh_string">'=
A'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'B'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'C'</span=
><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'D'</span><sp=
an class=3D"sh_symbol">,</span> <span class=3D"sh_string">'E'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'F'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'G'</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_string">'H'</span><span class=3D"sh_s=
ymbol">,</span> <span class=3D"sh_string">'I'</span><span class=3D"sh_symbo=
l">,</span> <span class=3D"sh_string">'J'</span><span class=3D"sh_symbol">,=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'K'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'L'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'M'</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_string">'N'</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_string">'O'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'P'</span><span class=3D"sh_symb=
ol">,</span> <span class=3D"sh_string">'Q'</span><span class=3D"sh_symbol">=
,</span> <span class=3D"sh_string">'R'</span><span class=3D"sh_symbol">,</s=
pan> <span class=3D"sh_string">'S'</span><span class=3D"sh_symbol">,</span>=
 <span class=3D"sh_string">'T'</span><span class=3D"sh_symbol">,</span> <sp=
an class=3D"sh_string">'U'</span><span class=3D"sh_symbol">,</span> <span c=
lass=3D"sh_string">'V'</span><span class=3D"sh_symbol">,</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'W'</span><span class=3D"sh_sym=
bol">,</span> <span class=3D"sh_string">'X'</span><span class=3D"sh_symbol"=
>,</span> <span class=3D"sh_string">'Y'</span><span class=3D"sh_symbol">,</=
span> <span class=3D"sh_string">'Z'</span> <span class=3D"sh_cbracket">}</s=
pan><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh_symbol">[]</span> flags <span =
class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> boolea=
n<span class=3D"sh_symbol">[</span>letters<span class=3D"sh_symbol">.</span=
>length<span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i =
<span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><spa=
n class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> chs<=
span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> i=
<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;int index<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">do</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;index <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_symbol">=
(</span>int<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">(</=
span><span class=3D"sh_predef_var">Math</span><span class=3D"sh_symbol">.</=
span><span class=3D"sh_function">random</span><span class=3D"sh_symbol">()<=
/span> <span class=3D"sh_symbol">*</span> <span class=3D"sh_symbol">(</span=
>letters<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">)=
);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=3D"sh_keywo=
rd">while</span> <span class=3D"sh_symbol">(</span>flags<span class=3D"sh_s=
ymbol">[</span>index<span class=3D"sh_symbol">]);</span><span class=3D"sh_c=
omment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=
=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<span class=3D"sh_symbo=
l">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=
=3D</span> letters<span class=3D"sh_symbol">[</span>index<span class=3D"sh_=
symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;flags<span class=3D"sh_symbol">[</span>index<span cl=
ass=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_keyword">true</span><span class=3D"sh_symbol">;</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_keyword">return</span> chs<span class=3D"sh_symbol">;</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span st=
yle=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nb=
sp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=
=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=
=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=
=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=
=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=
=93=E6=9E=9C</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; =
* </span><span class=3D"sh_type">@param</span><span class=3D"sh_comment"> c=
hs</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *    =
        =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=
=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp=
;&nbsp; * </span><span class=3D"sh_type">@param</span><span class=3D"sh_com=
ment"> input</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=
=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&n=
bsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@return</span><span class=
=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=
=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=
=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=94=A8=E4=BA=8E=E5=AD=
=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=
=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=
=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=
=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=
=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=
=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=
=80=82</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
/</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public<=
/span> <span class=3D"sh_keyword">static</span> int<span class=3D"sh_symbol=
">[]</span> <span class=3D"sh_function">check</span><span class=3D"sh_symbo=
l">(</span>char<span class=3D"sh_symbol">[]</span> chs<span class=3D"sh_sym=
bol">,</span> char<span class=3D"sh_symbol">[]</span> input<span class=3D"s=
h_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span>=
 result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new=
</span> int<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</s=
pan><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"s=
h_symbol">(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D=
"sh_number">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_=
symbol">&lt;</span> input<span class=3D"sh_symbol">.</span>length<span clas=
s=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span> <span class=
=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span =
class=3D"sh_symbol">(</span>int j <span class=3D"sh_symbol">=3D</span> <spa=
n class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> j <span cl=
ass=3D"sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</span>length<s=
pan class=3D"sh_symbol">;</span> j<span class=3D"sh_symbol">++)</span> <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span>input<span clas=
s=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"=
sh_symbol">=3D=3D</span> chs<span class=3D"sh_symbol">[</span>j<span class=
=3D"sh_symbol">])</span> <span class=3D"sh_cbracket">{</span><span class=3D=
"sh_comment">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E6=
=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;result<span class=3D"sh_symbol">[</span><span class=3D"sh_number">1</span>=
<span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symb=
ol">(</span>i <span class=3D"sh_symbol">=3D=3D</span> j<span class=3D"sh_sy=
mbol">)</span> <span class=3D"sh_cbracket">{</span><span class=3D"sh_commen=
t">// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=
=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</span><span class=3D"sh_numb=
er">0</span><span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break=
</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<spa=
n class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span><=
/li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_c=
bracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_keyword">return</span> result<span class=3D"sh_symbol">;</=
span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span><=
/li><li><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"s=
nippet-textonly sh_sourceCode" style=3D"display:none;">import java.util.Sca=
nner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
    //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=
=B0=E6=8D=AE
char[] input=3Dnull;
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];=09
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
char[] chs =3D new char[5];
		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
				for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01=
/index.html#" class=3D"snippet-revealed snippet-toggle sh_url">=E9=9A=90=E8=
=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_acid snippet-wr=
ap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.com.cn/tts8_=
source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" class=
=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pre></div></div>
      <a name=3D"case5">
      </a>
      <h2>5 =E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E2=80=94=E2=80=94=
=E5=AE=9E=E7=8E=B0=E4=B8=BB=E6=96=B9=E6=B3=95</h2>
      <h3>5.1 =E9=97=AE=E9=A2=98</h3>
      <p>=E5=AE=9E=E7=8E=B0=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=E7=
=9A=84=E6=95=B4=E4=BD=93=E6=B5=81=E7=A8=8B=E3=80=82</p>
      <h3>5.2 =E6=96=B9=E6=A1=88</h3>
      <p>=E4=B8=BA=E5=AE=9E=E7=8E=B0=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=
=88=8F=E7=9A=84=E6=95=B4=E4=BD=93=E8=BF=87=E7=A8=8B=EF=BC=8C=E9=A6=96=E5=85=
=88=E9=9C=80=E8=A6=81=E8=B0=83=E7=94=A8generate() =E6=96=B9=E6=B3=95=EF=BC=
=8C=E4=BB=A5=E7=94=9F=E6=88=90=E4=BA=94=E4=B8=AA=E5=AD=97=E6=AF=8D=EF=BC=9B=
</p>
      <p>=E5=85=B6=E6=AC=A1=EF=BC=8C=E9=9C=80=E8=A6=81=E4=BD=BF=E7=94=A8 wh=
ile(true) =E5=BE=AA=E7=8E=AF=E5=85=81=E8=AE=B8=E7=8E=A9=E5=AE=B6=E8=BF=9B=
=E8=A1=8C=E5=A4=9A=E6=AC=A1=E7=8C=9C=E6=B5=8B=EF=BC=9B</p>
      <p>=E5=9C=A8=E5=BE=AA=E7=8E=AF=E4=B8=AD=EF=BC=8C=E6=8E=A5=E6=94=B6=E7=
=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=EF=BC=8C=E7=84=
=B6=E5=90=8E=E8=B0=83=E7=94=A8check() =E6=96=B9=E6=B3=95=EF=BC=8C=E6=A3=80=
=E6=9F=A5=E7=8C=9C=E6=B5=8B=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E5=A6=82=E6=
=9E=9C=E7=8C=9C=E6=B5=8B=E6=AD=A3=E7=A1=AE=EF=BC=8C=E5=88=99=E8=BE=93=E5=87=
=BA=E6=8F=90=E7=A4=BA=E4=BF=A1=E6=81=AF=E5=92=8C=E5=88=86=E6=95=B0=EF=BC=8C=
=E6=B8=B8=E6=88=8F=E7=BB=93=E6=9D=9F=EF=BC=9B=E5=A6=82=E6=9E=9C=E7=8C=9C=E6=
=B5=8B=E9=94=99=E8=AF=AF=EF=BC=8C=E5=88=99=E8=BE=93=E5=87=BA=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=88=A4=E6=96=AD=E7=BB=93=E6=9E=9C=E5=B9=B6=E6=8F=90=E7=A4=BA=
=E7=8E=A9=E5=AE=B6=E6=B8=B8=E6=88=8F=E7=BB=A7=E7=BB=AD=E3=80=82main=E7=A8=
=8B=E5=BA=8F=E6=B5=81=E7=A8=8B=E5=A6=82=E5=9B=BE-12=E6=89=80=E7=A4=BA=E3=80=
=82</p>
      <div class=3D"image">
        <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_=
N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image006.png">
        <p>=E5=9B=BE- 12</p>
      </div>
      <h3>5.3 =E6=AD=A5=E9=AA=A4</h3>
      <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E6=9E=84=E5=
=BB=BA=E5=AD=98=E5=82=A8=E6=89=80=E6=9C=89=E5=AD=97=E6=AF=8D=E7=9A=84=E6=95=
=B0=E7=BB=84</p>
      <p>=E5=9C=A8main=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E5=85=88=E8=BE=
=93=E5=87=BA=E6=8F=90=E7=A4=BA=E4=BF=A1=E6=81=AF=E8=A1=A8=E7=A4=BA=E6=B8=B8=
=E6=88=8F=E5=BC=80=E5=A7=8B=EF=BC=8C=E7=84=B6=E5=90=8E=E8=B0=83=E7=94=A8gen=
erate() =E6=96=B9=E6=B3=95=E7=94=9F=E6=88=90=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E4=BA=94=E4=B8=AA=E5=AD=97=E6=AF=8D=EF=BC=8C=E5=B9=B6=E6=8F=90=E7=A4=
=BA=E7=8E=A9=E5=AE=B6=E5=BC=80=E5=A7=8B=E7=8C=9C=E6=B5=8B=EF=BC=8C=E4=BB=A3=
=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>import java<span class=3D"sh_symbol">.</span>ut=
il<span class=3D"sh_symbol">.</span>Scanner<span class=3D"sh_symbol">;</spa=
n></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">class</span> Guess=
ingGame <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">stati=
c</span> void <span class=3D"sh_function">main</span><span class=3D"sh_symb=
ol">(</span><span class=3D"sh_predef_func">String</span><span class=3D"sh_s=
ymbol">[]</span> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_c=
bracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <sp=
an class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span></li><li> =
    <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=3D"s=
h_symbol">[]</span> input<span class=3D"sh_symbol">=3D</span><span class=3D=
"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E7=
=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=
=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span=
 class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span> =
<span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span>=
<span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li><=
li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scan=
ner scanner <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword"=
>new</span> <span class=3D"sh_function">Scanner</span><span class=3D"sh_sym=
bol">(</span>System<span class=3D"sh_symbol">.</span><span class=3D"sh_keyw=
ord">in</span><span class=3D"sh_symbol">);</span></li><li class=3D"bold_cod=
e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_=
symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_func=
tion">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_str=
ing">"GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=E7=8C=9C=E5=AD=
=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81"</span><span class=3D"sh_symbol">);=
</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=
=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span></li><li class=3D"bold_code">&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">=
[]</span> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_functi=
on">generate</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;</li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;scanner<span class=3D"sh_symbol">.</span><span class=3D"sh_f=
unction">close</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nb=
sp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"=
display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbs=
p;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></li><li><span=
 class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span clas=
s=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">=
@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=
=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword"=
>static</span> char<span class=3D"sh_symbol">[]</span> <span class=3D"sh_fu=
nction">generate</span><span class=3D"sh_symbol">()</span> <span class=3D"s=
h_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=
=3D"sh_symbol">[]</span> letters <span class=3D"sh_symbol">=3D</span> <span=
 class=3D"sh_cbracket">{</span> <span class=3D"sh_string">'A'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'B'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'C'</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_string">'D'</span><span class=3D"sh_s=
ymbol">,</span> <span class=3D"sh_string">'E'</span><span class=3D"sh_symbo=
l">,</span> <span class=3D"sh_string">'F'</span><span class=3D"sh_symbol">,=
</span> <span class=3D"sh_string">'G'</span><span class=3D"sh_symbol">,</sp=
an> <span class=3D"sh_string">'H'</span><span class=3D"sh_symbol">,</span> =
<span class=3D"sh_string">'I'</span><span class=3D"sh_symbol">,</span> <spa=
n class=3D"sh_string">'J'</span><span class=3D"sh_symbol">,</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'K'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'L'</span><span class=3D"sh_symb=
ol">,</span> <span class=3D"sh_string">'M'</span><span class=3D"sh_symbol">=
,</span> <span class=3D"sh_string">'N'</span><span class=3D"sh_symbol">,</s=
pan> <span class=3D"sh_string">'O'</span><span class=3D"sh_symbol">,</span>=
 <span class=3D"sh_string">'P'</span><span class=3D"sh_symbol">,</span> <sp=
an class=3D"sh_string">'Q'</span><span class=3D"sh_symbol">,</span> <span c=
lass=3D"sh_string">'R'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'S'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'T'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'U'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'V'</span><span class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_string">'W'</span><span class=3D"sh_symbol">,</span> <s=
pan class=3D"sh_string">'X'</span><span class=3D"sh_symbol">,</span> <span =
class=3D"sh_string">'Y'</span><span class=3D"sh_symbol">,</span> <span clas=
s=3D"sh_string">'Z'</span> <span class=3D"sh_cbracket">}</span><span class=
=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;boolean<span class=3D"sh_symbol">[]</span> flags <span class=3D"sh_sym=
bol">=3D</span> <span class=3D"sh_keyword">new</span> boolean<span class=3D=
"sh_symbol">[</span>letters<span class=3D"sh_symbol">.</span>length<span cl=
ass=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symb=
ol">=3D</span> <span class=3D"sh_keyword">new</span> char<span class=3D"sh_=
symbol">[</span><span class=3D"sh_number">5</span><span class=3D"sh_symbol"=
>];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i <span=
 class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span cla=
ss=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> chs<span =
class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> i<span=
 class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=
nt index<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">=
do</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;index <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_symbol">(</sp=
an>int<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">(</span>=
<span class=3D"sh_predef_var">Math</span><span class=3D"sh_symbol">.</span>=
<span class=3D"sh_function">random</span><span class=3D"sh_symbol">()</span=
> <span class=3D"sh_symbol">*</span> <span class=3D"sh_symbol">(</span>lett=
ers<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">));</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=3D"sh_keyword">w=
hile</span> <span class=3D"sh_symbol">(</span>flags<span class=3D"sh_symbol=
">[</span>index<span class=3D"sh_symbol">]);</span><span class=3D"sh_commen=
t">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E6=98=
=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<span class=3D"sh_symbol">[</=
span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</spa=
n> letters<span class=3D"sh_symbol">[</span>index<span class=3D"sh_symbol">=
];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;flags<span class=3D"sh_symbol">[</span>index<span class=3D"s=
h_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_k=
eyword">true</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">return</span> chs<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"d=
isplay:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp=
;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=
=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=
=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=
=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=
=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=
=9E=9C</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
 </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </sp=
an><span class=3D"sh_type">@param</span><span class=3D"sh_comment"> chs</sp=
an></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *          =
  =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=
=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp=
; * </span><span class=3D"sh_type">@param</span><span class=3D"sh_comment">=
 input</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=
=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&n=
bsp;&nbsp; * </span><span class=3D"sh_type">@return</span><span class=3D"sh=
_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><li><span class=3D"sh_c=
omment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=
=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=
=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=
=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=
=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=
=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=
=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82</=
span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span>=
</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">static</span> int<span class=3D"sh_symbol">[]</sp=
an> <span class=3D"sh_function">check</span><span class=3D"sh_symbol">(</sp=
an>char<span class=3D"sh_symbol">[]</span> chs<span class=3D"sh_symbol">,</=
span> char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh_symbol=
">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result =
<span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> =
int<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><spa=
n class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_symbol=
">(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_numb=
er">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">=
&lt;</span> input<span class=3D"sh_symbol">.</span>length<span class=3D"sh_=
symbol">;</span> i<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"=
sh_symbol">(</span>int j <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> j <span class=3D"=
sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</span>length<span cla=
ss=3D"sh_symbol">;</span> j<span class=3D"sh_symbol">++)</span> <span class=
=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_ke=
yword">if</span> <span class=3D"sh_symbol">(</span>input<span class=3D"sh_s=
ymbol">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol=
">=3D=3D</span> chs<span class=3D"sh_symbol">[</span>j<span class=3D"sh_sym=
bol">])</span> <span class=3D"sh_cbracket">{</span><span class=3D"sh_commen=
t">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=
=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span=
 class=3D"sh_symbol">[</span><span class=3D"sh_number">1</span><span class=
=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span=
>i <span class=3D"sh_symbol">=3D=3D</span> j<span class=3D"sh_symbol">)</sp=
an> <span class=3D"sh_cbracket">{</span><span class=3D"sh_comment">// =E5=
=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;result<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0</sp=
an><span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break</span><s=
pan class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket=
">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_keyword">return</span> result<span class=3D"sh_symbol">;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li=
><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-=
textonly sh_sourceCode" style=3D"display:none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
     //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=
=95=B0=E6=8D=AE
char[] input=3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
#cold_bold		Scanner scanner =3D new Scanner(System.in);
#cold_bold		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=
=E8=AF=95=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");
#cold_bold		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=
=A6=E4=B8=B2
#cold_bold		char[] chs =3D generate();
=09
#cold_bold		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
	=09
		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
		char[] chs =3D new char[5];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E6=9E=84=E5=
=BB=BA=E5=BE=AA=E7=8E=AF</p>
      <p>=E4=BD=BF=E7=94=A8while=EF=BC=88true=EF=BC=89=E5=BE=AA=E7=8E=AF=EF=
=BC=8C=E5=B9=B6=E5=9C=A8=E5=BE=AA=E7=8E=AF=E4=B8=AD=E8=B0=83=E7=94=A8Scanne=
r=E7=B1=BB=E7=9A=84next() =E6=96=B9=E6=B3=95=E6=8E=A5=E6=94=B6=E7=8E=A9=E5=
=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2=E3=80=82=E4=B8=
=BA=E6=96=B9=E4=BE=BF=E5=AD=97=E7=AC=A6=E4=B8=B2=E7=9A=84=E6=AF=94=E8=BE=83=
=EF=BC=8C=E5=B0=86=E7=8E=A9=E5=AE=B6=E5=BD=95=E5=85=A5=E7=9A=84=E5=AD=97=E7=
=AC=A6=E4=B8=B2=E5=9D=87=E8=BD=AC=E6=8D=A2=E4=B8=BA=E5=A4=A7=E5=86=99=E5=AD=
=97=E6=AF=8D=EF=BC=8C=E7=84=B6=E5=90=8E=E5=85=88=E5=88=A4=E6=96=AD=E7=8E=A9=
=E5=AE=B6=E5=BD=95=E5=85=A5=E7=9A=84=E6=98=AF=E5=90=A6=E4=B8=BA=E2=80=9CEXI=
T=E2=80=9D=EF=BC=8C=E5=A6=82=E6=9E=9C=E6=98=AF=EF=BC=8C=E5=88=99=E5=BE=AA=
=E7=8E=AF=E4=B8=AD=E6=AD=A2=EF=BC=8C=E6=B8=B8=E6=88=8F=E7=BB=93=E6=9D=9F=E3=
=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>import java<span class=3D"sh_symbol">.</span>ut=
il<span class=3D"sh_symbol">.</span>Scanner<span class=3D"sh_symbol">;</spa=
n></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">class</span> Guess=
ingGame <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">stati=
c</span> void <span class=3D"sh_function">main</span><span class=3D"sh_symb=
ol">(</span><span class=3D"sh_predef_func">String</span><span class=3D"sh_s=
ymbol">[]</span> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_c=
bracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <sp=
an class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span></li><li> =
    <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=3D"s=
h_symbol">[]</span> input<span class=3D"sh_symbol">=3D</span><span class=3D=
"sh_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E7=
=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=
=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span=
 class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span> =
<span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span>=
<span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li><=
li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner scanner <span cl=
ass=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> <span cl=
ass=3D"sh_function">Scanner</span><span class=3D"sh_symbol">(</span>System<=
span class=3D"sh_symbol">.</span><span class=3D"sh_keyword">in</span><span =
class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_sym=
bol">.</span><span class=3D"sh_function">println</span><span class=3D"sh_sy=
mbol">(</span><span class=3D"sh_string">"GuessingGame&gt;=E6=AC=A2=E8=BF=8E=
=E5=B0=9D=E8=AF=95=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81"</=
span><span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=
=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span></li><li>&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</s=
pan> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_function">g=
enerate</span><span class=3D"sh_symbol">();</span></li><li class=3D"bold_co=
de">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh=
_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_fun=
ction">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_st=
ring">"GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=EF=BC=8C=E8=AF=
=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=E4=B8=AA=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=94=E2=80=94=E9=
=80=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span></li><li=
 class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_keyword">while</span> <span class=3D"sh_symbol">(</span><span c=
lass=3D"sh_keyword">true</span><span class=3D"sh_symbol">)</span> <span cla=
ss=3D"sh_cbracket">{</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_pred=
ef_func">String</span> inputStr <span class=3D"sh_symbol">=3D</span> scanne=
r<span class=3D"sh_symbol">.</span><span class=3D"sh_function">next</span><=
span class=3D"sh_symbol">().</span><span class=3D"sh_function">trim</span><=
span class=3D"sh_symbol">().</span><span class=3D"sh_function">toUpperCase<=
/span><span class=3D"sh_symbol">();</span></li><li class=3D"bold_code">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span c=
lass=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span><span class=
=3D"sh_string">"EXIT"</span><span class=3D"sh_symbol">.</span><span class=
=3D"sh_function">equals</span><span class=3D"sh_symbol">(</span>inputStr<sp=
an class=3D"sh_symbol">))</span> <span class=3D"sh_cbracket">{</span></li><=
li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol"=
>.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function">p=
rintln</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"G=
uessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=84=E5=B0=9D=E8=AF=95=EF=BC=
=8C=E5=86=8D=E8=A7=81=EF=BC=81"</span><span class=3D"sh_symbol">);</span></=
li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">=
break</span><span class=3D"sh_symbol">;</span></li><li class=3D"bold_code">=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_cbracket">}</span></li><li class=3D"bold_code">&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanner<span class=3D"=
sh_symbol">.</span><span class=3D"sh_function">close</span><span class=3D"s=
h_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span=
 class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=
=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=
=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&n=
bsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&=
nbsp; * </span><span class=3D"sh_type">@return</span><span class=3D"sh_comm=
ent"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=
=B0=E7=BB=84</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">p=
ublic</span> <span class=3D"sh_keyword">static</span> char<span class=3D"sh=
_symbol">[]</span> <span class=3D"sh_function">generate</span><span class=
=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> letters <s=
pan class=3D"sh_symbol">=3D</span> <span class=3D"sh_cbracket">{</span> <sp=
an class=3D"sh_string">'A'</span><span class=3D"sh_symbol">,</span> <span c=
lass=3D"sh_string">'B'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'C'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'D'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'E'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'F'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'=
G'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'H'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'I'</span=
><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'J'</span><sp=
an class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_string">'K'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_=
string">'L'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_stri=
ng">'M'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'N'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'O'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'P'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Q'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'S'</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_string">'T'</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_string">'U'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'V'</span><span class=3D"sh_symb=
ol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'W'</sp=
an><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'X'</span><=
span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Y'</span><span=
 class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Z'</span> <span cl=
ass=3D"sh_cbracket">}</span><span class=3D"sh_symbol">;</span></li><li>&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh_symbol=
">[]</span> flags <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_ke=
yword">new</span> boolean<span class=3D"sh_symbol">[</span>letters<span cla=
ss=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">];</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbo=
l">[]</span> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_key=
word">new</span> char<span class=3D"sh_symbol">[</span><span class=3D"sh_nu=
mber">5</span><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span =
class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</span> <spa=
n class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> i <span cl=
ass=3D"sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</span>length<s=
pan class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span> <spa=
n class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int index<span class=3D"sh_symbol">;<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"sh_keyword">do</span> <span class=3D"sh_cbracket=
">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index <span class=3D"sh_symbol">=3D=
</span> <span class=3D"sh_symbol">(</span>int<span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_symbol">(</span><span class=3D"sh_predef_var">Math</=
span><span class=3D"sh_symbol">.</span><span class=3D"sh_function">random</=
span><span class=3D"sh_symbol">()</span> <span class=3D"sh_symbol">*</span>=
 <span class=3D"sh_symbol">(</span>letters<span class=3D"sh_symbol">.</span=
>length<span class=3D"sh_symbol">));</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket=
">}</span> <span class=3D"sh_keyword">while</span> <span class=3D"sh_symbol=
">(</span>flags<span class=3D"sh_symbol">[</span>index<span class=3D"sh_sym=
bol">]);</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=
=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;chs<span class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol">]</s=
pan> <span class=3D"sh_symbol">=3D</span> letters<span class=3D"sh_symbol">=
[</span>index<span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags<span class=3D"s=
h_symbol">[</span>index<span class=3D"sh_symbol">]</span> <span class=3D"sh=
_symbol">=3D</span> <span class=3D"sh_keyword">true</span><span class=3D"sh=
_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> chs<span class=3D=
"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li><span=
 class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=
=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=
=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=
=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=
=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=
=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_c=
omment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@param</s=
pan><span class=3D"sh_comment"> chs</span></li><li><span class=3D"sh_commen=
t">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=
=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@=
param</span><span class=3D"sh_comment"> input</span></li><li><span class=3D=
"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=8E=A9=E5=AE=B6=E8=BE=
=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><s=
pan class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"s=
h_type">@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E6=AF=
=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BC=
int=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=
=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=
=AE</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *   =
      =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=
=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=
=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=
=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=
=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82</span></li><li><span class=3D"sh_comm=
ent">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">static</sp=
an> int<span class=3D"sh_symbol">[]</span> <span class=3D"sh_function">chec=
k</span><span class=3D"sh_symbol">(</span>char<span class=3D"sh_symbol">[]<=
/span> chs<span class=3D"sh_symbol">,</span> char<span class=3D"sh_symbol">=
[]</span> input<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracke=
t">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<spa=
n class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span>=
 <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span=
><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">for</span> <span class=3D"sh_symbol">(</span>int i <span class=3D"sh_sy=
mbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_symbol=
">;</span> i <span class=3D"sh_symbol">&lt;</span> input<span class=3D"sh_s=
ymbol">.</span>length<span class=3D"sh_symbol">;</span> i<span class=3D"sh_=
symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D=
"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int j <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"=
sh_symbol">;</span> j <span class=3D"sh_symbol">&lt;</span> chs<span class=
=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> j<span clas=
s=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_sy=
mbol">(</span>input<span class=3D"sh_symbol">[</span>i<span class=3D"sh_sym=
bol">]</span> <span class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_=
symbol">[</span>j<span class=3D"sh_symbol">])</span> <span class=3D"sh_cbra=
cket">{</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=
=AC=A6=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</span><span c=
lass=3D"sh_number">1</span><span class=3D"sh_symbol">]++;</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</s=
pan> <span class=3D"sh_symbol">(</span>i <span class=3D"sh_symbol">=3D=3D</=
span> j<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</sp=
an><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=
=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</=
span><span class=3D"sh_number">0</span><span class=3D"sh_symbol">]++;</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cb=
racket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> result<s=
pan class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li=
></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:=
none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
     //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=
=95=B0=E6=8D=AE
char[] input=3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
		Scanner scanner =3D new Scanner(System.in);
		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=
=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3D generate();
#cold_bold		System.out.println("GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=
=E5=A7=8B=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=
=9A=845=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=
=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
#cold_bold		while (true) {
#cold_bold			String inputStr =3D scanner.next().trim().toUpperCase();
#cold_bold			if ("EXIT".equals(inputStr)) {
#cold_bold				System.out.println("GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=
=A0=E7=9A=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81");
#cold_bold				break;
#cold_bold			}
#cold_bold		}
		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
	=09
		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
		char[] chs =3D new char[5];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre></div></div>
      <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=89=EF=BC=9A=E6=AF=94=E8=
=BE=83</p>
      <p>=E5=A6=82=E6=9E=9C=E7=8E=A9=E5=AE=B6=E5=BD=95=E5=85=A5=E7=9A=84=E4=
=B8=8D=E6=98=AF=E2=80=9CEXIT=E2=80=9D=EF=BC=8C=E5=88=99=E8=B0=83=E7=94=A8ch=
eck() =E6=96=B9=E6=B3=95=E4=B8=8E=E7=AD=94=E6=A1=88=E8=BF=9B=E8=A1=8C=E6=AF=
=94=E8=BE=83=EF=BC=8C=E5=B9=B6=E5=BE=97=E5=88=B0=E5=AD=98=E5=82=A8=E6=AF=94=
=E8=BE=83=E7=BB=93=E6=9E=9C=E7=9A=84=E6=95=B0=E7=BB=84 result =E3=80=82</p>
      <p>=E6=AF=94=E8=BE=83=E5=AE=8C=E6=AF=95=E5=90=8E=EF=BC=8C=E6=A0=B9=E6=
=8D=AE=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C=E8=BE=93=E5=87=BA=E6=8F=90=E7=A4=
=BA=E4=BF=A1=E6=81=AF=E5=88=B0=E7=95=8C=E9=9D=A2=EF=BC=8C=E5=B9=B6=E8=AE=A1=
=E7=AE=97=E5=88=86=E6=95=B0=E3=80=82=E5=A6=82=E6=9E=9C5=E4=B8=AA=E5=AD=97=
=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE=EF=BC=8C=E5=
=88=99=E8=A1=A8=E7=A4=BA=E6=B8=B8=E6=88=8F=E7=BB=93=E6=9D=9F=EF=BC=8C=E8=AE=
=A1=E7=AE=97=E5=B9=B6=E8=BE=93=E5=87=BA=E7=8E=A9=E5=AE=B6=E7=9A=84=E5=BE=97=
=E5=88=86=EF=BC=9B=E5=90=A6=E5=88=99=EF=BC=8C=E5=B0=86=E7=8C=9C=E6=B5=8B=E7=
=9A=84=E6=AC=A1=E6=95=B0=E7=B4=AF=E5=8A=A01 =EF=BC=8C=E5=B9=B6=E6=8F=90=E7=
=A4=BA=E7=8E=A9=E5=AE=B6=E6=89=80=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E7=AC=
=A6=E4=B8=AA=E6=95=B0=E4=BB=A5=E5=8F=8A=E4=BD=8D=E7=BD=AE=E4=B8=AA=E6=95=B0=
=EF=BC=8C=E6=B8=B8=E6=88=8F=E7=BB=A7=E7=BB=AD=E3=80=82=E4=BB=A3=E7=A0=81=E5=
=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"dis=
play:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" =
href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAM=
ENTAL/DAY06/CASE/01/index.html#" style=3D"display: none;">copy</a><a class=
=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">text</a><a class=
=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/tt=
sPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#">pop-up</a></pre=
></div><pre class=3D"code sh_javascript snippet-formatted sh_sourceCode"><o=
l class=3D"snippet-num"><li>import java<span class=3D"sh_symbol">.</span>ut=
il<span class=3D"sh_symbol">.</span>Scanner<span class=3D"sh_symbol">;</spa=
n></li><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=
=3D"sh_keyword">public</span> <span class=3D"sh_keyword">class</span> Guess=
ingGame <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword">stati=
c</span> void <span class=3D"sh_function">main</span><span class=3D"sh_symb=
ol">(</span><span class=3D"sh_predef_func">String</span><span class=3D"sh_s=
ymbol">[]</span> args<span class=3D"sh_symbol">)</span> <span class=3D"sh_c=
bracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"sh_symbol">=3D</span> <sp=
an class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span></li><li><=
span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=
=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li><li>char<span class=3D"sh_s=
ymbol">[]</span> input<span class=3D"sh_symbol">=3D</span><span class=3D"sh=
_keyword">null</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E7=94=
=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=93=E6=9E=9C=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span cl=
ass=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol">=3D</span> <sp=
an class=3D"sh_keyword">new</span> int<span class=3D"sh_symbol">[</span><sp=
an class=3D"sh_number">2</span><span class=3D"sh_symbol">];</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner scanner <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> <span class=
=3D"sh_function">Scanner</span><span class=3D"sh_symbol">(</span>System<spa=
n class=3D"sh_symbol">.</span><span class=3D"sh_keyword">in</span><span cla=
ss=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol=
">.</span><span class=3D"sh_function">println</span><span class=3D"sh_symbo=
l">(</span><span class=3D"sh_string">"GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=
=B0=9D=E8=AF=95=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81"</spa=
n><span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=8C=
=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=B2</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span=
> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_function">gene=
rate</span><span class=3D"sh_symbol">();</span></li><li class=3D"bold_code"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_sy=
mbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_functi=
on">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_strin=
g">"GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=EF=BC=8C=E8=AF=B7=
=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=E4=B8=AA=E5=AD=97=
=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=94=E2=80=94=E9=80=
=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">wh=
ile</span> <span class=3D"sh_symbol">(</span><span class=3D"sh_keyword">tru=
e</span><span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">{</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_predef_func">String</span> inputStr <span class=
=3D"sh_symbol">=3D</span> scanner<span class=3D"sh_symbol">.</span><span cl=
ass=3D"sh_function">next</span><span class=3D"sh_symbol">().</span><span cl=
ass=3D"sh_function">trim</span><span class=3D"sh_symbol">().</span><span cl=
ass=3D"sh_function">toUpperCase</span><span class=3D"sh_symbol">();</span><=
/li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span=
><span class=3D"sh_string">"EXIT"</span><span class=3D"sh_symbol">.</span><=
span class=3D"sh_function">equals</span><span class=3D"sh_symbol">(</span>i=
nputStr<span class=3D"sh_symbol">))</span> <span class=3D"sh_cbracket">{</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>o=
ut<span class=3D"sh_symbol">.</span><span class=3D"sh_function">println</sp=
an><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"GuessingGam=
e&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=
=8D=E8=A7=81=EF=BC=81"</span><span class=3D"sh_symbol">);</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break</span><span class=3D"sh=
_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li class=
=3D"bold_code">input <span class=3D"sh_symbol">=3D</span> inputStr<span cla=
ss=3D"sh_symbol">.</span><span class=3D"sh_function">toCharArray</span><spa=
n class=3D"sh_symbol">();</span></li><li class=3D"bold_code">&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result <span clas=
s=3D"sh_symbol">=3D</span> <span class=3D"sh_function">check</span><span cl=
ass=3D"sh_symbol">(</span>chs<span class=3D"sh_symbol">,</span> input<span =
class=3D"sh_symbol">);</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_ke=
yword">if</span> <span class=3D"sh_symbol">(</span>result<span class=3D"sh_=
symbol">[</span><span class=3D"sh_number">0</span><span class=3D"sh_symbol"=
>]</span> <span class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_symb=
ol">.</span>length<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbra=
cket">{</span><span class=3D"sh_comment">// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=
=AF=B9=E7=9A=84=E6=83=85=E5=86=B5</span></li><li class=3D"bold_code">&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;int score <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_number">100</span> <span class=3D"sh_symbol">*</span> chs<span class=
=3D"sh_symbol">.</span>length <span class=3D"sh_symbol">-</span> count <spa=
n class=3D"sh_symbol">*</span> <span class=3D"sh_number">10</span><span cla=
ss=3D"sh_symbol">;</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
System<span class=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</spa=
n><span class=3D"sh_function">println</span><span class=3D"sh_symbol">(</sp=
an><span class=3D"sh_string">"GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=
=E7=8C=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=
=98=AF=EF=BC=9A"</span> <span class=3D"sh_symbol">+</span> score<span class=
=3D"sh_symbol">);</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</span></l=
i><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=3D"=
sh_keyword">else</span> <span class=3D"sh_cbracket">{</span></li><li class=
=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count<span class=3D"sh_symbol">++;</spa=
n></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh=
_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_fun=
ction">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_st=
ring">"GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9"</span> <span class=3D"s=
h_symbol">+</span> result<span class=3D"sh_symbol">[</span><span class=3D"s=
h_number">1</span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symb=
ol">+</span> <span class=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=
=8C=E5=85=B6=E4=B8=AD"</span></li><li class=3D"bold_code">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_symbo=
l">+</span> result<span class=3D"sh_symbol">[</span><span class=3D"sh_numbe=
r">0</span><span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">+</=
span> <span class=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=
=8D=E7=BD=AE=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=
=3D"</span> <span class=3D"sh_symbol">+</span> count <span class=3D"sh_symb=
ol">+</span> <span class=3D"sh_string">"=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=
=80=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span></li><li=
 class=3D"bold_code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;scanner<span class=3D"sh_symbol">.</span><span class=3D"sh_func=
tion">close</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"dis=
play:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&=
nbsp; * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=
=B5=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97</span></li><li><span cl=
ass=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@=
return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=
=BA=E5=AD=97=E7=AC=A6=E7=9A=84=E6=95=B0=E7=BB=84</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword"=
>static</span> char<span class=3D"sh_symbol">[]</span> <span class=3D"sh_fu=
nction">generate</span><span class=3D"sh_symbol">()</span> <span class=3D"s=
h_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=
=3D"sh_symbol">[]</span> letters <span class=3D"sh_symbol">=3D</span> <span=
 class=3D"sh_cbracket">{</span> <span class=3D"sh_string">'A'</span><span c=
lass=3D"sh_symbol">,</span> <span class=3D"sh_string">'B'</span><span class=
=3D"sh_symbol">,</span> <span class=3D"sh_string">'C'</span><span class=3D"=
sh_symbol">,</span> <span class=3D"sh_string">'D'</span><span class=3D"sh_s=
ymbol">,</span> <span class=3D"sh_string">'E'</span><span class=3D"sh_symbo=
l">,</span> <span class=3D"sh_string">'F'</span><span class=3D"sh_symbol">,=
</span> <span class=3D"sh_string">'G'</span><span class=3D"sh_symbol">,</sp=
an> <span class=3D"sh_string">'H'</span><span class=3D"sh_symbol">,</span> =
<span class=3D"sh_string">'I'</span><span class=3D"sh_symbol">,</span> <spa=
n class=3D"sh_string">'J'</span><span class=3D"sh_symbol">,</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'K'</span><span class=3D"sh_=
symbol">,</span> <span class=3D"sh_string">'L'</span><span class=3D"sh_symb=
ol">,</span> <span class=3D"sh_string">'M'</span><span class=3D"sh_symbol">=
,</span> <span class=3D"sh_string">'N'</span><span class=3D"sh_symbol">,</s=
pan> <span class=3D"sh_string">'O'</span><span class=3D"sh_symbol">,</span>=
 <span class=3D"sh_string">'P'</span><span class=3D"sh_symbol">,</span> <sp=
an class=3D"sh_string">'Q'</span><span class=3D"sh_symbol">,</span> <span c=
lass=3D"sh_string">'R'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'S'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'T'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'U'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'V'</span><span class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_string">'W'</span><span class=3D"sh_symbol">,</span> <s=
pan class=3D"sh_string">'X'</span><span class=3D"sh_symbol">,</span> <span =
class=3D"sh_string">'Y'</span><span class=3D"sh_symbol">,</span> <span clas=
s=3D"sh_string">'Z'</span> <span class=3D"sh_cbracket">}</span><span class=
=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;boolean<span class=3D"sh_symbol">[]</span> flags <span class=3D"sh_sym=
bol">=3D</span> <span class=3D"sh_keyword">new</span> boolean<span class=3D=
"sh_symbol">[</span>letters<span class=3D"sh_symbol">.</span>length<span cl=
ass=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;char<span class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symb=
ol">=3D</span> <span class=3D"sh_keyword">new</span> char<span class=3D"sh_=
symbol">[</span><span class=3D"sh_number">5</span><span class=3D"sh_symbol"=
>];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i <span=
 class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span cla=
ss=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> chs<span =
class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> i<span=
 class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=
nt index<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">=
do</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;index <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_symbol">(</sp=
an>int<span class=3D"sh_symbol">)</span> <span class=3D"sh_symbol">(</span>=
<span class=3D"sh_predef_var">Math</span><span class=3D"sh_symbol">.</span>=
<span class=3D"sh_function">random</span><span class=3D"sh_symbol">()</span=
> <span class=3D"sh_symbol">*</span> <span class=3D"sh_symbol">(</span>lett=
ers<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">));</s=
pan></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=3D"sh_keyword">w=
hile</span> <span class=3D"sh_symbol">(</span>flags<span class=3D"sh_symbol=
">[</span>index<span class=3D"sh_symbol">]);</span><span class=3D"sh_commen=
t">// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E6=98=
=AF=E5=90=A6=E9=87=8D=E5=A4=8D</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chs<span class=3D"sh_symbol">[</=
span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D</spa=
n> letters<span class=3D"sh_symbol">[</span>index<span class=3D"sh_symbol">=
];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;flags<span class=3D"sh_symbol">[</span>index<span class=3D"s=
h_symbol">]</span> <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_k=
eyword">true</span><span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">return</span> chs<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span style=3D"d=
isplay:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
sh_comment">/**</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp=
;&nbsp; * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=
=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=
=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=
=90=E4=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=
=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=
=9E=9C</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
 </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </sp=
an><span class=3D"sh_type">@param</span><span class=3D"sh_comment"> chs</sp=
an></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *          =
  =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=
=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp=
; * </span><span class=3D"sh_type">@param</span><span class=3D"sh_comment">=
 input</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *=
            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=
=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&n=
bsp;&nbsp; * </span><span class=3D"sh_type">@return</span><span class=3D"sh=
_comment"> =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE</span></li><li><span class=3D"sh_c=
omment">&nbsp;&nbsp;&nbsp;&nbsp; *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=
=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=
=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=
=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=
=AE=E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=
=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=
=E4=BD=86=E6=98=AF=E4=BD=8D=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82</=
span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span>=
</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <=
span class=3D"sh_keyword">static</span> int<span class=3D"sh_symbol">[]</sp=
an> <span class=3D"sh_function">check</span><span class=3D"sh_symbol">(</sp=
an>char<span class=3D"sh_symbol">[]</span> chs<span class=3D"sh_symbol">,</=
span> char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh_symbol=
">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result =
<span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> =
int<span class=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><spa=
n class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"sh_symbol=
">(</span>int i <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_numb=
er">0</span><span class=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">=
&lt;</span> input<span class=3D"sh_symbol">.</span>length<span class=3D"sh_=
symbol">;</span> i<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <span class=3D"=
sh_symbol">(</span>int j <span class=3D"sh_symbol">=3D</span> <span class=
=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> j <span class=3D"=
sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</span>length<span cla=
ss=3D"sh_symbol">;</span> j<span class=3D"sh_symbol">++)</span> <span class=
=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_ke=
yword">if</span> <span class=3D"sh_symbol">(</span>input<span class=3D"sh_s=
ymbol">[</span>i<span class=3D"sh_symbol">]</span> <span class=3D"sh_symbol=
">=3D=3D</span> chs<span class=3D"sh_symbol">[</span>j<span class=3D"sh_sym=
bol">])</span> <span class=3D"sh_cbracket">{</span><span class=3D"sh_commen=
t">// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=
=AE</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span=
 class=3D"sh_symbol">[</span><span class=3D"sh_number">1</span><span class=
=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_symbol">(</span=
>i <span class=3D"sh_symbol">=3D=3D</span> j<span class=3D"sh_symbol">)</sp=
an> <span class=3D"sh_cbracket">{</span><span class=3D"sh_comment">// =E5=
=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;result<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0</sp=
an><span class=3D"sh_symbol">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break</span><s=
pan class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket=
">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_keyword">return</span> result<span class=3D"sh_symbol">;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li=
><span class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-=
textonly sh_sourceCode" style=3D"display:none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
//=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=B0=
=E6=8D=AE
char[] input=3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
		Scanner scanner =3D new Scanner(System.in);
		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=
=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3D generate();
#cold_bold		System.out.println("GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=
=E5=A7=8B=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=
=9A=845=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=
=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
		while (true) {
			String inputStr =3D scanner.next().trim().toUpperCase();
			if ("EXIT".equals(inputStr)) {
				System.out.println("GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=
=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81");
				break;
			}
#cold_boldinput =3D inputStr.toCharArray();
#cold_bold			result =3D check(chs, input);
#cold_bold			if (result[0] =3D=3D chs.length) {// =E5=AE=8C=E5=85=A8=E7=8C=
=9C=E5=AF=B9=E7=9A=84=E6=83=85=E5=86=B5
#cold_bold				int score =3D 100 * chs.length - count * 10;
#cold_bold				System.out.println("GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=
=A0=E7=8C=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=
=E6=98=AF=EF=BC=9A" + score);
#cold_bold				break;
#cold_bold			} else {
#cold_bold				count++;
#cold_bold				System.out.println("GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=
=B9" + result[1] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C=E5=85=B6=E4=B8=AD"
#cold_bold						+ result[0] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=
=8D=E7=BD=AE=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=
=3D" + count + "=EF=BC=8Cexit=E2=80=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89"=
);
#cold_bold		}
		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
	=09
		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
		char[] chs =3D new char[5];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre></div></div>
      <h3>5.4 =E5=AE=8C=E6=95=B4=E4=BB=A3=E7=A0=81</h3>
      <p>=E6=9C=AC=E6=A1=88=E4=BE=8B=E7=9A=84=E5=AE=8C=E6=95=B4=E4=BB=A3=E7=
=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>
      <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"s=
h_acid snippet-wrap" style=3D"display: none;"><div class=3D"snippet-menu sh=
_sourceCode" style=3D"display:none;"><pre style=3D"display: none;"><a class=
=3D"snippet-copy sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source/ttsP=
age/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" style=3D"display:=
 none;">copy</a><a class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena=
.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.=
html#">text</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.taren=
a.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index=
.html#">pop-up</a></pre></div><pre class=3D"hide sh_javascript snippet-form=
atted sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=
=3D"sh_symbol">.</span>util<span class=3D"sh_symbol">.</span>Scanner<span c=
lass=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&nbsp;</s=
pan></li><li><span class=3D"sh_keyword">public</span> <span class=3D"sh_key=
word">class</span> GuessingGame <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span cl=
ass=3D"sh_keyword">static</span> void <span class=3D"sh_function">main</spa=
n><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">String</=
span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">)</s=
pan> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">// =E8=A1=A8=E7=A4=BA=E7=
=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=A1=E6=95=B0</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int count <span class=3D"s=
h_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=3D"sh_sy=
mbol">;</span></li><li>     <span class=3D"sh_comment">//=E8=A1=A8=E7=A4=BA=
=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=95=B0=E6=8D=AE</span></li>=
<li>char<span class=3D"sh_symbol">[]</span> input<span class=3D"sh_symbol">=
=3D</span><span class=3D"sh_keyword">null</span><span class=3D"sh_symbol">;=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_comment">// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=
=E7=9A=84=E7=BB=93=E6=9E=9C</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;int<span class=3D"sh_symbol">[]</span> result <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> int<span cl=
ass=3D"sh_symbol">[</span><span class=3D"sh_number">2</span><span class=3D"=
sh_symbol">];</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;Scanner scanner <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_ke=
yword">new</span> <span class=3D"sh_function">Scanner</span><span class=3D"=
sh_symbol">(</span>System<span class=3D"sh_symbol">.</span><span class=3D"s=
h_keyword">in</span><span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</spa=
n>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function">println<=
/span><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"Guessing=
Game&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=
=B8=B8=E6=88=8F=EF=BC=81"</span><span class=3D"sh_symbol">);</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment"=
>// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<spa=
n class=3D"sh_symbol">[]</span> chs <span class=3D"sh_symbol">=3D</span> <s=
pan class=3D"sh_function">generate</span><span class=3D"sh_symbol">();</spa=
n></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span clas=
s=3D"sh_symbol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D=
"sh_function">println</span><span class=3D"sh_symbol">(</span><span class=
=3D"sh_string">"GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=EF=BC=
=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=E4=B8=
=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=94=E2=
=80=94=E9=80=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh_symbol">);</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh=
_keyword">while</span> <span class=3D"sh_symbol">(</span><span class=3D"sh_=
keyword">true</span><span class=3D"sh_symbol">)</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_predef_func">String</span> inputStr=
 <span class=3D"sh_symbol">=3D</span> scanner<span class=3D"sh_symbol">.</s=
pan><span class=3D"sh_function">next</span><span class=3D"sh_symbol">().</s=
pan><span class=3D"sh_function">trim</span><span class=3D"sh_symbol">().</s=
pan><span class=3D"sh_function">toUpperCase</span><span class=3D"sh_symbol"=
>();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span class=3D"sh_sym=
bol">(</span><span class=3D"sh_string">"EXIT"</span><span class=3D"sh_symbo=
l">.</span><span class=3D"sh_function">equals</span><span class=3D"sh_symbo=
l">(</span>inputStr<span class=3D"sh_symbol">))</span> <span class=3D"sh_cb=
racket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbo=
l">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function"=
>println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string">=
"GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=84=E5=B0=9D=E8=AF=95=EF=
=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81"</span><span class=3D"sh_symbol">);</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break</span><span=
 class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li=
><li><span style=3D"display:none;">&nbsp;</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input <span class=3D"=
sh_symbol">=3D</span> inputStr<span class=3D"sh_symbol">.</span><span class=
=3D"sh_function">toCharArray</span><span class=3D"sh_symbol">();</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;result <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_function">c=
heck</span><span class=3D"sh_symbol">(</span>chs<span class=3D"sh_symbol">,=
</span> input<span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">if</span> <span class=3D"sh_symbol">(</span>result<span class=3D"sh_s=
ymbol">[</span><span class=3D"sh_number">0</span><span class=3D"sh_symbol">=
]</span> <span class=3D"sh_symbol">=3D=3D</span> chs<span class=3D"sh_symbo=
l">.</span>length<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbrac=
ket">{</span><span class=3D"sh_comment">// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=
=AF=B9=E7=9A=84=E6=83=85=E5=86=B5</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int s=
core <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">100</sp=
an> <span class=3D"sh_symbol">*</span> chs<span class=3D"sh_symbol">.</span=
>length <span class=3D"sh_symbol">-</span> count <span class=3D"sh_symbol">=
*</span> <span class=3D"sh_number">10</span><span class=3D"sh_symbol">;</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>ou=
t<span class=3D"sh_symbol">.</span><span class=3D"sh_function">println</spa=
n><span class=3D"sh_symbol">(</span><span class=3D"sh_string">"GuessingGame=
&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=E7=8C=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=
=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=98=AF=EF=BC=9A"</span> <span class=3D"sh_=
symbol">+</span></li><li> score<span class=3D"sh_symbol">);</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">break</span><span class=3D"=
sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span class=
=3D"sh_keyword">else</span> <span class=3D"sh_cbracket">{</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;count<span class=3D"sh_symbol">++;</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh=
_symbol">.</span><span class=3D"sh_function">println</span><span class=3D"s=
h_symbol">(</span><span class=3D"sh_string">"GuessingGame&gt;=E4=BD=A0=E7=
=8C=9C=E5=AF=B9"</span> <span class=3D"sh_symbol">+</span> result<span clas=
s=3D"sh_symbol">[</span><span class=3D"sh_number">1</span><span class=3D"sh=
_symbol">]</span> <span class=3D"sh_symbol">+</span> <span class=3D"sh_stri=
ng">"=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C</span></li><li><span class=3D"sh_=
string">=E5=85=B6=E4=B8=AD"</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_symbol">+</span> res=
ult<span class=3D"sh_symbol">[</span><span class=3D"sh_number">0</span><spa=
n class=3D"sh_symbol">]</span> <span class=3D"sh_symbol">+</span> <span cla=
ss=3D"sh_string">"=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=E6=
=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D"</span> <sp=
an class=3D"sh_symbol">+</span> count <span class=3D"sh_symbol">+</span> <s=
pan class=3D"sh_string">"=EF=BC=8Cexit=E2=80=94=E2=80=94</span></li><li><sp=
an class=3D"sh_string">=E9=80=80=E5=87=BA=EF=BC=89"</span><span class=3D"sh=
_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</sp=
an></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanner<span cl=
ass=3D"sh_symbol">.</span><span class=3D"sh_function">close</span><span cla=
ss=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"=
sh_cbracket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><l=
i><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E9=9A=8F=E6=9C=BA=
=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E6=
=AF=8D=E5=BA=8F=E5=88=97</span></li><li><span class=3D"sh_comment">&nbsp;&n=
bsp;&nbsp;&nbsp; * </span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&=
nbsp;&nbsp; * </span><span class=3D"sh_type">@return</span><span class=3D"s=
h_comment"> =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&n=
bsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyw=
ord">public</span> <span class=3D"sh_keyword">static</span> char<span class=
=3D"sh_symbol">[]</span> <span class=3D"sh_function">generate</span><span c=
lass=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_symbol">[]</span> letter=
s <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_cbracket">{</span>=
 <span class=3D"sh_string">'A'</span><span class=3D"sh_symbol">,</span> <sp=
an class=3D"sh_string">'B'</span><span class=3D"sh_symbol">,</span> <span c=
lass=3D"sh_string">'C'</span><span class=3D"sh_symbol">,</span> <span class=
=3D"sh_string">'D'</span><span class=3D"sh_symbol">,</span> <span class=3D"=
sh_string">'E'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_s=
tring">'F'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_strin=
g">'G'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'=
H'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'I'</=
span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'J'</span=
><span class=3D"sh_symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_string">'K'</span><span class=3D"sh_symbol">,</span> <span class=3D=
"sh_string">'L'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_=
string">'M'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_stri=
ng">'N'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">=
'O'</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'P'<=
/span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Q'</spa=
n><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'R'</span><s=
pan class=3D"sh_symbol">,</span> <span class=3D"sh_string">'S'</span><span =
class=3D"sh_symbol">,</span> <span class=3D"sh_string">'T'</span><span clas=
s=3D"sh_symbol">,</span> <span class=3D"sh_string">'U'</span><span class=3D=
"sh_symbol">,</span> <span class=3D"sh_string">'V'</span><span class=3D"sh_=
symbol">,</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_string">'W'=
</span><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'X'</sp=
an><span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Y'</span><=
span class=3D"sh_symbol">,</span> <span class=3D"sh_string">'Z'</span> <spa=
n class=3D"sh_cbracket">}</span><span class=3D"sh_symbol">;</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boolean<span class=3D"sh_sy=
mbol">[]</span> flags <span class=3D"sh_symbol">=3D</span> <span class=3D"s=
h_keyword">new</span> boolean<span class=3D"sh_symbol">[</span>letters<span=
 class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">];</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char<span class=3D"sh_s=
ymbol">[]</span> chs <span class=3D"sh_symbol">=3D</span> <span class=3D"sh=
_keyword">new</span> char<span class=3D"sh_symbol">[</span><span class=3D"s=
h_number">5</span><span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">for</span> <s=
pan class=3D"sh_symbol">(</span>int i <span class=3D"sh_symbol">=3D</span> =
<span class=3D"sh_number">0</span><span class=3D"sh_symbol">;</span> i <spa=
n class=3D"sh_symbol">&lt;</span> chs<span class=3D"sh_symbol">.</span>leng=
th<span class=3D"sh_symbol">;</span> i<span class=3D"sh_symbol">++)</span> =
<span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int index<span class=3D"sh_symbol=
">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;<span class=3D"sh_keyword">do</span> <span class=3D"sh_cbra=
cket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index <span class=3D"sh_symbol"=
>=3D</span> <span class=3D"sh_symbol">(</span>int<span class=3D"sh_symbol">=
)</span> <span class=3D"sh_symbol">(</span><span class=3D"sh_predef_var">Ma=
th</span><span class=3D"sh_symbol">.</span><span class=3D"sh_function">rand=
om</span><span class=3D"sh_symbol">()</span> <span class=3D"sh_symbol">*</s=
pan> <span class=3D"sh_symbol">(</span>letters<span class=3D"sh_symbol">.</=
span>length<span class=3D"sh_symbol">));</span></li><li>&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbra=
cket">}</span> <span class=3D"sh_keyword">while</span> <span class=3D"sh_sy=
mbol">(</span>flags<span class=3D"sh_symbol">[</span>index<span class=3D"sh=
_symbol">]);</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E7=94=
=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;chs<span class=3D"sh_symbol">[</span>i<span class=3D"sh_symbol=
">]</span> <span class=3D"sh_symbol">=3D</span> letters<span class=3D"sh_sy=
mbol">[</span>index<span class=3D"sh_symbol">];</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags<span clas=
s=3D"sh_symbol">[</span>index<span class=3D"sh_symbol">]</span> <span class=
=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">true</span><span class=
=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</span> chs<span cl=
ass=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_cbracket">}</span></li><li><span style=3D"display:none;">&nbsp;</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_comment">/**</span></li><li=
><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * =E6=AF=94=E8=BE=83=
=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=
=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=B8=80=E6=AF=94=E8=BE=83=
=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=AE=EF=BC=8C=E5=B9=B6=E8=
=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C</span></li><li><span cl=
ass=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"sh_type">@=
param</span><span class=3D"sh_comment"> chs</span></li><li><span class=3D"s=
h_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=A8=8B=E5=BA=8F=E7=94=
=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></li><li><s=
pan class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span class=3D"s=
h_type">@param</span><span class=3D"sh_comment"> input</span></li><li><span=
 class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; *            =E7=8E=A9=E5=AE=
=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=A6=E5=BA=8F=E5=88=97</span></=
li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; * </span><span c=
lass=3D"sh_type">@return</span><span class=3D"sh_comment"> =E5=AD=98=E5=82=
=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=E3=80=82=E8=BF=94=E5=9B=9E=
=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=BF=E5=BA=A6=E4=B8=BA2=EF=BC=
=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=95=E4=B8=BA0=E7=9A=84=E4=BD=
=8D=E7=BD=AE</span></li><li><span class=3D"sh_comment">&nbsp;&nbsp;&nbsp;&n=
bsp; *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=
=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=
=A6=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=
=A2=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=
=98=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0=
(=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=
=E7=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82</span></li><li><span class=
=3D"sh_comment">&nbsp;&nbsp;&nbsp;&nbsp; */</span></li><li>&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"sh_keyword">public</span> <span class=3D"sh_keyword"=
>static</span> int<span class=3D"sh_symbol">[]</span> <span class=3D"sh_fun=
ction">check</span><span class=3D"sh_symbol">(</span>char<span class=3D"sh_=
symbol">[]</span> chs<span class=3D"sh_symbol">,</span> char<span class=3D"=
sh_symbol">[]</span> input<span class=3D"sh_symbol">)</span> <span class=3D=
"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;int<span class=3D"sh_symbol">[]</span> result <span class=3D"sh_symbol"=
>=3D</span> <span class=3D"sh_keyword">new</span> int<span class=3D"sh_symb=
ol">[</span><span class=3D"sh_number">2</span><span class=3D"sh_symbol">];<=
/span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int i <span cl=
ass=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><span class=
=3D"sh_symbol">;</span> i <span class=3D"sh_symbol">&lt;</span> input<span =
class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span> i<span=
 class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span></li><l=
i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<=
span class=3D"sh_keyword">for</span> <span class=3D"sh_symbol">(</span>int =
j <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_number">0</span><s=
pan class=3D"sh_symbol">;</span> j <span class=3D"sh_symbol">&lt;</span> ch=
s<span class=3D"sh_symbol">.</span>length<span class=3D"sh_symbol">;</span>=
 j<span class=3D"sh_symbol">++)</span> <span class=3D"sh_cbracket">{</span>=
</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">if</span> <span cl=
ass=3D"sh_symbol">(</span>input<span class=3D"sh_symbol">[</span>i<span cla=
ss=3D"sh_symbol">]</span> <span class=3D"sh_symbol">=3D=3D</span> chs<span =
class=3D"sh_symbol">[</span>j<span class=3D"sh_symbol">])</span> <span clas=
s=3D"sh_cbracket">{</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh_symbol">[</=
span><span class=3D"sh_number">1</span><span class=3D"sh_symbol">]++;</span=
></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_ke=
yword">if</span> <span class=3D"sh_symbol">(</span>i <span class=3D"sh_symb=
ol">=3D=3D</span> j<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbr=
acket">{</span><span class=3D"sh_comment">// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=
=BD=AE=E6=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE</span></li><li>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result<span class=3D"sh=
_symbol">[</span><span class=3D"sh_number">0</span><span class=3D"sh_symbol=
">]++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;<span class=3D"sh_keyword">break</span><span class=3D"sh_symbol">;</=
span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">return</sp=
an> result<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;<span class=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">=
}</span></li></ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=
=3D"display:none;">import java.util.Scanner;

public class GuessingGame {
	public static void main(String[] args) {
		// =E8=A1=A8=E7=A4=BA=E7=8E=A9=E5=AE=B6=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=AC=
=A1=E6=95=B0
		int count =3D 0;
     //=E8=A1=A8=E7=A4=BA=E7=94=A8=E6=88=B7=E7=8C=9C=E6=B5=8B=E7=9A=84=E6=
=95=B0=E6=8D=AE
char[] input=3Dnull;
		// =E7=94=A8=E4=BA=8E=E4=BF=9D=E5=AD=98=E5=88=A4=E6=96=AD=E7=9A=84=E7=BB=
=93=E6=9E=9C
		int[] result =3D new int[2];
		Scanner scanner =3D new Scanner(System.in);
		System.out.println("GuessingGame&gt;=E6=AC=A2=E8=BF=8E=E5=B0=9D=E8=AF=95=
=E7=8C=9C=E5=AD=97=E6=AF=8D=E6=B8=B8=E6=88=8F=EF=BC=81");
		// =E8=A1=A8=E7=A4=BA=E7=8C=9C=E6=B5=8B=E7=9A=84=E5=AD=97=E7=AC=A6=E4=B8=
=B2
		char[] chs =3D generate();
		System.out.println("GuessingGame&gt;=E6=B8=B8=E6=88=8F=E5=BC=80=E5=A7=8B=
=EF=BC=8C=E8=AF=B7=E8=BE=93=E5=85=A5=E4=BD=A0=E6=89=80=E7=8C=9C=E7=9A=845=
=E4=B8=AA=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=9A=EF=BC=88exit=E2=80=
=94=E2=80=94=E9=80=80=E5=87=BA=EF=BC=89");
		while (true) {
			String inputStr =3D scanner.next().trim().toUpperCase();
			if ("EXIT".equals(inputStr)) {
				System.out.println("GuessingGame&gt;=E8=B0=A2=E8=B0=A2=E4=BD=A0=E7=9A=
=84=E5=B0=9D=E8=AF=95=EF=BC=8C=E5=86=8D=E8=A7=81=EF=BC=81");
				break;
			}

			input =3D inputStr.toCharArray();
			result =3D check(chs, input);
			if (result[0] =3D=3D chs.length) {// =E5=AE=8C=E5=85=A8=E7=8C=9C=E5=AF=
=B9=E7=9A=84=E6=83=85=E5=86=B5
				int score =3D 100 * chs.length - count * 10;
				System.out.println("GuessingGame&gt;=E6=81=AD=E5=96=9C=E4=BD=A0=E7=8C=
=9C=E5=AF=B9=E4=BA=86=EF=BC=81=E4=BD=A0=E7=9A=84=E5=BE=97=E5=88=86=E6=98=AF=
=EF=BC=9A" +
 score);
				break;
			} else {
				count++;
				System.out.println("GuessingGame&gt;=E4=BD=A0=E7=8C=9C=E5=AF=B9" + resu=
lt[1] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=EF=BC=8C
=E5=85=B6=E4=B8=AD"
						+ result[0] + "=E4=B8=AA=E5=AD=97=E7=AC=A6=E7=9A=84=E4=BD=8D=E7=BD=AE=
=E6=AD=A3=E7=A1=AE=EF=BC=81=EF=BC=88=E6=80=BB=E6=AC=A1=E6=95=B0=3D" + count=
 + "=EF=BC=8Cexit=E2=80=94=E2=80=94
=E9=80=80=E5=87=BA=EF=BC=89");
			}
		}
		scanner.close();
	}

	/**
	 * =E9=9A=8F=E6=9C=BA=E7=94=9F=E6=88=90=E9=9C=80=E8=A6=81=E7=8C=9C=E6=B5=
=8B=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97
	 *=20
	 * @return =E5=AD=98=E5=82=A8=E9=9A=8F=E6=9C=BA=E5=AD=97=E7=AC=A6=E7=9A=84=
=E6=95=B0=E7=BB=84
	 */
	public static char[] generate() {
	=09
		char[] letters =3D { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
				'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
				'W', 'X', 'Y', 'Z' };
		boolean[] flags =3D new boolean[letters.length];
		char[] chs =3D new char[5];
		for (int i =3D 0; i &lt; chs.length; i++) {
			int index;
			do {
				index =3D (int) (Math.random() * (letters.length));
			} while (flags[index]);// =E5=88=A4=E6=96=AD=E7=94=9F=E6=88=90=E7=9A=84=
=E5=AD=97=E7=AC=A6=E6=98=AF=E5=90=A6=E9=87=8D=E5=A4=8D
			chs[i] =3D letters[index];
			flags[index] =3D true;
		}
		return chs;
	}

	/**
	 * =E6=AF=94=E8=BE=83=E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=
=97=E6=AF=8D=E5=BA=8F=E5=88=97=E5=92=8C=E7=A8=8B=E5=BA=8F=E6=89=80=E7=94=9F=
=E6=88=90=E7=9A=84=E5=AD=97=E6=AF=8D=E5=BA=8F=E5=88=97=EF=BC=8C=E9=80=90=E4=
=B8=80=E6=AF=94=E8=BE=83=E5=AD=97=E7=AC=A6=E5=8F=8A=E5=85=B6=E4=BD=8D=E7=BD=
=AE=EF=BC=8C=E5=B9=B6=E8=AE=B0=E8=BD=BD=E6=AF=94=E8=BE=83=E7=BB=93=E6=9E=9C
	 *=20
	 * @param chs
	 *            =E7=A8=8B=E5=BA=8F=E7=94=9F=E6=88=90=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @param input
	 *            =E7=8E=A9=E5=AE=B6=E8=BE=93=E5=85=A5=E7=9A=84=E5=AD=97=E7=AC=
=A6=E5=BA=8F=E5=88=97
	 * @return =E5=AD=98=E5=82=A8=E6=AF=94=E8=BE=83=E7=9A=84=E7=BB=93=E6=9E=9C=
=E3=80=82=E8=BF=94=E5=9B=9E=E5=80=BCint=E6=95=B0=E7=BB=84 =E7=9A=84=E9=95=
=BF=E5=BA=A6=E4=B8=BA2=EF=BC=8C=E5=85=B6=E4=B8=AD=EF=BC=8C=E7=B4=A2=E5=BC=
=95=E4=B8=BA0=E7=9A=84=E4=BD=8D=E7=BD=AE
	 *         =E7=94=A8=E4=BA=8E=E5=AD=98=E6=94=BE=E5=AE=8C=E5=85=A8=E7=8C=9C=
=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=E5=AD=97=E7=AC=A6=
=E5=92=8C=E4=BD=8D=E7=BD=AE=E5=9D=87=E6=AD=A3=E7=A1=AE)=EF=BC=8C=E7=B4=A2=
=E5=BC=95=E4=B8=BA1=E7=9A=84=E4=BD=8D=E7=BD=AE=E7=94=A8=E4=BA=8E=E5=AD=98=
=E6=94=BE=E7=8C=9C=E5=AF=B9=E7=9A=84=E5=AD=97=E6=AF=8D=E4=B8=AA=E6=95=B0(=
=E5=AD=97=E7=AC=A6=E6=AD=A3=E7=A1=AE=EF=BC=8C=E4=BD=86=E6=98=AF=E4=BD=8D=E7=
=BD=AE=E4=B8=8D=E6=AD=A3=E7=A1=AE)=E3=80=82
	 */
	public static int[] check(char[] chs, char[] input) {
		int[] result =3D new int[2];
		for (int i =3D 0; i &lt; input.length; i++) {
			for (int j =3D 0; j &lt; chs.length; j++) {
				if (input[i] =3D=3D chs[j]) {// =E5=88=A4=E6=96=AD=E5=AD=97=E7=AC=A6=E6=
=98=AF=E5=90=A6=E6=AD=A3=E7=A1=AE
					result[1]++;
					if (i =3D=3D j) {// =E5=88=A4=E6=96=AD=E4=BD=8D=E7=BD=AE=E6=98=AF=E5=
=90=A6=E6=AD=A3=E7=A1=AE
						result[0]++;
					}
					break;
				}
			}
		}
		return result;
	}
}
</pre><div class=3D"sh_sourceCode snippet-hide"><pre><a href=3D"http://pdf7=
.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01=
/index.html#" class=3D"snippet-revealed snippet-toggle sh_url">=E9=9A=90=E8=
=97=8F</a></pre></div></div><div class=3D"snippet-reveal sh_acid snippet-wr=
ap"><pre class=3D"sh_sourceCode"><a href=3D"http://pdf7.tarena.com.cn/tts8_=
source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.html#" class=
=3D"snippet-toggle sh_url">=E4=BB=A3=E7=A0=81</a></pre></div></div>
    </div>
 =20
<div id=3D"qb-sougou-search" style=3D"display: none; opacity: 0;"><p>=E6=90=
=9C=E7=B4=A2</p><p class=3D"last-btn">=E5=A4=8D=E5=88=B6</p><iframe src=3D"=
cid:frame-102-0672c886-12fd-433e-b6ac-3923c035dec7@mhtml.blink"></iframe></=
div></body></html>
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/index.css

@charset "utf-8";

div.source_style_case { font-family: =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91, =
"Times New Roman"; font-size: 14px; min-width: 400px; padding: 10px 20px; c=
olor: rgb(0, 0, 0); position: relative; }

div.source_style_case div.wordSection { width: 95%; padding: 5px; margin: 5=
px; }

div.source_style_case h1 { text-align: center; font-size: 24px; }

div.source_style_case h2 { margin: 16.3px 0px 0px; text-indent: 0px; font-w=
eight: bold; font-size: 20px; }

div.source_style_case h3 { font-size: 18px; font-weight: bold; margin: 10px=
 0px; text-indent: 0px; }

div.source_style_case p { margin: 3px; padding: 2px; text-indent: 21pt; fon=
t-size: 15px; }

div.source_style_case div.image { text-align: center; padding: 5px 0px; }

div.source_style_case div.image img { max-width: 900px; }

div.source_style_case div.image > p { text-align: center; margin: 5px; padd=
ing: 3px; font-size: 12px; }

div.source_style_case div.table { text-align: center; padding: 5px 0px; }

div.source_style_case div.table img { max-width: 900px; }

div.source_style_case div.table > p { text-align: center; margin: 5px; padd=
ing: 3px; font-size: 12px; }

div.source_style_case p.code, div.source_style_case pre { font-size: 14px; =
color: red; margin-left: 40px; }

div.source_style_case .code_level1 { text-indent: 21pt; }

div.source_style_case .code_level2 { text-indent: 42pt; }

div.source_style_case .code_level3 { text-indent: 63pt; }

div.source_style_case .code_level4 { text-indent: 84pt; }

div.source_style_case ul.list, div.source_style_case ol.list { margin-left:=
 30px; }

div.source_style_case ol.list { padding-left: 45px; }

div.source_style_case ul.list li { padding-left: 10px; }

div.source_style_case ol.list li { padding-left: 5px; }

div.source_style_case p.emphasiz { font-weight: bold; font-style: italic; }

div.source_style_case p.number { font-weight: bold; margin-top: 8px; margin=
-bottom: 8px; font-size: 15px; }

div.source_style_case #top_anchor { position: absolute; }

div.source_style_case #link_top { position: fixed; bottom: 60px; right: 80p=
x; z-index: 20; font-weight: bold; color: rgb(0, 0, 255); }

div.source_style_case ol.index { padding: 10px; margin-left: 40px; }

div.source_style_case ol.index li a { color: blue; text-decoration: none; b=
order-bottom: 1px dashed black; font-size: 15px; }

div.source_style_case ol.index li a:hover { color: blue; font-weight: bold;=
 }

div.source_style_case .highlighter { border: 2px solid rgb(221, 221, 221); =
padding: 5px; background: rgb(238, 238, 238); }

div.source_style_case .command_help { display: none; }
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/jquery.snippet.css

@charset "utf-8";

a.snippet-toggle { margin-right: 40px; }

.bold_code { font-weight: bold; font-size: 11pt; color: blue !important; }

.bold_code > span { font-family: =CE=A2=EF=BF=BD=EF=BF=BD=EF=BF=BD=C5=BA=EF=
=BF=BD; font-weight: bold; font-size: 11pt; color: blue !important; }

.sh_acid { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_acid .sh_sourceCode { background-color: rgb(238, 238, 238); color: rgb(=
0, 0, 0); font-weight: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_keyword { color: rgb(187, 121, 119); font-weigh=
t: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_type { color: rgb(128, 128, 192); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_string { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_regexp { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_comment { color: rgb(255, 128, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_number { color: rgb(128, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_preproc { color: rgb(0, 128, 192); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_symbol { color: rgb(255, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_function { color: rgb(0, 68, 102); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_url { color: rgb(166, 133, 0); font-weight: nor=
mal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_date { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_time { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_file { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_ip { color: rgb(166, 133, 0); font-weight: norm=
al; font-style: normal; }

.sh_acid .sh_sourceCode .sh_name { color: rgb(166, 133, 0); font-weight: no=
rmal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_variable { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_newfile { color: rgb(166, 133, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_difflines { color: rgb(187, 121, 119); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_selector { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_property { color: rgb(187, 121, 119); font-weig=
ht: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_value { color: rgb(166, 133, 0); font-weight: n=
ormal; font-style: normal; }

.sh_berries-dark { background: none; padding: 0px; margin: 0px; border: 0px=
 none; }

.sh_berries-dark .sh_sourceCode { background-color: rgb(128, 191, 255); col=
or: rgb(64, 0, 128); font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_keyword { color: rgb(63, 43, 240); font=
-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_type { color: rgb(63, 43, 240); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_string { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_regexp { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_specialchar { color: rgb(119, 55, 154);=
 font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_comment { color: rgb(223, 9, 89); font-=
weight: normal; font-style: italic; }

.sh_berries-dark .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_function { color: rgb(144, 17, 100); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_url { color: rgb(196, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_date { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_time { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_file { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_ip { color: rgb(196, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_name { color: rgb(196, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_variable { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_oldfile { color: rgb(119, 55, 154); fon=
t-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_newfile { color: rgb(196, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_difflines { color: rgb(63, 43, 240); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_selector { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_property { color: rgb(63, 43, 240); fon=
t-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_value { color: rgb(196, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_berries-light { background: none; padding: 0px; margin: 0px; border: 0p=
x none; }

.sh_berries-light .sh_sourceCode { background-color: rgb(215, 255, 255); co=
lor: rgb(71, 64, 109); font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_keyword { color: rgb(44, 174, 30); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_type { color: rgb(139, 81, 192); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_string { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_regexp { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_specialchar { color: rgb(95, 129, 179)=
; font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_comment { color: rgb(156, 60, 175); fo=
nt-weight: normal; font-style: italic; }

.sh_berries-light .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_symbol { color: rgb(210, 7, 59); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_function { color: rgb(144, 17, 100); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_cbracket { color: rgb(210, 7, 59); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_url { color: rgb(95, 129, 179); font-w=
eight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_date { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_time { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_file { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_ip { color: rgb(95, 129, 179); font-we=
ight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_name { color: rgb(95, 129, 179); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_variable { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_oldfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_newfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_difflines { color: rgb(44, 174, 30); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_selector { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_property { color: rgb(44, 174, 30); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_value { color: rgb(95, 129, 179); font=
-weight: normal; font-style: normal; }

.sh_bipolar { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_bipolar .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(209=
, 73, 166); font-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_keyword { color: rgb(238, 133, 226); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_type { color: rgb(170, 221, 139); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_string { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_regexp { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_specialchar { color: rgb(158, 244, 87); font=
-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_comment { color: rgb(53, 214, 229); font-wei=
ght: normal; font-style: italic; }

.sh_bipolar .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_preproc { color: rgb(7, 246, 191); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_symbol { color: rgb(52, 143, 239); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_function { color: rgb(213, 25, 147); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_cbracket { color: rgb(52, 143, 239); font-we=
ight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_url { color: rgb(158, 244, 87); font-weight:=
 normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_date { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_time { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_file { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_ip { color: rgb(158, 244, 87); font-weight: =
normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_name { color: rgb(158, 244, 87); font-weight=
: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_variable { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_oldfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_newfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_difflines { color: rgb(238, 133, 226); font-=
weight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_selector { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_property { color: rgb(238, 133, 226); font-w=
eight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_value { color: rgb(158, 244, 87); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_blacknblue .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(=
35, 70, 213); font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_keyword { color: rgb(30, 222, 220); font-=
weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_type { color: rgb(192, 108, 248); font-we=
ight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_string { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_regexp { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_specialchar { color: rgb(204, 198, 198); =
font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_comment { color: rgb(111, 178, 196); font=
-weight: normal; font-style: italic; }

.sh_blacknblue .sh_sourceCode .sh_number { color: rgb(196, 172, 96); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_preproc { color: rgb(128, 128, 255); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_symbol { color: rgb(204, 198, 198); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_function { color: rgb(28, 150, 237); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_cbracket { color: rgb(204, 198, 198); fon=
t-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_url { color: rgb(207, 198, 49); font-weig=
ht: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_date { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_time { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_file { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_ip { color: rgb(207, 198, 49); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_name { color: rgb(207, 198, 49); font-wei=
ght: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_variable { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_oldfile { color: rgb(204, 198, 198); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_newfile { color: rgb(207, 198, 49); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_difflines { color: rgb(30, 222, 220); fon=
t-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_selector { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_property { color: rgb(30, 222, 220); font=
-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_value { color: rgb(207, 198, 49); font-we=
ight: normal; font-style: normal; }

.sh_bright { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_bright .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(64, 30, 122); font-weight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_keyword { color: rgb(255, 48, 48); font-weigh=
t: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_type { color: rgb(247, 185, 44); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_string { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_regexp { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_specialchar { color: rgb(24, 97, 167); font-w=
eight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_comment { color: rgb(56, 173, 36); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_number { color: rgb(50, 186, 6); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_preproc { color: rgb(83, 116, 176); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_symbol { color: rgb(48, 48, 238); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_function { color: rgb(209, 28, 237); font-wei=
ght: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_cbracket { color: rgb(48, 48, 238); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_url { color: rgb(24, 97, 167); font-weight: n=
ormal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_date { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_time { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_file { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_ip { color: rgb(24, 97, 167); font-weight: no=
rmal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_name { color: rgb(24, 97, 167); font-weight: =
normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_oldfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_newfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_difflines { color: rgb(255, 48, 48); font-wei=
ght: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_property { color: rgb(255, 48, 48); font-weig=
ht: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_value { color: rgb(24, 97, 167); font-weight:=
 normal; font-style: normal; }

.sh_contrast { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_contrast .sh_sourceCode { background-color: rgb(237, 97, 4); color: rgb=
(0, 0, 255); font-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_string { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_regexp { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_specialchar { color: rgb(17, 248, 12); font=
-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_number { color: rgb(151, 26, 216); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_preproc { color: rgb(123, 68, 224); font-we=
ight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_symbol { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_function { color: rgb(255, 247, 0); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_cbracket { color: rgb(222, 222, 222); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_url { color: rgb(17, 248, 12); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_ip { color: rgb(17, 248, 12); font-weight: =
normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_name { color: rgb(17, 248, 12); font-weight=
: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_variable { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_oldfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_newfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font=
-weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_selector { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_value { color: rgb(17, 248, 12); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkblue .sh_sourceCode { background-color: rgb(0, 0, 64); color: rgb(1=
99, 199, 199); font-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_keyword { color: rgb(255, 255, 96); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_type { color: rgb(96, 255, 96); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_string { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_regexp { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_specialchar { color: rgb(255, 165, 0); font=
-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_comment { color: rgb(128, 160, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_number { color: rgb(66, 202, 217); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_preproc { color: rgb(255, 128, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_symbol { color: rgb(216, 233, 27); font-wei=
ght: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_cbracket { color: rgb(216, 233, 27); font-w=
eight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_url { color: rgb(255, 160, 160); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_date { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_time { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_file { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_ip { color: rgb(255, 160, 160); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_name { color: rgb(255, 160, 160); font-weig=
ht: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_oldfile { color: rgb(255, 165, 0); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_newfile { color: rgb(255, 160, 160); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_difflines { color: rgb(255, 255, 96); font-=
weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_property { color: rgb(255, 255, 96); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_value { color: rgb(255, 160, 160); font-wei=
ght: normal; font-style: normal; }

.sh_darkness { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkness .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_keyword { color: rgb(255, 255, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_string { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_regexp { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_specialchar { color: rgb(191, 191, 191); fo=
nt-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_darkness .sh_sourceCode .sh_number { color: rgb(97, 157, 231); font-wei=
ght: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_preproc { color: rgb(29, 163, 207); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_symbol { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_function { color: rgb(243, 70, 39); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_url { color: rgb(171, 171, 0); font-weight:=
 bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_date { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_time { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_file { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_ip { color: rgb(171, 171, 0); font-weight: =
bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_name { color: rgb(171, 171, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_oldfile { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_newfile { color: rgb(171, 171, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_difflines { color: rgb(255, 255, 0); font-w=
eight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_property { color: rgb(255, 255, 0); font-we=
ight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_value { color: rgb(171, 171, 0); font-weigh=
t: bold; font-style: normal; }

.sh_desert { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_desert .sh_sourceCode { background-color: rgb(175, 148, 126); color: rg=
b(255, 253, 236); font-weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_keyword { color: rgb(254, 248, 188); font-wei=
ght: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_type { color: rgb(254, 248, 188); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_string { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_regexp { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_specialchar { color: rgb(246, 246, 71); font-=
weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_comment { color: rgb(160, 0, 0); font-weight:=
 normal; font-style: italic; }

.sh_desert .sh_sourceCode .sh_number { color: rgb(62, 63, 37); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_preproc { color: rgb(131, 57, 20); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_symbol { color: rgb(102, 87, 79); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_function { color: rgb(243, 210, 102); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_cbracket { color: rgb(102, 87, 79); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_url { color: rgb(246, 246, 71); font-weight: =
normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_date { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_time { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_file { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_ip { color: rgb(246, 246, 71); font-weight: n=
ormal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_name { color: rgb(246, 246, 71); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_oldfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_newfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_difflines { color: rgb(254, 248, 188); font-w=
eight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_property { color: rgb(254, 248, 188); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_value { color: rgb(246, 246, 71); font-weight=
: normal; font-style: normal; }

.sh_dull { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_dull .sh_sourceCode { background-color: rgb(191, 191, 191); color: rgb(=
101, 101, 101); font-weight: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_keyword { color: rgb(53, 53, 53); font-weight: =
bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_type { color: rgb(50, 65, 198); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_string { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_regexp { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_specialchar { color: rgb(0, 85, 153); font-weig=
ht: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_comment { color: rgb(209, 29, 32); font-weight:=
 normal; font-style: italic; }

.sh_dull .sh_sourceCode .sh_number { color: rgb(22, 147, 13); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_preproc { color: rgb(0, 0, 51); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_symbol { color: rgb(34, 34, 34); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_function { color: rgb(56, 37, 92); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_cbracket { color: rgb(34, 34, 34); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_url { color: rgb(0, 85, 153); font-weight: norm=
al; font-style: normal; }

.sh_dull .sh_sourceCode .sh_date { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_time { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_file { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_ip { color: rgb(0, 85, 153); font-weight: norma=
l; font-style: normal; }

.sh_dull .sh_sourceCode .sh_name { color: rgb(0, 85, 153); font-weight: nor=
mal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_variable { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_oldfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_newfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_difflines { color: rgb(53, 53, 53); font-weight=
: bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_selector { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_property { color: rgb(53, 53, 53); font-weight:=
 bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_value { color: rgb(0, 85, 153); font-weight: no=
rmal; font-style: normal; }

.sh_easter { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_easter .sh_sourceCode { background-color: rgb(255, 255, 128); color: rg=
b(44, 123, 52); font-weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_keyword { color: rgb(29, 69, 214); font-weigh=
t: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_type { color: rgb(237, 15, 85); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_string { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_regexp { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_specialchar { color: rgb(202, 75, 227); font-=
weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_comment { color: rgb(36, 200, 21); font-weigh=
t: normal; font-style: italic; }

.sh_easter .sh_sourceCode .sh_number { color: rgb(225, 26, 112); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_preproc { color: rgb(21, 131, 177); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_symbol { color: rgb(250, 71, 0); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_function { color: rgb(29, 69, 214); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_cbracket { color: rgb(250, 71, 0); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_url { color: rgb(202, 75, 227); font-weight: =
normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_date { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_time { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_file { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_ip { color: rgb(202, 75, 227); font-weight: n=
ormal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_name { color: rgb(202, 75, 227); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_variable { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_oldfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_newfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_difflines { color: rgb(29, 69, 214); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_selector { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_property { color: rgb(29, 69, 214); font-weig=
ht: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_value { color: rgb(202, 75, 227); font-weight=
: normal; font-style: normal; }

.sh_emacs { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_emacs .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_keyword { color: rgb(156, 32, 238); font-weigh=
t: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_type { color: rgb(32, 137, 32); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_string { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_regexp { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_specialchar { color: rgb(189, 141, 139); font-=
weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_comment { color: rgb(172, 32, 32); font-weight=
: normal; font-style: italic; }

.sh_emacs .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_url { color: rgb(189, 141, 139); font-weight: =
normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_date { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_time { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_file { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_ip { color: rgb(189, 141, 139); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_name { color: rgb(189, 141, 139); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_oldfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_newfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_difflines { color: rgb(156, 32, 238); font-wei=
ght: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_property { color: rgb(156, 32, 238); font-weig=
ht: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_value { color: rgb(189, 141, 139); font-weight=
: normal; font-style: normal; }

.sh_golden { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_golden .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(221,=
 187, 0); font-weight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_keyword { color: rgb(255, 237, 138); font-wei=
ght: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_type { color: rgb(255, 237, 138); font-weight=
: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_comment { color: rgb(151, 131, 69); font-weig=
ht: normal; font-style: italic; }

.sh_golden .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_preproc { color: rgb(255, 221, 170); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_symbol { color: rgb(171, 171, 171); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_function { color: rgb(221, 187, 0); font-weig=
ht: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_cbracket { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_date { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_time { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_file { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_golden .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_variable { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_difflines { color: rgb(255, 237, 138); font-w=
eight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_selector { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_property { color: rgb(255, 237, 138); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_greenlcd { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_greenlcd .sh_sourceCode { background-color: rgb(0, 52, 0); color: rgb(0=
, 187, 0); font-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_keyword { color: rgb(0, 237, 0); font-weigh=
t: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_type { color: rgb(0, 237, 0); font-weight: =
normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_string { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_regexp { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_specialchar { color: rgb(223, 223, 223); fo=
nt-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_greenlcd .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_symbol { color: rgb(47, 231, 169); font-wei=
ght: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_function { color: rgb(192, 255, 115); font-=
weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_cbracket { color: rgb(47, 231, 169); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_url { color: rgb(223, 223, 223); font-weigh=
t: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_date { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_time { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_file { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_ip { color: rgb(223, 223, 223); font-weight=
: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_name { color: rgb(223, 223, 223); font-weig=
ht: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_variable { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_oldfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_newfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_difflines { color: rgb(0, 237, 0); font-wei=
ght: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_selector { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_property { color: rgb(0, 237, 0); font-weig=
ht: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_value { color: rgb(223, 223, 223); font-wei=
ght: normal; font-style: normal; }

.sh_ide-anjuta { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-anjuta .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_keyword { color: rgb(0, 0, 128); font-wei=
ght: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_type { color: rgb(0, 0, 128); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_string { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_regexp { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_specialchar { color: rgb(221, 187, 0); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-anjuta .sh_sourceCode .sh_number { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_preproc { color: rgb(103, 128, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_url { color: rgb(221, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_date { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_time { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_file { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_ip { color: rgb(221, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_name { color: rgb(221, 187, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_oldfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_newfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_difflines { color: rgb(0, 0, 128); font-w=
eight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_property { color: rgb(0, 0, 128); font-we=
ight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_value { color: rgb(221, 187, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-codewarrior { background: none; padding: 0px; margin: 0px; border: =
0px none; }

.sh_ide-codewarrior .sh_sourceCode { background-color: rgb(255, 255, 255); =
color: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_keyword { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_type { color: rgb(76, 115, 166); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_string { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_regexp { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_specialchar { color: rgb(102, 102, 1=
02); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_comment { color: rgb(179, 0, 0); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_preproc { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_url { color: rgb(102, 102, 102); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_date { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_time { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_file { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_ip { color: rgb(102, 102, 102); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_name { color: rgb(102, 102, 102); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_variable { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_oldfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_newfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_difflines { color: rgb(0, 0, 179); f=
ont-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_selector { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_property { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_value { color: rgb(102, 102, 102); f=
ont-weight: normal; font-style: normal; }

.sh_ide-devcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-devcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_comment { color: rgb(0, 0, 128); font-wei=
ght: normal; font-style: italic; }

.sh_ide-devcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-wei=
ght: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse { background: none; padding: 0px; margin: 0px; border: 0px =
none; }

.sh_ide-eclipse .sh_sourceCode { background-color: rgb(255, 255, 255); colo=
r: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_keyword { color: rgb(127, 0, 85); font-w=
eight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_type { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_string { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_regexp { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_comment { color: rgb(113, 122, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_preproc { color: rgb(63, 95, 191); font-=
weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_url { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_date { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_time { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_file { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_ip { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_name { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_variable { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_newfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_difflines { color: rgb(127, 0, 85); font=
-weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_selector { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_property { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_value { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-kdev { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_ide-kdev .sh_sourceCode { background-color: rgb(255, 255, 255); color: =
rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_keyword { color: rgb(96, 0, 0); font-weight=
: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_type { color: rgb(96, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: italic; }

.sh_ide-kdev .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_date { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_time { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_file { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_variable { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_difflines { color: rgb(96, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_selector { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_property { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-msvcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-msvcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_comment { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-msvcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_preproc { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-w=
eight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_kwrite .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_type { color: rgb(131, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-w=
eight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_comment { color: rgb(131, 129, 131); font-wei=
ght: normal; font-style: italic; }

.sh_kwrite .sh_sourceCode .sh_number { color: rgb(41, 40, 255); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_preproc { color: rgb(0, 130, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_function { color: rgb(1, 1, 129); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_matlab .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_string { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_regexp { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_url { color: rgb(128, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_ip { color: rgb(128, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_name { color: rgb(128, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_newfile { color: rgb(128, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_value { color: rgb(128, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_navy { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_navy .sh_sourceCode { background-color: rgb(0, 0, 53); color: rgb(0, 13=
9, 255); font-weight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_keyword { color: rgb(248, 197, 11); font-weight=
: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_type { color: rgb(225, 231, 47); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_comment { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: italic; }

.sh_navy .sh_sourceCode .sh_number { color: rgb(248, 127, 244); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_preproc { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_symbol { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_cbracket { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_date { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_time { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_file { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_variable { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_difflines { color: rgb(248, 197, 11); font-weig=
ht: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_selector { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_property { color: rgb(248, 197, 11); font-weigh=
t: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_nedit { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_nedit .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_type { color: rgb(165, 42, 42); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_string { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_regexp { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_specialchar { color: rgb(46, 139, 87); font-we=
ight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: italic; }

.sh_nedit .sh_sourceCode .sh_number { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_preproc { color: rgb(39, 64, 139); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_url { color: rgb(0, 100, 0); font-weight: norm=
al; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_ip { color: rgb(0, 100, 0); font-weight: norma=
l; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_name { color: rgb(0, 100, 0); font-weight: nor=
mal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_variable { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_oldfile { color: rgb(46, 139, 87); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_newfile { color: rgb(0, 100, 0); font-weight: =
normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_selector { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_value { color: rgb(0, 100, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_neon .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, 2=
55, 255); font-weight: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_keyword { color: rgb(0, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_type { color: rgb(255, 255, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_string { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_regexp { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_specialchar { color: rgb(205, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: n=
ormal; font-style: italic; }

.sh_neon .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_preproc { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_symbol { color: rgb(238, 88, 150); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_cbracket { color: rgb(238, 88, 150); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_url { color: rgb(205, 0, 255); font-weight: nor=
mal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_date { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_time { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_file { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_ip { color: rgb(205, 0, 255); font-weight: norm=
al; font-style: normal; }

.sh_neon .sh_sourceCode .sh_name { color: rgb(205, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_variable { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_oldfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_newfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_difflines { color: rgb(0, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_selector { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_property { color: rgb(0, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_value { color: rgb(205, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_night .sh_sourceCode { background-color: rgb(0, 0, 68); color: rgb(221,=
 0, 255); font-weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_type { color: rgb(241, 21, 124); font-weight: =
bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_specialchar { color: rgb(130, 214, 109); font-=
weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_number { color: rgb(142, 225, 25); font-weight=
: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_preproc { color: rgb(0, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_symbol { color: rgb(231, 238, 92); font-weight=
: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_function { color: rgb(255, 6, 205); font-weigh=
t: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_cbracket { color: rgb(231, 238, 92); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_variable { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_oldfile { color: rgb(130, 214, 109); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_selector { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-wei=
ght: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_pablo .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, =
255, 255); font-weight: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_keyword { color: rgb(192, 192, 0); font-weight=
: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_type { color: rgb(0, 192, 0); font-weight: bol=
d; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_string { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_regexp { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_comment { color: rgb(128, 128, 128); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_number { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_preproc { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_function { color: rgb(255, 34, 185); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_url { color: rgb(0, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_date { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_time { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_file { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_ip { color: rgb(0, 255, 255); font-weight: nor=
mal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_name { color: rgb(0, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_variable { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_newfile { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_difflines { color: rgb(192, 192, 0); font-weig=
ht: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_selector { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_property { color: rgb(192, 192, 0); font-weigh=
t: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_value { color: rgb(0, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_peachpuff { background: none; padding: 0px; margin: 0px; border: 0px no=
ne; }

.sh_peachpuff .sh_sourceCode { background-color: rgb(255, 218, 185); color:=
 rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-we=
ight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_type { color: rgb(46, 139, 87); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_string { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_regexp { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_specialchar { color: rgb(106, 90, 205); fo=
nt-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_comment { color: rgb(64, 96, 144); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_number { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_preproc { color: rgb(205, 0, 205); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_function { color: rgb(82, 28, 199); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_url { color: rgb(192, 0, 88); font-weight:=
 normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_ip { color: rgb(192, 0, 88); font-weight: =
normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_name { color: rgb(192, 0, 88); font-weight=
: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_variable { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_oldfile { color: rgb(106, 90, 205); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_newfile { color: rgb(192, 0, 88); font-wei=
ght: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-=
weight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_selector { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_value { color: rgb(192, 0, 88); font-weigh=
t: normal; font-style: normal; }

.sh_print { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_print .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-weig=
ht: normal; font-style: italic; }

.sh_print .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_print .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_print .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_print .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_print .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_rand01 { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_rand01 .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(18, 27, 40); font-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_keyword { color: rgb(10, 127, 109); font-weig=
ht: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_type { color: rgb(196, 38, 56); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_string { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_regexp { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_specialchar { color: rgb(167, 100, 203); font=
-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-wei=
ght: normal; font-style: italic; }

.sh_rand01 .sh_sourceCode .sh_number { color: rgb(13, 163, 68); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_preproc { color: rgb(98, 10, 198); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_symbol { color: rgb(0, 0, 222); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 222); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_url { color: rgb(43, 131, 186); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_date { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_time { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_file { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_ip { color: rgb(43, 131, 186); font-weight: n=
ormal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_name { color: rgb(43, 131, 186); font-weight:=
 normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_variable { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_oldfile { color: rgb(167, 100, 203); font-wei=
ght: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_newfile { color: rgb(43, 131, 186); font-weig=
ht: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_difflines { color: rgb(10, 127, 109); font-we=
ight: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_selector { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_property { color: rgb(10, 127, 109); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_value { color: rgb(43, 131, 186); font-weight=
: normal; font-style: normal; }

.sh_the { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_the .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_type { color: rgb(136, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_string { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_regexp { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: no=
rmal; font-style: italic; }

.sh_the .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_preproc { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_url { color: rgb(0, 0, 136); font-weight: normal=
; font-style: normal; }

.sh_the .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_ip { color: rgb(0, 0, 136); font-weight: normal;=
 font-style: normal; }

.sh_the .sh_sourceCode .sh_name { color: rgb(0, 0, 136); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_the .sh_sourceCode .sh_newfile { color: rgb(0, 0, 136); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_value { color: rgb(0, 0, 136); font-weight: norm=
al; font-style: normal; }

.sh_typical { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_typical .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_specialchar { color: rgb(196, 45, 168); font=
-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-we=
ight: normal; font-style: italic; }

.sh_typical .sh_sourceCode .sh_number { color: rgb(169, 0, 169); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_preproc { color: rgb(0, 184, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_variable { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_oldfile { color: rgb(196, 45, 168); font-wei=
ght: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weig=
ht: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_selector { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weigh=
t: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vampire { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_vampire .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_type { color: rgb(243, 94, 30); font-weight:=
 bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_string { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_regexp { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: italic; }

.sh_vampire .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_preproc { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_symbol { color: rgb(243, 230, 81); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_function { color: rgb(123, 199, 16); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_cbracket { color: rgb(243, 230, 81); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_url { color: rgb(187, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_ip { color: rgb(187, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_name { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_variable { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_newfile { color: rgb(187, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_selector { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_value { color: rgb(187, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_vim-dark { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_vim-dark .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_vim { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_vim .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); font-wei=
ght: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_vim .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_vim .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_whatis { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_whatis .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(0, 2=
55, 0); font-weight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_keyword { color: rgb(250, 90, 3); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_string { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_regexp { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_specialchar { color: rgb(255, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_number { color: rgb(255, 255, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_symbol { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_function { color: rgb(231, 33, 211); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_cbracket { color: rgb(0, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_url { color: rgb(255, 187, 0); font-weight: n=
ormal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_date { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_time { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_file { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_ip { color: rgb(255, 187, 0); font-weight: no=
rmal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_name { color: rgb(255, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_variable { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_oldfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_newfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_difflines { color: rgb(250, 90, 3); font-weig=
ht: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_selector { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_property { color: rgb(250, 90, 3); font-weigh=
t: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_value { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_whitengrey .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(105, 105, 105); font-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_keyword { color: rgb(105, 105, 105); font=
-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_type { color: rgb(105, 105, 105); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_string { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_regexp { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_specialchar { color: rgb(0, 136, 0); font=
-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_comment { color: rgb(19, 38, 162); font-w=
eight: normal; font-style: italic; }

.sh_whitengrey .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_preproc { color: rgb(71, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_url { color: rgb(0, 136, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_date { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_time { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_file { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_ip { color: rgb(0, 136, 0); font-weight: =
normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_name { color: rgb(0, 136, 0); font-weight=
: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_variable { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_oldfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_newfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_difflines { color: rgb(105, 105, 105); fo=
nt-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_selector { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_property { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_value { color: rgb(0, 136, 0); font-weigh=
t: normal; font-style: normal; }

.sh_zellner { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_zellner .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_string { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_regexp { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-=
weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_preproc { color: rgb(160, 32, 240); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_url { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_ip { color: rgb(255, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_name { color: rgb(255, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_variable { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_newfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-we=
ight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_selector { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_value { color: rgb(255, 0, 255); font-weight=
: normal; font-style: normal; }

.snippet-wrap { position: relative; }

:first-child + html .snippet-wrap { display: inline-block; }

* html .snippet-wrap { display: inline-block; }

.snippet-reveal { text-decoration: underline; }

.snippet-wrap .snippet-menu, .snippet-wrap .snippet-hide { position: absolu=
te; top: 10px; right: 15px; font-size: 0.9em; z-index: 1; background-color:=
 transparent; }

.snippet-wrap .snippet-hide { top: auto; bottom: 10px; }

:first-child + html .snippet-wrap .snippet-hide { bottom: 25px; }

* html .snippet-wrap .snippet-hide { bottom: 25px; }

.snippet-wrap .snippet-menu pre, .snippet-wrap .snippet-hide pre { backgrou=
nd-color: transparent; margin: 0px; padding: 0px; }

.snippet-wrap .snippet-menu a, .snippet-wrap .snippet-hide a { padding: 0px=
 5px; text-decoration: underline; }

.snippet-wrap pre.sh_sourceCode { padding: 1em; line-height: 1.8em; overflo=
w: auto; position: relative; border-radius: 15px; box-shadow: rgb(0, 0, 0) =
2px 2px 5px; }

.snippet-wrap pre.snippet-textonly { padding: 2em; }

:first-child + html .snippet-wrap pre.snippet-formatted { padding: 2em 1em;=
 }

* html .snippet-wrap pre.snippet-formatted { padding: 2em 1em; }

.snippet-reveal pre.sh_sourceCode { padding: 0.5em 1em; text-align: right; =
}

.snippet-wrap .snippet-num li { padding-left: 1.5em; }

.snippet-wrap .snippet-no-num { list-style: none; padding: 0.6em 1em; margi=
n: 0px; }

.snippet-wrap .snippet-no-num li { list-style: none; padding-left: 0px; }

.snippet-wrap .snippet-num { margin: 1em 0px 1em 1em; padding-left: 3em; }

.snippet-wrap .snippet-num li { list-style: decimal-leading-zero outside no=
ne; }

.snippet-wrap .snippet-no-num li.box { padding: 0px 6px; margin-left: -6px;=
 }

.snippet-wrap .snippet-num li.box { border: 1px solid; list-style-position:=
 inside; margin-left: -3em; padding-left: 6px; }

:first-child + html .snippet-wrap .snippet-num li.box { margin-left: -2.4em=
; }

* html .snippet-wrap .snippet-num li.box { margin-left: -2.4em; }

.snippet-wrap li.box-top { border-width: 1px 1px 0px !important; }

.snippet-wrap li.box-bot { border-width: 0px 1px 1px !important; }

.snippet-wrap li.box-mid { border-width: 0px 1px !important; }

.snippet-wrap .snippet-num li .box-sp { width: 18px; display: inline-block;=
 }

:first-child + html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

* html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

.snippet-wrap .snippet-no-num li.box { border: 1px solid; }

.snippet-wrap .snippet-no-num li .box-sp { display: none; }
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image001.png

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
1UKF+HjptpevUnMrnRUYeWlpyikoN4OjUvm5eSpOD9Ocwe/oi/VejvvLWfVk6qixpU0NZZnG1L+t
23fvK73YdMiSbCWnZKuyrt50xnpd3GxM2M23VFpa4CwxxqXBSqSq8kJlmOeUmjqoMxobAyT2vrdp
xzums5nB0WFM9Gyj7YSF6GFchE6YwfvJonOqbalWdtpjlVSa60w7lGbGm+d7yT8sRulphaqoKlZm
SqbKTV2X5WcpI7NANXU1TpnyiiqcZ+N7rzHCMystRUXlXStlqssKlZaarbKqUmWbv5WG0OsrcnTf
lO2O0SqLa1vVVF2imAAvo9mFKLuc9xtYuVGjMxumadKKI6adQ5XFkmOTr6rCdAWa/uEdGKokMyDK
nf5h2t30j+JK0z8aGwy5R8v7Dv0jThmmf1SZOsM15nNsnRauWKFxn0/VnYwqddQVyf+euZdPoBLT
spVbWqmKoiylZ+U77qbcuEiFhD/S40fhuuf7QAEP7ssvKEJ5hUV6nJxm+n6zGsrzFHD3jnzD400d
tpu6fayUtHzThs3KeRShO3e8nfarLkzSzXPnnB08z52/pPj0fCVH39ftO/eUmlfpvA+QlxKte0bb
DAh4YATsA2WXsFpHSr+3S0MMmTzOy1W6yRM7nAZEpKnJWBwV+TlKN21RbrTIjMfZpqx1xjrMVk5+
sWqNEGstN1rj0gVaaoTf6In7VGYUkvRwP9OvvBX5MFUFBWVixV9e+iOl5JU5q6lqynIV5ntXd/wD
lZCYZdrO9MuKAqU+SlFlfaNKGBvZxapvqFKGqfccU77WpipFPzDjwuuu0k1bFaXF6aFRvNraG/U4
IUaPjYLSWJkjP9PudwPDVFzDMt0ueVDXaOot+YaxjFbLP/6x4qLC5O9r+qwZ46Gx6WowClDR44dO
cKGEzDJn6XhBWqx8ffxMXRmr1MiY7LImVeXGOxHv/EMhoeau8eQkVmRV63FMoPN75GNWUrm2MTd9
qN6Mm1jz3AdGqeScB8ZCLzfjhxWPddUVyspIVWE5iybsPbsSrw0Upwdp7+ITyjD9k6XHXWPBnlNr
CKNWUfdv6PKlSNW3dynLrPRqMvX3MNBbd7zDVWaexTs+xenRTrmDozPV1N6i0lwjvx7nGXlWa+SY
aTcvbyVnl6uZVY+N1UoM9ZPX3SAVVZvrjTJKGxVXmjYsTHHKERSXbWRYq+rrKpWZnKSMPBaqMKdY
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
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image002.png

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
RU5ErkJggg==
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image003.png

iVBORw0KGgoAAAANSUhEUgAAAYMAAAB1CAYAAACs2I2iAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAHjpSURBVHhe7f1leFZZtjUM8+N73u/Pe53nyNPn
Od2nj7ae6u5yF6jC3d0lSIAACR5cgzsBkhAgBOJGhIQE4glxd3d31/HOse9suEkFipLW2iPXvLLv
rUvnmHOutfca1tTUhObmZnR2dqKxsRF5ebnIzc1F3o9EmNfCwgKUlpaipKQE+fn5UgZ5mmiiiSY/
KhlGIiAJJCUlws/PFyGhYSLhPxqJiHwKNzd3XL50CZaWlgjw90dERARCQ0MRHByMoKAgTTTRRJO/
WqEeex1dpngGEeHheBIUgtTMXNS1dKO+tQd1PxJpbO9DUXkNklIzEJeYAv9Hj5SCy8nJRltbK7q6
utDe3q6JJppo8meT7u5uJXqjv4+/ub+jo+OF/d9WOjq60NnVg2FRT58iMCQcJbWtKKvvRFldMyrr
mlDxEqmsb0JpbTNyyxuQU1Yvwv9/zVKPgqpmlDV0orimFRl5JSLF8PUPwEMfH8V9YmG3tLQoHpQm
mmiiyZ9SWltFN5eVoq6uTtFDDQ0NA//rUVpaMqCbmr52HYW6KzIyUol2qEMBL4g4A3W1FagoSccw
e3t7RQlmljYgJb8SLqG5sHhSBquXiMXjMriF5SKtoBqZJXXIKK79MwmfrcpQx18m+tfprk0fkIyS
emSXNymSX9GE5KxCPHzoi9iYaFRXV2uEoIkmmnwroeKmMmeEQQ3Jq0JFTdHfN1ioc9LSUnDu3Al4
eDjJPZrEG+iRe7bBz88Tp08fQ2JinGLhD3U9CeDJkycICAhQvIjBx1vaupGVYI/k0LMYFhGThLTi
eqQX1SAgoRSfGLnhrcXX8eaiG3hrkKj7hhs/QEhqOdILa5CUV/2CpBTVy/0alHum5FcjcdDxH0p4
3xTlOXXyu+prx18myfk1SJU0JhXUIllE3cft5II6pBTWyb2rlPunFTciIaMQfo+D4e/vj4ryco0Q
NNHkRyJU3k0vEeWYWNVDXacvVPY5OTl48OABampq0NbWplzL/wxHh4WFDW2xDwiJ5N69W3B3d4Od
3W04ONxDXFw8XFwccfeuFXx8vGFufgFZWZlD6ibem+MBJISXkUF6zF3U1+RjWH5lC6IyK5CUXwWP
mHK8vfIeTt1wRGhGPgKT8xCYkoeg1Hz4xmbhcXIOjl2+j3fXOMI3oRKJuZWIyapQJDpblG1JI6IT
MuATEgev8AxEZlUjQe+cH05EgZcXwea0OY6f90dkeSPihjzvRYnPq8WT6AwcNTuFE6fOwSsoBikl
zYjJroKljT0OHj4q/x2QWFCvnB8t5RKfV4O00iaExSQLE/uhokIjBE00+VsWKmsq7ri4OCTExyMx
IeFrEhMdrcw8fJUu4DGec/LkSWzbtk2U+r1nEYbAwEDs2bMHu3fvVgiB5DDUPUgGPj7uQgQ2yMjI
kHvYipdwSoiAv9OFFByEIGxQLoYqvY/BBPVNZNDa1oXUmHuoKs/CsPSiWoSllinKzzmyBO+suA1r
r0jk1nUgPqMCUcklCE0oQFNHHwg79yC8s9IWnjGloizLEZ5WJlKBOCGDh0/uYumEifjoq0kYPmEB
jC2F+dKq8DSd5/yQUomEilycMdyK1Ub3ESRk8HTI816U6Oxa2HsFw/zKZTQ3NeK+vSPuuPrjmvV9
JMTFIj83C4eOnkR0Tt3z66RsWD6xubUIjiYh+CoFz0oaXLCaaKLJX7+QDCqrqhAdHoGipCRkx8Yi
R/SDKgWJCUiNikJaWtpL9QCVMpW+t7e3ovAtLCxw9OhRUeTncO3aNRw8eBDXr1/H4cOHld8vC0Or
xHTnzh3cvGmleAChoSFCVLFCEPflvjeU47yWZKG+KqBe/zpkkBRth9ISIYOEvCo8SSwWxVcKu5AC
vL/yFm55R4onUAwrh6e4dDsQp68/RHV9m0IG912e4L1VNnCJKBQlWYrApBKEZNfgyYMbmPT+HzDT
7AkCM5sRFREIMysX3AstFQ+hFtH5jYjJE88htwahQjCBiaUIF6X7NLtOt1/IJDipSDyRCjzN1Z0b
lVOFYElbUHIFIvMalH0x+fWISK9CVFE2zhjtxjpjezwqFOWdXo0oHhd5KhZ9UFKxpO1FYWjLMywV
161uo7qqEn19vbCxuYM4qWwiUArM8r67nFfxtWsDJR0RmVJWkUnwpYeghYw00eRvUlQyiBfrPz08
EhEePnjq5atIpOdDxPk9RiqPifJ9lVHI+9TX1+P27duKZ3DlyhUcP34cBw4cULZJCCSIgoKCV5BK
o6LEHz16hBMnjgu5eMo1x3Dq1AkhkgMK2VDhe3p6YuvWrcp/Plf1EF6HDOIjHFEo+nQYQyF+MYUI
EmVn8zgHH626CRu/aHhHF8HaNQ43XWJw9W4oTE+6wO5BNFx8IvDh6tuwD85FYEIxHsWXIDwlAwc3
L8DwpdfxKLcFweJJ+CeUIUQUe0hmKZwdLDFvwnSMnjgdU5ech218pSj+GJgZH8LmrduV/bNNbeAe
V4+g4CfYumExxk2Zidlrr8MxpRoh8RHYuWQxRk2cgdETDHHYMRkR5eJ+bdiJ1ZuFDMrr4eZwC4tn
LMDEGQux+XqYEFwZ/OMK8ShWXwoQmFwOt+BUXDS3FAu/VCEBgoV95bazHK8YdM1z8YspQFBKOR6F
JTwLGWkegiaa/G0JlWkVPQOx/hOeBCPS2R1P3TwViXR9gBghhNiICGRkZn5j/1fDP2fOnIGJiQnO
nj2L8+fPK0RA5Z2VlaUo7MHXqcL7U5Ez1ESlfvr0GZiZmSn32LdvHy5evIhbt24ppHLhwgXlvky7
aqh+Exm0tXciOswZOflCBuFi3XtG5omyK8BN3wx8ssoC9oEJyKzsQkx6DaLTqhGZVI6gmCJkFTfD
1TcKHxtY4W5AlqIcvYQ0giOjscVgKb4y9cKTjFL4PM2Dl8jDuBK4PLDAuA++wrzdd2Fu44AtotQ/
X3QBDilBmP3rX+PN+adw2eo8Rn00Gca3gnF623q8895sbLf2hqVbCvySY2CycCI+m7IbZrd8cO7Y
Xnz+xQocCYzGCSNTrDFxwL2Au5j6/jjM3HQc641W4ZMPP8NW2ywExEn6BtKiio8Qn09sCY6cuoSc
7MwBKoAU6G3ccPSHX0L5167RF08REqBPcJwSMqrUCEETTf6mRCGD6mpEicKP9X2EIDtnBDu4KhJk
74JwFw/EBAe/FhnwXgTDRGvXrhXr/oRY9aewc+dObN++XZltxJlA/D/U9SSTS5cuKbrG1dVVuf7I
kSPKPoacDh06pISazM3NFY+Dz6E3wufy+tchg8gQN6Rn52AYPQLX0BxF0V3zTMbw1Tdg7R6IuKxS
xKUWIi6tSKQY8enFSM4uxy0HfwxfY4mbD9MUEnELz4dfVAJ2rFuGkWvuwiu9Gp5h2XCNKBLvoBTX
jqzHb2aehXNqLZ6k1cHZ8Tqmj52FIw9DsPKTqVhvkYTgnAKYLl6Mdea+uG5xCRPGTMU841M4fCsc
Hm438fGoZdjulIHA9DoEiBdiPONLrLzmhUMb92HNlvu4dH4j/v7n72H4lNkYKR7I5xMXYat1Anyi
JX1hOc/EPTwXTsEZuGh5DwkJ8UolxURFKgq9v68PtvftcdM1CO4RL173okjeQrPhFVUEzyex8PPV
EUJLi0YImmjytyAqGTwNC0OUpzee2Dog0M5RkSf3HRDq4IKogIBvJAPeh4qeM4nWrVv3bMCYHgEt
eENDQ8WaZ8z/ZfchGXh4uAt5bFWIgO898X7GxsaKl6F6Grt27VK8j4qKihfu9U1k0C5kEBbkgeSM
XAzzjy2E/ZNMRcFd90zCcMPbGG94BWPWXsY4w6uYsN4c40XGyb7Rsm+s7Ptygw2sfFLgEpINh8As
uEQVwvraGYz4/VeipKPgFlcN70ePcfiGGw6f2IO3P1iIg+55Qg5FuHz6AL6ccwSWYQFY9P4UGF6L
wYP4dGxbtAQGJ+1xwzMS9yKqcX7/KvzuN59g1z0fzB45ClNNH8h9a+Hl54bJE1fC1D0Y+9fuxLKN
d3Heaj8+HG6IqxHN8Ber3+KmG6xE6TsFZUr6notzWB4u3H0Im9u3FCJgAZmaXcG5q5aora5Ea3MD
9h4+Jeflv3DdUGIXmAHX8AK4BUTrCKGyQhtD0ESTvwFRyIBhoqdPEev/GI/FMwh0clPkiaMrQt08
EStE8SoyYMyexx4/fozVq1fD1NRUCRNx7IDbRkZG2Lt3LwwMDJSBZH1rfvB9mpqalbB0enq6orf4
zgDJhZ7AsWPHlBARiYXeAXWQvh76ZjLoQNATLzH28zGMIR2bR2mwDUjHHfl/1PYpTK4+gdGlALy3
6jZ+PvUc/lXkg9U22HL5sRwLxPF7UbDxT8PdABHlf5YoxzScPWKCN9//FO+O4IyiWVhw7AFsAmNg
unEZ3vrdCHwyfCTe+Xg5Nt5NgGOID+Z/MgvrrkbB6WkKTJauwJrzvrhsJQQ0ajw+/WoMPltyBNcC
8nDD6hS+evMTvPvFeHzwzhhM2uWIu/Gp2CNksHjjPdhERWHrkun47Xvj8OGnozFv5z1YPsnCPcmT
kr4BuR+YDXOnYOw23YNLly/jjIUT7MOKcN09ChfMrXD6pBn2m13E/aDcF657mbC87IJy4OQbqVRW
lRACmXyoStVEE03+OoT9lwPIDBPlJyQgMzoKWdHRAxKF3LhYJAtRvGo2EYXH+PYvw0MqIaSmpqKs
rExR3KtWrcLy5cuVmUJU4Oqg72DhfipyTh31FcOTip+eAENNJIUtW7Yo4wd8DomF16g66JvIgO9B
+D/yREhMKoa5h+WINZ6EG15JsPZNxXnneCw86I6Zu+5h7OY7+MrQSuSmsj1z530sPuyBS24Jcm6K
co2FCP/f8BEy8U/FuTveOGjuigOW/rjimYpb/hm4+TAWJ2+444C5G47djoCV7LP0iscl+zBc8UiE
hU8SrjqF47JHMiwexOCUlRsOXvPEaRdJ08NUWItSv2zzUHff649w1Uv2+SXjqvNTXHKOhaWf3O9B
JI5ed8OBax44754CK+9k3PDWpe+ZcJ9XIi46hOL03cdyXJ4nHs5N33RcdIqQfQEwd4tRznvhupeJ
3J/elLVfOmy9whVCyMvJUuJ/GiFooslfp7DvMnQTGxODhLi4Id8z4OAyQzavigZQiVOB0zvYv3+/
MvVTVer8tMRlMUj5cczB1vxQQmLhl5U5zrBhwwZs3rxZIQRnZ2dl7IAEsWPHDoUcGCpS7/fNnkE7
oqLC4eB4H8OcgrMUhaYo9AG57pmoiKUoRYaDKNzW7X/xXH257iXnimK2fpSpKEjLAWV5wzsVN7lP
5KZfmqJIr3slw9I37dk5Fg912ze8eQ+eSxJJkfMS5d6SDvW+j3hfpoXXpMLSRxQ8t33SBo4LMXDf
oLTpi6UPr0uV7efnkRQsJQ0W8nz9c19HWC5WQih3PSNgY++uzANubGxQvASdm/fNbypqookmf1ny
yn77mv2a51CRU/QVPglH3f+6hiOteM56XLZsmeIN0DPp6+tDbW2tMm4wb948XL169QVj9JvIgKLo
KPk/zO5JhijcF5UbLV7FOh5SXjxXE50o5ClkcksIycb1Mby9PMUlTJZCZsXoXkChaMSgiSY/Phmq
3ytK+FvqAyp3fl4/JSVF2eY+Wvf0BhiZIDGQYPTP59vO9E5eRgYUpmMYY99DKTdNvr2QVOnx0JOy
cIuEjZM3nF3d4Ov3CIX5uaiqLFcKnpVHr0ETTTTR5NsK0dvb+8I+Kn2C//X305sgQVC4rX9ssAy7
NRD71+SHFQuGoRhWexAPC9cw3Lrvgjv27ogID0NOVjqyM9M00UQTTf6okpWRhtzsTEW4PdQ5qgxT
BkFFeV0TxaXJDy0sV0oyzEWuPpBtu4cwt30g4qWJJppo8hcjwxQrVgjByofhDU3+2GL5MF0TTTTR
5C9Ohl12j4d/TD7q6htQUV2niSaaaKLJj1CGXXKLR1BCAbo7WtHCWS9/dOG0qlb0oh99XW1oaWoc
4pwfQuS+7Z1Afzc6WvhZ16HOGVpaW5rR1tqiSOsQx39IaW3hc5qfPYfPbpX0Dj7vhxA+i/cf6tjr
SHNTM7r7utElbaWjswdAN9qU+hz6/KFFv/6lzX2r+ud0PF15DX1cLc8Xy1S3n+X64nXPz/1+5fKn
kMFp7ezulbbdhfYWluW3aONDlMMr939L4T3Ucm9uakJ7Z7e0kx60v9BO2De7lPS3yTkd3X3o7+mQ
677eFl7dZuVZr6i/Z2X2qnzJMV25DjpH2a/ue7Fs+Pn7to5u9PdJvlqe54v5beuQfEmNdOjtfy6D
7yP12NMH9HWiVe757frRDy8KGQTGF6Cj7eUvPTS3timZGOrYt5bmNnQ158Lh1AlYeyejob1dKdwh
zx0kTaJEOG2Kc2KHOq4vTa0daEh7hBPmTkirrFca6FDnDZbmljalcTTU16OhUQpJGtTrPO+7iTQI
6cycftrQoPvNbxy9blq/nbDjtKJN6vm75acFHV1leGzpgMCnGUgKsMHJ047IbZEOLZ146GtelJbW
dklDO7oaM3HvuBnuPEpHo9Q/P9M71PlfFyknKSMqgK9fI/vbO6TjNyl1V9+gqztd22pAo3Q8tuHn
eWfZsywa5FxJW5sYJn+Ucv8hRPKitHtdWtva6hDnboFTF9yRU5MFV6mH5OrXbeP65fJcmpp1CvH7
tnXeR5cOUYxtTcgJtsPxI7eRWtepEALPaZY2UJvkjePX3FEgdZnkeRm3XIJQ0dT1PF1SX23SNtqV
ehlK97Ad0JiQMmFfHfShN/YrkgD3N3Fb8qZ/nMLPPFDps71Qt6jnUN91tIvOk/ur6aEBo7aP1o52
FEa74qblHaRVkZB5jq5dFse44cT+64irbJX9X6+P5/cRImivRti9yzh97SFK27oUQhh8/p9SvpEM
2OmqSgtRWlEjv1+nsX2DtIi13pKEQ9OnYPOVYNR3dSvW4ZDn6gnnwdZVlaGkpBS10tG/qdE2t/ei
IfAc3puyDU+K6tA+RGMYLE1CVG3NWbDfvx5jx0/A+Lmr4BhZJWz//TvJYGluaUdLdQFubPoYX843
RUBWI3rbCnDr9EEcsI9FR28Hmoe47jtJUws6uyphs28R5prao14h4G9bl21i7+ThytzNuGoXisA7
OzFt5mEktQKdSmd4tTRJp60sKUBZTSv6m2JhOmkytltGorFLTwG8QlrFE6lK9sb2OSPw0YJTSKxs
fFanJIj2tk7UlAfh+NK5GDthIiYu2IjbwTmi5DvEm6mCz4n9OG0ViCqx6FpoVLQU4fa2mfhy9HhM
GDsChifcUNzQ80ci4u8uzdImW+ozcWXtWAwfNQ7jpV0uNb2CO2YbMGfJeSRUhGHXJybwK5M2/kqD
TcqouwWZAbdxyPgyEhvFelWUsyixtnYUBNzAiv02yBPS/y6kSGXa0pyCGxu2wzaiWJmq2NnZjES7
/Zg0xgRhtb3oGmgnLe09qPQ9jren7UNyZxt8D03Akp0WKGyClL+urzc21qM4/iF2LR+FFWc9UdXS
qxzTPY8WeAfqkr2wfvFETJgwAVuOuaOsRyxsHm/ukPaQgutGCzFmzBjMXH0SYWUd6BRyepZe6ROt
rdWIuH8KCyZOkLLdALfMMklzG2qKs+BzyQhj5q9DQIE8tzwYp9fuhU9uk+RBjCLxCFKcd2Hh3OUI
LBW/p02XpvaONmT7nMaU4WvgV9qBrtbnz6OxUZHlhxNrDyKgWAxiIZy+7go4mS7FLINryBO1qJLl
n0uGJgNpgOKEoksyIFWIh8dmYd+dKNkSPS6M1tUvGwr6JAO0uiRzPf3o7eNqaNLI2julA/aib+C8
zvZWdPGGgv6uVmFraYAMS0mlt0gnFodLd1DQ3a6yecfAHkZ6eA6Q538SJiYHkNkuT2nVKQgVPR1i
zdM6kLQMPApIuYMxi/YjuKhWGmc7evr70dX+Mg9I3O2eWvhe3oRly04gpqwccQ/dYWvtjQreq6sd
jWKVSTtGb3e7KCAphx5x0OV+TSS4AfTLsUZJR0tHD3rkuG59OEEfSY+Wre55zeK5NBbE4eT6T3Hm
Ubl0SMlvQxqOb1iCRReDpKy7pXHp5U/KpVmsBy7I08r7NLWiRwq4u02ISv/5XW2KBamft6bWXnQW
eWHpzFH44r3lCBUrrZMNj14a6633WYmhU8qV9cNH9/bol2+nOPt5sFyxE5dsn6KJ9SzPpkfDunpW
gz0D5SSuv4pOafg9coXjrskwc8+RRErDV+qfz3rxXLrMTaz/5nalXUiVKVDKVSy5Ym8zvD/JBI/y
agbarFj4QihNKa5YM+YdLD7picziUpRGu+OKnZdYbrq8lT08jkVbryKlQmf1NTek48ziOTj7MBkV
2QHYOnUS9jnEQWwI9InrrjxWCLmxQSy4580TvVK+rF+WUVvX83T3S72wDdKD6mLZ9fJYnxIGae14
Xr7d7eK5sHylzHvUcu8Tq5D1r6BfsTR1nqLOaGgoj8Se6e9iv1MaSgtzkVNQhgYp007Jd03xI5iO
2YPH5SSDNqWf6CDPlr7Jdtr5/PHozvXDrs1GsAytkbriy0mSD/Gosp334f2FJ5Eh6af39mK7lbYu
O9S+2cbO3MOF3Fv0nidtsb0e/pcMsepsoPRNtkOmXyxk9jn2TWlv6n17Yyzw1ZJjSJG6CDg5B+sO
3lbIgFETorkkGmd2rMaEz3+NZQetlWOqB9rULt5oTgD2bt4K85ACuX8DqiqqUCdl3cQ09TfBz8wA
M1YeRnJWGszXzcPc3fdRLu2sbcDwaJG2U5YRA4crNogvL4Pd3un4zNgKzZKvMJvDmDd9tBDvaNjz
23Atebh9yADbbdLQ39suddeNNI+DMFhuhNgWXXpZ3uyXjUKKSn7rpdxFH/aqSlDQXS1p2WOAfY7S
B/rYjqj/GInQ9SPqDBU9cg+1v7fp93epg6/1d3lmt/TjjhY+v0NSIm2IelmuR2/nM6NSeQb3DaCv
U+p/oE6oR/TIQDonXXip5/6WLNw7ewwe8cXIDr2HBe//G97+cj5OOyZK5TciyOI0TIyNsePcXaTX
SGIrU+HvdRuOd6xx5MhNhMaEI8DOGXflPGOTg4jOKcOTuydgtNkEt0Py5cGleHzfA2EZRShIi4Cf
xS2cOrUPm0XR+6TUoKezA/WFYTi/ayuMt27HTf9EVFelwWz6B/jd797B0iNuKBXlXCwd/pCJMUx2
HoRHQrV01C7JRx7sD+3Epi1bsXnROPx2kimixGXracyA/YVr8EupVgqrS1w9khELSREp7P6eCjge
XQMD43uiulha3cpbe2mPb8PhSTxaupsR62oJR68EKexq+Hu44kFsoaQ1CCckHUyrTWC6dJZOFEQ9
gKefE24fN4OR0WacvPsQ5c2MneoUNcmgQcjg/I7JsEkUtdctyqA+HadNDLDSPEzS2IOCpy7Yu0Xy
t20XfNKqUZrgi1s2jsiulXTV5cHV1hqecUWoK9A930SefzcoQ5T/i9Z2e38fUu8exI7jl3HpwBJs
viP1KI2kriQVAV634Hz/LvYYGWHLwdOIKpF7t1Ui0tsabl6uOCX7Nxlvg3u8KA+UwmrFLlyzj0BG
UghcXaNQK4TcWp2AG1s3w2jTJpywDxevrAkJPlbSRkywbf8pRFc1I83bHFPe/CneH2eIW95B8Hfy
VpYT7RFFmOl/F6aioIyMTHD5fhRahGhqixPhb3EHFtcG2o1Y+dSpnbHWGD1/N/xVMhDy7+ssx/1D
izHL0AIV0rJ7xEIj+XeJQipJ8MNNC28U1qXiyIpFsHqSo8Sxm+szcGmNAe4lMV+A/+nxWHTGBbmx
AfD2s4fF0TM4fSsY4kMh/NZZbNkk6du0D46huUIYQvR97ch+cg87Zf/ufWdg7egB96f5ct88BHpZ
w+n+HRzYfR3JVbXICbPDTqnHrbv241F6A7o7xCJ1dIa3uz0ObtqM03ZBYjVGYr/xJpicskZyOS1H
XdtUyKAsEocWj8SN2AHV29+C9CBfqZ8klNUGYq9CBvxufjX8rhxX+uauSw7STqQVtdcg1FH665bN
2LLjJrJaKuF2ehO2HbdHpWj4VukDJIMctyP4YsU5ZDWLGVKbDOujptJ3t+GsXQDKayvhc/sy/JIr
pd+0ISPEEVccwkRZFcLt8lEYG2/F4Wv2KBTFWJV0H+sWbkBwqRhwnU0oiAuEo3iS5VLmXaJX7u7d
hs1bTGA0fzTemH4UWaJ8FTI4fA8NojfTvK5iy9E7yKgQl1MQdG4h1u21RMEzMmiWPlmPcMfr2LBo
JfYe3oNde0/jcVaDWOiiVKkoG+Kxf90mHLFPVe6R73UIywzWiVHYJ21br8/LvVRDJNZyJcabWKNM
yrtLGKkuywPb5k+CXQqZtA3xnmexdvVBpEo6+kQvpHkclfa6EufO3MA2Kdv95pL/5l7UpIfC8W4w
yjrK8fS+I1zvXFP6/0FrX9SJXohzPoZ1G04gq60fndIO4n294eGXjJbOThTFuGGf0t93wDOlEmVJ
j6S/OyCrRsquvgDu96zhEVOIhsJgnNyq0zd3Q7JRX5YDT5dbiC2W1loeDYfLVogvEx2QFYLrUn+F
9brxjHYxqmtygnB2q4kY1dtwJ6wUXRUJsDp5Ff65tSoZFEolt6A4PRBnNizG4qVGOHrOAlEFNShJ
eYQt43+H0Qt2wi0yBQHXDmHd3I04cuYsNi4ZB6MT9sjJCcay3/1fjF58FHddAhHueRyf/t0fsPLw
FZxZPwa/GT4bm82uwvLwckyYeha5jbHYM3IRzDzjkeR9EO/+5CMYXbiBE4bTMGXxeWRKJ49wuIkL
p07izK7F+PjzVbgdHQ+brdMw/IuxOOwQgeRIO+yauRzbT5zF4e1LMW+JEUJKyuG8bwGWLz+AGzet
sGP+e/jvLw1FGYlX0FKCQKeb2Gs4H4sXG+Dc/RCUNQv7imWkaxjC0vyAVKwtlo36EMPH7oGfkBh5
NMp8AT7eZIW22jScWfgG3jV0RkVGEIyWTsSJR5mIdLTC+TOncXrLLLw/fBMeVbUi6d4GvPuvf8DG
ozdx89o+TPxiBo56Zooi6dBZTCoZbJ+IW7HtQmT0DDJwxmQ1Vl0PF0uxDA+unsfZC2dxYOkofDzn
AmKibDBrykJYxNSjIfE2Fk2cBIvoMoTbWyjPP7VpBt4bvhmeuXVi/TIeLvmSztFfn4TDorSuPslC
XvANLJp7BBlihLTmeWHRG/+M0UvNcOvmDZjMGo0pW91R21eB01N+gbdHGOLSzZu4uHEqPp92Gqk9
RbhjsAfWrqF4eGUnZs29juL+TJxbPhkzF+2FxY1rcAhOQWFOEuzPncCZiyexYcoXGL/5LmLiHsDw
q99ggsFpBD31gPFXS3DGNwV5kZZYOHwyjM2scPP6cayasgIHnONRXmCHCT/5LWbtuwKrI8swetwW
PCntQXesFUbpk4F0XtSl45SQ6DKLKNK8Lt9Sn51iNSXZm2L4+wYIbuxHyu31mHHEC81igbU2ZOKi
wVJcDcxCfVE4ds+cgqM+aUiwM8H7//oGVu+7Cc+gBATd2oEpIxbi8BWpx7OmmDPFCLcTxIiJtsKG
yXOx59JNWJ/bic9//yaWXosSjysSa978ZwyfvQ8W9/yRnJ0K1ytncebSGeycMxyfzr+BIhTjwqSP
8PtP18D8zD5MG/UBPl+6H9fMT2H5hNkwNY9Ai5BkC9uJ5K+5JgH7J/4Cbw2fgpkzZuCw3UO4HDTB
/GXWyOuMxIExBxDeUobHF02xdsFmHDt7FoaLxmLrBRfE+ttj0edTsfOaBe7cDUCeeImtUeaYZ3QI
gbliRUu/Jxnkuh/FF8vPI6+rBfHeouxPmuHskY0Y8fFMnPWMhPWe2Zh28JEYgzW4tvxTrLwaiNSo
AFiePI7zp3dh8icjsfFmnDg5Bbixdxm23BfrV6g0ymovJo86iWzJ9V2TOVi56ggspW8az/oDfjl2
O7LFyg44NQ9bj1rDz/YiZsxcggO2wSitoUnQBX85tlafDMSSRWs57PfPxhujFuOqtRUOrJyCqcsv
CZH1oFOMk+5sP6wwXo8rwWXU8yh5cgGL1y6Fb6Z4t2JZK/29STy4jjrEuJ7B7OnTYbDnOJ5kVqOj
VTyjji5UpDjBeB7JoAd9ksbOwifYtWUNzgZUyR37kO1/GuN+83usNL2GmzdPYO7IidhmG4esx+cx
5ZMDSEMujg9/B29P3gaL64cx/cupOClecU/pYzEs1uN6eL3cpwJ3Nhpg8SZ78Vqq4WOu6++HVozB
J7POIDraFnOnLID50zo0pd7H0gnjcS2qVHSjJS6cFn1jPBsfjtoBrxAfrF05CSf8q9HyeCf+8NZo
XIrsQqrFPIzZIn20sV356kF1wWMcmb8Em/acwsmDGzB/7kI4R+bD1ngyphy5TzJIQHByGTpKHsN0
yWQYbDqE85cckaMQczeDAXiwfxJ23ooDOnKwZeK7+PXH47Bg4QJMH/8ZJpuYIy7BH9umjYR5hHRM
QY7fecz7xBAhjCdn2WLGW7PhynppDcLmz1bBMz0KZjPX4bxvojDuCcwfZwpyeEf6A2xfvAlPqlqQ
GeyLm6dMsHjuOPz334/B9aQqFIWcwkajvSgUAyn8/CL8w7+9hxmLFmDujAn4fLoBXJxuY8YsQ7hk
61YX6o27gVELTJUwUTv9f8lNvMcNXD65GyumT8LBu09R98yKbkC9uJi9UvF1ZZlwOLQC7305Ettu
RqA+zRUrZ+6Hs4cjrp/fiPViYbncvoLdxgcRJ65Xqv8DmB8zwuJZo/CfP5kO++J6JNzfLKSzC/ED
bmTg6QVYtvMa8gca9ZBkINbqyW0GWG0RiS4hg2iP+zi5ZxUWTPoUv/jFOkT1VMHWaBlML7vB9+Yh
rNpwC+U9TUjx88DVYxuxeOZI/MdPpuGOWNwdHbqB9jZR+lURNzBjwnAcuBuEx3ePivIZjhtxrVLn
PjCe/CWuR+pCFA3xNjCYORueebWwWvUpdlglKi4k2tOwf/YIXI1Phe26fbjpEgp/q0NYscYWWYnX
hSh24Wmd6uJ2o6o4C0H212G6ZQGmffEW3v3yOMTcgJPxaBx0LRTLNg2mk9bByjsEt46twZQD3qLE
dYi1NMKKTccRnuiNNZ8tgTtXJu1Iw7H5i3E3Q8op7ubXyaA5F5e3r8KKs8FKelsYxmEITDzM5voa
VFRUKRMKanJ8YTTVBIFV4k205+HsvA/w5mejMH70OOy4/Ai1YinH392E+fOMEcP235GITdLOtw5Y
mOJzwHnHdOw4fRvXj2zG1H0PdLu783HGaAlWXn+Ktvpw7Jj0Gc4EsLMDjZX5CHe5jcM7lmHOmA/w
P2/tQJKUxvW5s7DpdIic0Qnb1TMxz8RFOT/YbDPWrLVEvrRxpZ1I/horo3FwzkfYZvEE0U8jkVWc
A2+zXVhpaIv89ggcmHgciXlBWDfmHbzx+USlb04b+ylmmloi9qk7DD4eBaNTdxCVWYSqOimv/jyc
W7YBFx/EoVWsxfb2LmS7HcbnBpdQ2NqA7KehsL+8B0sWTMWbP/sYexzjkB1lheUzTRGZ4YuNk4zg
VyiGYlocHlgcxZpls/DJL9/CwgOeoi2kDO0uYL3BBRT39iPZ9hgWiNGQk30PYydvxMNiXVtrD7+E
EYsOI1U89OALSzDhnTfwm3fFkBGviP20laEpudsjPTJoFeNNCXJ0lsLadKkQux9/oTfPX7yEL0Vp
6rwJlAZh7ZYtoriLlZ8l/qew1GCZGHfdz8iA40wcoG6Qvs7PTNuc24DlG84jvUHajVjw5cnPyaC3
vVVyVQeP43ux/aAD6qWxZnsdxrIZy/FYiSEDSXc2Y+XGA/DzsMGySSeQjhycnTwdu24nKcc9Tddg
z3V/yVELnPbthOkZb3T0N8Jpxyas3eWCis5KxD2wx+m9q7Fw8uf4xX+vQWR3Fe5vWYGdF1zhf+co
Vkq7KO1pRsoj0TfHNyn65j9+MhPOmcmw2b0V208/gK/1bmw+YoZLl5xwzVSMOa8EXZmRwOy34Z//
5X8wcd58zJszDV+KfjvlS884Cdve+NnzMBFd6sq8SFzZsQqrFiyD0a5j4tLWoVcSbGv8FbbfjJW+
UIhd8ydj840IpdM15mQjNSsLRVle2L5gEu6ncG8rUrwvYPX43YiTVFQl2WLDiPXwr+pHW+VDGI8Q
MkiJwvEZa3HONwExHqexbsYxpEkBV8V74JDRfoTHP8CcUeNx7KEwSO1jrPhoNq4+LULqg71YvW4P
CkWvh19fh5GLTqNUrutrakBabCIqCz0wd/w83I7SdcQCF1O8P8EEYeWt4hkU4uGdq9htuBgrVm2A
uWs0qtva9AZpxWVsKkdsXDTSeVNBuvNuTPloFcKqmvFg9zSMNtiJc3dC8OT0ckxeuAjbriWiPes2
Rn4xFeaR0loLXTD3/UW4n1uDxHubMWnZbmQqbb8RVutGY8mBeyht71dmDeiTgXWM7nsjqIyE4cJx
OOxbjvrHR/HBl8vhU9iH5vCLGP/BOvjLI8oCjmLxinXYtnYFLkcJeSVZYMQX03D9qRBgvhNmvbcQ
txJKlJg8B8n6+hrw5MIm/OEXH2P2kqVYsmQeRvzhf7B8rweKK0KwftpXuBqjCz+ku4iVOnElgitq
cHXlp1h/O1nZ35rjhmVfjsad3EzcXbMXViQDy4NYbnAXOXm2mDTWAI8VI6wFJdnZ8DqxEu/N2ItM
IcIU660YM94MWajFzdWfCxkUyXlp2D1hLSz8nsLp/Bop1+tylOjBw4s7sFm8zbRMD2z6ch38KsQc
qUnEWQMDOGSJhzeYDKTeOvrakGx/HDOHL4FT9kBZtuQjNDoWSYkxCHgYhsLGDnQ2FuPmvjnYap2E
vu5cXFq1DDdCxc2ub1DIoleeH2W9Hqs3H0ZKo9yjORn7lkzHsjOPlfYuLRRXjNfhnJM/nC9sxGRD
K8mxoC0Zu+ZOhIFFNFprQrFn/ijcjOuUhtmCuLvGeGfMRoSLQVnudQRjPjdFAvJxTayyI9bx8sx6
3Fu/EjuO+krP6YLv0Y0wlE6fJ31HJQOOGRxcKGQcMaDspLR8jm/H8nV3FTLYP+4o4kvCYTx3KnbZ
xCvEWpeVgeS0FBSXZ6JI8pIfeBXT3vgV9nlkSy6l+9ttxvxtYjU263IWcGImvtzjgv7qcKydMgpr
LcT460rHnvHTse12AtoaE3Bs53IYLhZv3MoPHU05OL5inEKI3f3VuL58DpZIm2LPa8vygYnhMtyL
rkaW60ksmH0NOWUPMHvcQjgm66yjjLsmeG/qXqSJ4g0Sw+7j4cMxf6KUyd1giBMnClhHGpGXF2PT
0fto4I+2YoQ+8EJMVj4e24gxstlcVLRwdoI9lsyYhnsxuYj0DkBOYSrOGS/CFqtwXoVA8/VYsPkc
cpt14zHs7y1N9cjPjEZIik5XVEWexfiPVyOgVFfG7UUPsWvxNHiST/rb0SqGQnXkNTGATBBS0oki
v6OYOmsFOPTCduu+bzYWGJ9HiO9tLJlgJmSQjfNTGFpPFfOoA54HjXDslh/qqOeCz2KJ4T4kl1fA
ba8xNu59gPSoc/hkxBI8yOtFW7Q5Jn6wBr6StPInZrr+vmY5LkQ0ojf1Jr4SD/GKbKPIDXPfmw+b
rBrkeZnDZN00TDK+h6c+93Fs+Wf4zMAcsfnlyIn0R0CYeL3exzFiwhYxYCXJ3V3IigiV9iPFWuKG
FZ99pj9m0CIKSjob89ZZBLfr5+DxtARdvT2IuLwU7306AfvvRSErQDIyajIWrVkLg9W74ZmQh8p8
T3H7xuBOApWKkIHXWSwfuRVR8qCqhDsw+MQADyv60FbhDaPPVuBBylMcnWKAMz7xiHE/gZWTDiJZ
FHxVrCv2rtmJsNwE7Fw0CVOWrcHG9TPx3n/OwPWoMtQJsSz66neYuvMuMjIf4cTiyRi3cC1WLF2F
83eCpIs0I+z4Irz32RRxRw2xcc5I/HrCTkRWtKK7MRuuN24jOEtpVujpFPf7GRHoyKCzvQGxvpYw
WDBH8rYSc+fMgZlFlFgCfaLUFuNffzMSN+I7UP9oLz5+ZzIskzvQXxyAVdPHYfaqdVi/eire+8Ui
OBXWIdlpFyZ+/jGmrTTCqrkTMHHqDnhn1+iUtDxPJYMLOybDPkPq1f8M5k7/ApM2nkZ2bQ+q4u5j
9thRWGYo5bxwPN77wwb414ii68rCrhmf4pOFh1HIisz1w8pp4zDHQPf8d/97EWyTS5Xn8BldlcnY
PuczLLwcreSbyHXcihFS/g+fhmDP5N/hywUbsWrVEoz7cBaOuiWjra8MV5e9j8+mLFUW4Jj64Tis
MfNCNYphtXQHLJxC4HdjPxYusUQZauC9fxFGf7UQK1euxSWXp4hwO4+JIydg3ToDLBg/EiPGnpCu
0YnAo9Pwhy8X45rjXeyavEY8wwzUi/u9Z/pETJi1CgZLZ2Haon1wz65DTZqtWLSr4F3Wg47qeJxc
ugx2WaIhk+9gzAJ9MpC6a+lAR0MxvMxW4ZPRk7FEiMNg1RqccAlDuM1ufP7WUjziQHJ/K5J9LGGy
+QKy20phvnKpEHGpzoPgjKv+bkRZrRMluwcJ1dJGutuQF2GBFV+MwYzFcs+5MzDH+BpixLpuKfAR
b2k8xi9cBaNVSzHqq3EwvBmD1tpQ7Jw5HNcipa5625D1+AamjByFVVKPy6SPfPShKAEU4OrMOdh3
PVr6Wx1s1izB5gNeQiyd8DlkiDWrb3yNDPbP+QRnH9egWyzpXrEYvY6aYMlqG+S1h2PPiN0IbmlC
jvsRzP1qCpZI31wtHpxvcjaq8h/j2JblWLd+BcYtWIUH0aXiNXajpULuaWAKt7BAXN4xT4ymxbgf
KpqvORvH1s/FuDkrsMFoPj79xVjsto4SMuxG2E0T/PJXX8E2RsxhsWStD67GqPELsXbTEoziKocH
HkhrEPTXwMVsL07c9MJT98tYPF0UMZoQdGAO3vliBlYZGMJw1pf47dRDyBTP5NHxGdh0wgkFeaHY
J316xtyjeBgfidtH12Lsu/+GX/7+Eyw0Poro7Bhs//wTrL0ahabKWCEjtptl4vV+CeOLMagr8sCM
X32OM+G1qE+yxtqpY8VLmo/p801hn16N/j7xNTqkrYj09HSjIs0X21cvkrayEhM/nYodDhFo7W1H
jNMZrJwu6fu3f8HwGStx0TUKNS3SfvqKYL55CyyeZCA78AJmfPx7jF++BaskzWNHGcIhsQK5/hcw
+ysxbsX8OTNhFo7dT5KSa4f7HkMctvJFFWcjdOXi/AYT2EU8hfP+ndho6oG8Ak8skP6+dJ3U3ZIJ
eP/3hvCrFGLqzsGe2Z/hw7n7kSdNqj3fH6sH9M2GNdPw7n/Nxx0SWn0YNo34Kd42fiBEnYWTs9/F
yK2uaBVj0GbtBIxefA1FbYWwMZqB0dMMsHrZEhy5+hCZOaHYMe8zGDsmvEgGOqXYoAzKMajCkWsO
rDaWZ8HP0xUPI3PQ2duM1FBfONrb40FwDCpbutBSU4S0hFgUiAXdIo2yujQHybHpqJQOVl9VgJTo
FJTWt6CpvhRp0ckoqa5EVnwKckqrUFmSjeT4LFS3yLmVxchMTkOFkFJZcjBcHO3h6uePyPA0FFXU
o62pBgmhXnD2ikSlnFOdFwdXOcfBzRMZlW3okI7TXlcIfy9n2Ns7IzwqHlGp+aioqxcrWbwDUepd
asxwCGlobkdnQzlinrjK9fZw8wtBqTSCjtYm1JRmIjYyFuUN4rZXFyLhabJst6BV7lcQGwBnB3u4
+wciKjILNV3tiLplJK6yESxc/ODi7I7YnGp09XQoM2X4LCrqxsI4nFj7IY57FaEoSe7h5oHYoib0
kDCa65AR5qWUs1dgOOKislDB2QCSlrzkCERmisJv4QwjPl8sVT4/QJ4fkSHlWyfX8/O4kteacsTH
hyOjrE6Zg8+Ya2NlHqJTk5CZ4ImDC0aKNRYEDxdH+ASmo0XKqKM5D+ZixW875wRnFxc4u0eioq0L
na31yEtKR35xOcryM5GYlI+G1k601RfgsauDlJkv0ssb0NpagTg/XRn6hcQgKT5XOlMbGopT4eXh
geC4VGQkpiKnuBod3T2ozYuHp9SjvYMLQuOL0CHlVF+pthvJY0MVclJSUVhVh1zXg3hr/BY8yqt9
3mZZpq2iPTtqEBngDgd5rr1XKIrrWtEibTcmKgVlcp9WUYLtuUHYsmoRTnpniSecjoJKKauBiQTN
Up6VBalITs1EldRtkxgIXf0dKIwNUsrX3tELSfk16JT6bW6oRW5iJPwCHiPS1wk7Vi/FCvMIqeM6
KdcY5FWo8/mrkRKoS5NPcCQSYnKkLGqRl5CIzPxKeWYDClOSxBMqRZM8vzQrFSkp+ahtHhjzYdrq
K5CZGC3W9cDn0Jvr5bx0JKUUorZJjsWkK/2rp6sBiUHeyrO8wuJR3Sr5baxFUpCj1IUjvGLzdXPn
m8WbkjQ4H1+JOXtvIdTPDQ+e5ilhkxaRquxoeDk7wNHTG6FhKaKoKiRtbaJsUxEakyj9qQUtbe2o
l/oMcHWCvas7AsOSkJVVgnrJc1t3P8qDrmHl9kO4feEA5s04jaz+fvTU5sH3gZxv74rImAREpxWg
RvJXlh2P5IxCUcTiQxclwsvxoZRzjpSrM1w8vOH1wB3OD3yRVVaF7PhYpOZWoK2zCzU58fCQduPk
E4iSZumn9cVIfBqnlFNnZxPSw/3g4OCIoJhC8R5bUCSeUnx8vE4SklBSIfUQ90hpp65esagRb6Rd
+ldu7BO4OrnB09sHbk72oh/zUC/6o72nD6l2u8RgO4/kvHwUJIThofcDabfOCEsuQ5eQTW1xNhJi
s0Wf1SAnLgHZhdVSx00oyUxFVkEpGkQntnd1I/buHqw+dgU3TMQQ2+4sJkE38sK9lf7uGRiGWOnv
5fW6/p4v/T0iQ7z9gf5eGKfqmydKfy/mOyZt0u5iw5GaUyE6SXREkrSp7DLl+sK0BMQn56OpvRtN
FRnwdmZfc0RCieiZ0nQEBoWhrKFtKDIYLAMudJ/YBqKkFLdcOjAXVegVVm9WyKMFHVI5XEOY05f4
4lZnF+fJy7HmVjm/Ay3cbpTz5Bq+RNIux/lSCM/tUDoXz5WCEtamxd7a2a17Rk8PukU5cP43C7Kz
uw998psDv3yLkef09fYOTMeTewghcFofp2RxRaHuzrYXZta8WnR54dudumd3P8+TlEG3uFacHqpM
yWQ+5L7KHPcutTyY1i4hUrGirizBfIMDyFa8XUkLy26ACCjMd0tNIay3fYnRi0wRmKsLb3RxRgTP
E0XeMZCOHq6O1C0dVa5TpjRK2ejqgvfTf77sHyirZ3nifeT8joHpa0xDk5QRgwM16c5YN/Fz3FFC
4v2SX6knafStYh2emPcWTJ3yeUCxqDjHW/dsvjgmpC/KgHOy1fv1sB6UNzLl2XKPLqUOmHYhEU5/
43ltnbKvVzwwIW2xxpUXxEhw7Z1K++L5rC+FMNV2w/KmUpZ01KX6YPv80fhyxQUkVzUOepGI4wSc
Yqcrsz6pB2XOuqSta6D9NTTyeBX8r1+Hxc0wZcZYu35ZyXNZz51ifSttV/Yxz+y8yj2VtEv5SNkX
RD7C1QNmsPX1w72LRpgydg1cE2vF45T2LH2BVr1S3mxPokR0ZaGrxyalHDvRrtQ1X2LqVAb8OSW3
RRRSR8eg6cFSh5wB1cY2rqRJd14njQYpm3bpP0rbkP7VOZD/noH+x6mlHV265/fKeergemtHC/Ji
PXBmlx04LCOWn3JMd29pw0oZSkvuEbJnOQ+UTY/a7vm7TX7zPE6TlfN0eWDdSXm1RGLTJ6Pw1h8+
w4qrfqhn+2Xf5Pl6fZPPZP13SLnyWk417+0TEmth/Q/UpZIW9kXmlTMGB6Ziqu2mt0fKW/Kq9N2B
stfTUz1Sfx1tWbDeskJ5J0GV814Zygy1fjGA+np1L30p9aHmf0C6mDbWR5OUUV00Lm2+jMiSBiXv
1E88R223JE0aC0odd0kdq9NGFaKhjmW5daEh2wHT/vVdvD1yBo54JEu9dUnbGKq/Szt/aX9XdaMu
v9zfKXWg66fS7wbaFNuXqn9Yh2reaOTqdJnuSwIKGQQlFCqNnBaSJt9XdJ0zJ8we9xx9UNQgjVOU
3pDnsnFLRXdy3rtiyf/ppKVVLL3SRLhamyOiQBS7NFrubxZCbmkux5N7F8SSLNVZkoOu/bOJpK1N
Gna3KDq+GDXkOd8oUuZicLSL8TP08dcQ6UA9ndUItTuH1QxJbdwJ14Rq9HeLQhjq/L9QUQhdiOcH
r1++O1SRhKtHtmLDLlvksbylrQ957p9MxDNsa1Nm1aiivJE+5LkvF8XQFYPou7c/lnsHmjIfYZfR
Jhy+GoBaMR75PspQ5/4pRSGDx7F5YkXUK+t+avL9pbq6GvXNbHCtqKupRvUQ5zyTgYUnhjz2xxRJ
Y20drY4uNNVLGqv1j9ehpUMssaY65bwXrvszi7pQx1DH/nTCOq1Fs1iQ/WJh8YWztqb6QWX41yG1
tUPv/14ibaa6tlHxiPr7OtAgz3hlH/hTyUDbeSZDnfM68n3bH/tUQwt6GTrrEh3B8hrqvD+xDDP3
SoGdTwT8fR8qy6Zpookmmmjy45NhF13jEJ5aip6eHuWzBJpoookmmvz4RCGDyPRyDiFp0KBBg4Yf
KYZdcIlFTI7ulR8NGjRo0PDjxDBz7xQ4eYTioa8PfJ6kohWdKEoIgbffQzwJjkJKSgKC/Hzh6e4K
V9eHyKh4/sU89DYg1t9N9nsjLrUInW1FiA0KR+TTDLQPnNLfVIiA4EhEioQ+DkB4chnQ14zU2FD4
+fgiq3rg41saNGjQoOHPhmGW/nm4ce0CvnhzONYa3UM1mhFpdxGjf/MhFu69Apfb+/GbP7yPSYvW
Yu2aRZizyAxBhR2i5avheGElZi9YgbVrjbBo5DtYutsExzYZ4j/+7g0cf8oXxYHUKyvw07cn4Pip
q1jwm3/Em+vsZW8Dbm54G7/9aCzc+D1qDRo0aNDwZ8WwC84JSK2qQZy1KVzDdS8ZoTkVl68+AL8i
g+YQLD9mjnjdt98QfnkbNpi742mEEzYdMEf+gKNQGOkIO/8UtNUEYdaYNdhxlK/X5+HAun0w3XxF
+YZIXeItbFq8GQEh0bhwehucknSEoUGDBg0a/rxQBpCjspvQU+SCTYcdlK8Opt87iSvuIbpQT7kv
Fu09g6ACvgMqKHbDYtPjsLxmhvOhA5/k1ENLoRcOHLsFxxvnYbR5KfafcMSVXXfAD9oSOY6b8X/+
/7/CjtvxAx//0qBBgwYNf27oZhNlVCo/HI8chmt8BKxOnURw4sCgcpmQwb6zCOZ3o4lcOyw9cAo3
zU/grPJ94RfRmuuGfTf9keN6BjOnbkVwbAnuHbBAlnK0E0/Nd+KLtz/BXNP74OdkNGjQoEHDnx8K
GUSk6aaW1iRZYuLbI7DlvBOq1M/Ti2ewYM8ZhJTwRx+iLxyB2a0nSI9zh+nmnVA5ozrRDdbXPJCZ
5Y+dFx8D7d2i+nvRUN0Iyx1XlZBThsshbNtqi8q6UtzcMw/rzrspH6fSoEGDBg1/XgyQgfIxevQ3
xOPgitkwe6RbChDoQNStbfjtH97B8LFTMXXqRMxccQLJyrqybQi/dxQzx3D/VEyaNQ+3XAJw2Xgu
3nz3M2w45YmGzmJcWTMT7/9+HBat2o4Rb/wMny64iUa04+G+ifiH//glNtnpFn/QoEGDBg1/PrxA
BkRvf5duTQMFfWitr0F5STEK8nKQk5OLiqaBxUOI/h5UFHB/DgordOsENFWUoKS4EMXym+vbVpcW
oKikHEWFJSguK0N5uewXj6GlrhYVZSUoq9dmE2nQoEHDnxtfIwMNGjRo0PDjg0YGf8Po7n71C338
HtUPAX4bnfLHwjfl41X4Y6dNg4a/FWhk8CeAh4cHzMzMBn49R2dnJ0pKlJH5ZygoKBjYGhrFxcXP
lPiVK1dw584dZZv3Kit7sR5Pnz6NR48eKR+h0setW7dw48YNnDp1CrGxsco+9bm2trYwNzdHXl6e
siLUrl27lPtwOz9/4D2UQeDnb48ePaosJ/hNKCwsVO6VlZWFlBTdylOZmZlfu1a/HHhvX19fZXv/
/v2IiopStr8Je/bsgZOTEw4fPoz6et1at/pg2VdUDKxorkHDjxwaGfzAePjwIaysrBRxcHBQrFo3
NzcYGxsPnPEc5eXlMDIyQkZGBmJiYnDo0CGcP38eaWlpsLGxUe5hZ2ennKfC1dVVUdYECYZKnTh3
7twzhamCq1F9+umnyn99XLhwQXkOSUW917FjxxTSunz5Mnbu3KnsX7t2LX7/+9/j448/VrYtLCyU
c3ndgwcPnuXz+vXrmDRpEr766qtn+yjMPxfHUcHlFv/whz9g1qxZ+MlPfoJx48Yp27/97W+VfOmD
aeByhCquXr2q/F+5ciXWrVun3P/p06fKPi7McfPmTWWftbU1goKClP28d0JCgpI+lvNg/OIXv8CX
X3458EuDhh83NDL4gUGre/v27Yoy+9WvfoXAwEAsXLgQv/vd77BlyxZs3bpVUZIqqOw3btyI+fPn
Y/369co+LkI/efJk5T5vv/22ck9azrzntm3b8I//+I9Ys2YN3n//fXzxxRdYsmSJolx5bN++fcra
uypoGUdHRyvKUJXPPvsMn3zyiUJQVKIq6AEwLfQWqPhphX/++eeYOHGiss17EfRA/v3f/11Jj6mp
qWKB0/o+ePCg8nv37t1K2v/t3/4NERERyjVEXV2dQhoEv59Oi5/g9cyjPtra2nD79m34+/sr96SH
QsJgHmfOnKk8g4RE8L7qMw0NDZVyIVguSUlJikcTEhKi7NPHz372M6UcNGjQMIgM+lobFLe5srYV
/b096Je/Px360d7CFba+/4sHPXIfJR/1bcCfPB/PsXnzZhw/fhyjR4+Gs7OzovCorObOnTtwhk7p
FRUVYcGCBcjNzVX2GRgY4MmTJ8o2LXZauwzb/Pd//zfu3buHx48fw9PTEwEBAYqy9Pb2VrZ57D//
8z+RnZ2tLOtXWal7mZCeBRU5lSe9FD6LaeD56nOo4KmcqZjv3r2rhJ/obZBsOHWY27wHLX2Gekhe
xOBvoutjw4YNCA4OVkJYrA/OOiO58Fm8j4uLi7KfJEhPheEmguv+qqCX9MYbbyjWPc+hwmeoTB/6
YwL0gphe3nf27NnK8xYtWqR4FImJiQNn6UBC43ENGjQMkMHT7Eb01GfDbO0MTBKLdMKUldg0ZxGc
M18ML/yxkeRzBs6xOgX2XdFekYT9KyYrlvXYKatgvHAZHhQ8D1V8f7QhJyYSeS8pGlrQDF8wZEGL
lhYzLXUqMyrTS5cuPVN6tJpDQ0MV5Tdv3jzExcUp+1evXg13d3dlm8qZ1jsJg1Y/wXh7ZGTkC0Ky
IGit01ImOdAKZ5iI4DJ/VKwkHIaCqNz1QSJguIqhIlr0DAvRk6EiXbZsmbJNkmK6qPQZg+e5LGdV
SBD/9V//pVxLUDFz4XN6Jjz+61//Gu+8846ipOfMmaPkmftJcm+99ZZCHgTLiOXV368jcd6XHlR6
erqSbhIZQ0wqWB70aEgALDuOe/C+//qv/wovLy+Eh4crpKkfsiI0MtCg4TmGXXRLQkJ2LtzN1uK0
bQh6pP915QXg6O4j8M8qwRP7i7gXlIPunm6E3T+Jiw5BqB34jER5oi/OmZnB7MQZPIjU+zRFZyse
WZ1UYtpn7zhKZ3w+8JjkYansP2VhDfeHSdLhZWd9Ju5fPY5TZy0QVai+x9CD1AAb2NrZw/aOpVjI
ZrjnlQHV9uxrzsb9E8dwzMwKQUG+MLdxQmpJOez3r8BFtzjlvi2pnjhgegKhZd3CEsVwu3MJJ+TZ
Z2y8UMkb1SbiloUl7KwtYHPWGfGJD3HypDkeJVQrz2gvicL1k5I/sxO46ZWq7AOqpKx2Ye7M9bjt
nTyw7zmoAEkIVMpU9CqoTPVDMgTHCIYPH64oeXoMHFAlVKVL7N2791m8XAXDOQwl6QsVvD6oSGmR
0ythiIleAcMiDOXQwh5qQJtjASQQDixTiZ44cULZPnnypPKfoR1VQQ8FhmKYj6qqqoE9z0Hrnfem
Vc8BYMby1f0mJiZK2aj35n+mkeRIolu+fDnee+89xbon7t+/j4sXLyrbKhiO432YL5Ir70sPiAPR
zDu9tMH4+c9//owsNWj4sWPYRc8sJD2+iYOn7iB3oA8/6+599fA/ORMLDt5CcUc3IqzXYvyaPQiW
87pLcnDeaDmMjh/H8aO7sXjRatj40zrtRYzzKSxbu10JkUz96peYvMpSuV1VrB3Wrduo7N+48H28
8fkGMJKDhiw43DiGFZM/g4mLShw9SPc5hlG//AU+X35QlNEeGKzeCp/CPnlEMxyOLsO6Ladw6oAR
xr/9S7y/3grpSe4wPXkf5QNfWH1BbRXE4OKFAzgszzZea4CDNzzRWJeMowvewq9/NQL7lptg+ixR
rBtXYNclR+RXdsNl31qsM5X8HT8Kg8VLcNY2cuBmQJTdeWxYJNbtxovIr25Hb9/zp3GGDK1SDgqr
YKybg8KDQaVL4qCyokXLQVNukwyonHkdLWUVr5pmOfgYLXjG++kpELTG6aXwfgw/6YODu/QOeD6t
b1rWTBcJgcIxCjXeTzBtFDU8xHATPQI1hMO0UPTJY8aMGYr1Tg+EYxfq7CSOBzBkNRhU+gwh8Tg9
A4aLli5dqoyZcDxg8DU8lwPCTBdBr4bhOZYh62QwtDEDDRqeY9hFr2wkeV/FkdvuyJc+VPn0LlaL
Qhg1/Eust8sC8t1hfs8B2Ur/ysft+7cRVC7nPT6P4b/4EPOWL5GOORefvPkmVp7UzeKoSriNtRPn
KR124vAlsIrSdfqexkDsF2uN+2eNmAbTO0/Q3vVcWUTdNcZeD13cXEFjEixOmMJTcTra4G1zBFee
dqK3wB2bVp2FzkHpgdfZ1djn1ySuiiu2WXqjWm5Z+NgCS5V8jMFW1yx0VcbjzJZVWCjPnj/2I0zY
eBYM1qS5n8Lhk8GSNXuMM/VER9Ej3Lp3CyFRTzDvf97BzCXLlPSO/fh3GLncGi9Eh5rTcW3rQoyb
OhNXgnThrfb2NsU6ppXKEBHDJLTMGevmoOxghc3BZHoGDH1QMTGuTi+CcXtaxO+++64S5yfoaVBZ
T58+XZmVw23KlClTFEXPbdXiJvgsnssxA1rrPKe0tFQJl1C5c9aNOuWSHgPvz7ECEgVDObTEN23a
pAjTp4518HqGeNTnU375y18qwufp7+f4gopRo0YpypmhKlrr9CToDTEMdeTIESXvKqqrq5U0MH0r
Voi3J54A88nxEs5uIlFwbEQFy4hKn9eoip/lynxxP8uC4zP64NiFOq6iQcOPHcMuuqciKSkE54+a
42nx84E4/6MGuBZfj25R7EduOipKsC/XDkZ7ziO5QzprsgMObjT7Wuy8XzpdaVYeGgbWOcj2PIFp
e1yU7ercAt2gLpF+D1PWn0VR/fNBx2jbrTgeqHfD6lg4211FnDIFvRpB7tdgmy6bxY+wba35s5BR
yn1T7KJH0ZmBg3uvIOXZKp598Dq4Bna56bDftxPnrjwVAulH4YMD2HbKFnQgknwsYG0tN829jalX
I9GX4Q5LR2ckFmXg7LptSCzTW9lN8Iy6WrLgcnYf1m89hojkUrR06lJDS1+dFcSpjZyZw7n+VKgk
lcFz9dUZMiQKdYCTcW8qN1r0nDapDpAy7EOFRgKhtayC51GxU0nrkw0tdoaJSC5UolSqVLqcYcNt
hp/4LIKeAUGvgR4ClT2V6ZkzZ3D27NlnhEDQ2ucYBBU2hWMgPI/nqPtUUa10giEvkgU9BIZwqLg5
M4gkQtLj9SqYf46XcKyE5UPyIIERvIc67kIwzyRfegoM03GKK8ExGXUshsRM70IfDFcNHlTWoOHH
imEXXWMRU9CKQp/rWLN4ObaYbFWs2CUb9yG2Vtz86iAYL5uJFRu3wGT2SPzqzY+xySYCfa2FcLpg
hOWrtivnb9++H/cCctDb2YHDYz/ApDXblP3rFm/EkSCdArQznIORM5bpzl+2EuusQ9AoujYv0A77
tmzEtC9+g7cmcrDyPMLzqpHquhtffvEBdjvFoyTRBVNGfohx+1xQ3dmDx+eMsdSQz92GqV9+BmMH
nVWZbncaKxevhLGSj21YZnIcufUViHK4CBODtdixfTdWj/sAb3w0Ghfu2cF44sf4ZMZxxHmexvuz
N8LF2RbbV4yFmVcBQh2OY+WKDbr0bt+JSzbR6EQrAs4fwbqZ0zHb6BwSip6/LEXFzvCHqlj5m5Yv
r6cypjLSD89Q0XN8gddwcFQFlR5nCA0FvsfAaaT0PnTp2q5MXWXIgwOl+iAZcMCWCp/n/fSnP1Xu
TcXKGDstbVrr+qAFzjRRSZPUGCoiKXBcguT2MnDGE8/9LqCy5/X6UMM3vCffpaCyV8NU/K++lEaC
JGlwGirBMBi9BoatGG5jqI5jHiyHwe8y/K//9b+UQW0NGjQoZBCHiHS6yo2IfOCohAkoztHKOmeC
buRFPoKtzR34PolBXMxjeEVk6xamaa7CIzvd+Xfu2CEkqVyxnHMjH8Luro2y38E9Hqq6rMqMgoud
re78e49RPuAkVKWFw+GODewcXeFsz+M+yKpqQklaEBwcnRCcWIC6ojQ4OjjBPTAWTXx4QwbuXjwj
Fulp7Nm0AKbuAxZ3fw1CXO0G0nQH7vED71B0VyLQi/e2hW9AJEKDvfA4NBx+Tk5w8osQiz0boU/8
kZBTioQnzgjOrKMJjCgP3TTLO5I+bw6kCx2keLvA+UGM3gf9dOCsGX2LlaAF7+PjM/BL99YwB0cJ
KjrOcmF4hMqWFjOF7ydwYFP9ra/k6WlwPIFWsJpHbnM2zY4dOwbO0oEeBWcQ0YrneAWno+qDM544
NkCQOGitkwCYHm5zeirBKbFMB2PwQ4HP5tz+oQalXwWGgEg6VOYMX+mDSpxhK+aJoSbOXKKFz1lG
nAWkljM9D/UlMxUMH+mPX9BzmjBhwrNBeRUkDA5Qa9CgQSWDtK8vUvOXjq6aYlzZvFCxilfuskBN
68sHVv+cGPy5CUJVfPrHOLBKL4LCaaL8RIP6W3/e/avwuufpQx0zYOiHxKHOBKKyJUEQVKoc9FUH
ogeDypei/7Lb64CKnPmjhzQUuF9NnwrG+ekV6A9MDwY9s8Fp5bjN4KmlGjRoeI4BMvgrfANZlEFv
D2es9GjLZ2rQoEHD98RfLxn8hULfYrW0tFQsX4KzaPSnmr4KHFtg+IhhHH3weg78cgyAM324TeE2
93Fbf+yBlj3fP1DHMAiGgNTvGX0fcMaO/lRZhqQoHJSml8Nt/bLg28bqS3UqOMtJf9rsUOCLevrv
a7wKDJfRu2FYieMG3wSGz1hmTBvB9DLkxH3qmISaB86AYn3wN/PGuuBUYDXfg8GQHCcOqGCdcuD+
u4Le4uD28DKwDPS/6/RNUNOv5u2bwEH6V7Uh/fuo22o5qmBe1Dfuf4wYXB4Ey+l1yp+RBYZLX4Wh
7v9N0MjgBwanMqoxfs6E4QwagjNlDhw4oChr9cNzVNZ8e5b7GIZRpzkyNs/BzmvXrj27nuBxvvjF
7xxxwJXbFA768g1ebg8Oj3DevfpFUD6Pio9TOb8vGE4iAVHJ8f6LFy9WQnZ/93d/p0wp5bb6PSCG
jzg2wBk96mwqhqE4cMzBar53oj/rSB8MP3G84mVfTNUHZ2s5OjoqeRwxYoRSrqqQINSZVjyHxzk7
ikqbz2D9jB07VkkTy1ENXfFlOCpWzjxiHkhOzNuHH36oDMhzm4Pbgzsfx4o4PVgFx4SYf6aFeVHr
5HXBNHPgfPD0WIL1yram5pWExjLji4LqPgqViH46+ZsvPbK++A2sadOmKdv8dhXboz70n8FxK34s
kGWmf381pEcDiPfhuNeYMWOU7cGD9xyr4iSGHxJ8Putv8LjdXyI4vqZ+t4uz9TiZg22Jwj7LNqmC
+WFZq3VHQ4yzBFWwbbIf6YPtdvD3vr4JGhn8wKBFSaXPyqRlSAuIViSndFKJc1qk+vYsY/wcqOU+
dg71bVgOfrLD0cIePMuG4Kwe/fnxHF/gFEp90APg9EwORjMNapydjYgKhQ1oKMXybUBlRyVFz4OD
4nxZjXnkR+O4TQuVoHLgJyf4BVQOCFOp8IN9TDdBK56dgwpnKHA2E895ldXE8RfekwT0P//zP8qA
McuVws9Z/OY3v3k2gMz6oWLWx/jx45UBZXXQXAXzxq+8cpCb5chvLTFvJFTWF7f164h54NRckgVn
OHFSAYmTnZl1zPS8+eab36qjciYajQKWAfM4eOyD5czyVfPLKbt8FslN3UdhubBNqVCVCtsS2xyn
B3ObiomfM9EHz+UzaKhwRhoNAbY5AwMDZZtEzGnVBN+t4X34yZCwsDClTFh3bG/qezBs9zz2Q4Ft
iqRMj/pl7egvCWyv6qdQODOQ5cq2ROHLlfoTGzhONnLkyIFfQHJysmKYqKDxMrj/s92yzTIi8Tre
BqGRwR8J9A740ThazPxGEad2fpN1q35OmY2aVhqVKhXX4PACOzYbvwoepwLQBzsan0+lRaVAj4Wf
uFbDMlSM/BzG6zaUV4GdnPendcJ3BviNIW7TWiTYeEkCJCQ2bL73oOaNZUNFx+m17Agv8xBowb4K
DFswDSQnWlr6YPmww6kvo5G42Ln4bHYYWmh8s1n/BTl98L0OhuJocVPZMG8kZE5X5bZ+qIteH8uA
9c18/su//ItSB1ToKkgWnO76OqBBQStctbqZP96bClcFCYoK/JvA9y9UAibolarvjhC8N0EFP3ia
MsmB6WA+SM5sOyxvCqdLD7b8CbZJkgTPJQnwvRN1KjMt4B+SDPiJFrapvyZwJiDBKdCsB5YT2xPJ
QG2rBPsMvSsVNPT0641hVOqZwaBH/m2+vaWQQWQm3aouOB01VBr5rOUHcPPEaUSUPo81/ykQ43ES
Tt/zQ3XoaYHN3hVKPmauOoI7ohiiqn7IdZb70NHS/LVppQQtRP1ppGqnopXEDkSFQqWkgoqDioEK
mY2Z1jEtJs59p6LimAOVHEmE51AhUNgw2FjU31RS/FIntxnPVRU8n8dYM70AWsb/9//+XyV8wLKh
gvqHf/gHRQl/W9Ay5fW8FxURGzAtVgrDVbQUuc1zGLZiPjj9lGEvWt980YuWDy1R7uPYA8/jsaGs
OpYNyWSwkifo7TD2TMXMstQfX+D9qfzU8IYK7qeioqVPi4whHdYVQxrME4VhHYLjEPwcBz29f/qn
f1LOY95omfFdCG7T6lfTxrpi+arg29KD3xmhl3jmrG56cdaja1g8U/qcXLN22z2o88voNdLSpgKm
Nc98kCwJeghUfKxvhr74n54kvQ3mSxXmjaEl5pdgO2Dd8V0VPo/GB6fpquEJthfu5z6SL8tTBeuG
HgG9XL4gySnSDJ8xFEWjgySpD46nMJ+sW5YV2wjfCVHfFRmKDJiX72LV0/PklGiS2w+FBK/TsI/6
48yyZIhQf+YfyYAkyS8OsC3Rc6TeUMNC7NP0qlk3FLZTfu5G/c2QJ/vcYLA82cbZf14HQgYJiMur
RtStbTA5ao4YUTKRjucwf+xM3EkoR35aDNJLGtHf14uilAjEZpagc8CY7KgtRKS45SEh4citfPFN
3aKEMMVlj0rNRVXl8ymH9TkJyv7whFQUFA+8bdxRg+SoYHh7uCKxRHWB+1CVn4wMYcHMVF4ThvR8
/amTrUgPl2eHJqKishSJqemoam7Dkyvrse3ULUVZBtkcw+zx8+Gc0yH+ezMyE58qz45IydN9yqKt
QhRTCnLSk5ESlYW6hkKxEuNRWKPLS397FeJCmb8QJD571boMtjsNsd7UGimFL07lpOvHNQKoeNiB
2Xn42QgqQoLxZlqgKtg5GEqgsuF1bMxUlLT8ac1SydFaIGgdsCMx/EGlzo7MbQpjvLRAuc2Ox8bD
6aBUJFRijKGz8/EejBNTOfI4rTUOln5bsMPS2qfVRyubioqKiOEvxiqpKKgwSFJskIwNM6Tyv//3
/1aUJ196YxhDfXGO3gCJkR1B3+IlGGJhJ6Hi4X9al/pgWIdKh+VHhUPQUyEBUyHy/QR1jEYFQ0Rq
aIcuNhUrOxOtX3ZMEoE68K9eS+XG8qWlTgKjkOToFTBt6oAz2wAVKdsMFaRqCbM8SCwsOyrZM2cv
KPs9bE9j3+UgpU7KKhqgTpCmYmbdqGNATBvbhQp6dkyPvkLls9nuKawTjudQUaSmqh9Z1IExaJIx
3/pmG2Aogd4R2xyvZTujEaI/wMvnkwhVcPEjtnHWtfrFXBWsQ4ad1PdOmA6SOds7650YTAYkKbYP
fWPpdcG0qZ9U/xp66pAUpuvD0Rlq22lHgeiU+OR0NLR0oLI4CwmxKVBsxs46pMYEw8fDBXFFz43h
jrpCOJldwRGzq/CnDolLQf2LTfW1wf7IEBqVOsFIAI0/Gnk0JtnGqDP0w4Hsr2rd0oOjZ6v+Zlt9
WciXX1DWbzevwrCLDzKRFO6AowcvICl/8Fz9Gtzd+gWm77+Hqo5OuB8ch48Xm+Jprajqplo4HduE
5dKBNxmtw7ptZxGXzYbbh6xAO2yQDsXOPXbsW5izSve1zobccOzdtFrZv3j+x3j3SxM0cRytKhpm
WxZgrLg0B71V26gL4beNMPx/3sBHU1aIGzQLc1ceQUwd2bIX4TbbMXfCYiyeLR7AyA/x+wWHER7n
h4P7ryC36sXBPAUFETiyfwM2yrNXrNkMa78ktJUFYf2E3+F3v3oXq0atFeW9HF9NmITtVx6iVvjr
qaVY82v4bR4jrDDch8B4hmb60dNWD+vty0XZLMcBK/+veQlUguw4rGAqi48++kj5zzgyO8XgFcm4
jx6BOqhIK4duN2fmUIkQtBJ4XO1QJBz+pqgVrv7muVSCtPqpjNnZqSzZcKjAVGXGMYXvEyaiEmb6
ONhKj4AWtioMSahvBRNME0NfjGVSkVCRMURDpUDCo/VC5c386YP3YsyeIGkytDQYJBPmSw0TqCEN
Diaqn+7Qn8mkDtjR0qZlRUKiEqK1xlkatHb1Qav4gw8+UMI+zDNddDWf7Mhc80EFyYteGN121inL
hcqRaaTLTuVOS10lg4fWezFn+UGpj+uwf5D8rC2xHPStZLYpWvr6YF2/zJKm8mAI52XvcBCqYiax
MF9q2ZOEBoeJSB58sZBlxvTTEBg2bJjynzPW2J4YvmBeWa8kSNY/70uSZlujB/Myz4B5YdxbXXnv
24CkOzhmrkCadvw9Mxgs36DonOVrdsIzgl8qqIT9zkn4yf/+AP4FVTg359/x9/81D485nFKbiDPb
F2L8559gt/vzpVerEpyx5KMR+EBkntTtmt2nkPztX+vRob9HjJqaZ59NYViVbYwGDHUBw276A8g0
pvSNJB7jd8b0QUNSNWD0QW+QUYPXwbCLXjlI8ryCo7fdkStcUJPoDtNVBlhraIRTfoXyZCdcsrFD
NnmiNx03blshUIylumBLjHzjAyzbZgIT4zV4/xc/x8x9dBX7kOZ9CPOmrtHFvr+QTvdIl8jGrDtY
PXOJsn/Z2PHYeMEFrXrsGnF7E/a46003a0rGmS1rYJlAym6Gq4UprkR1oa8iGFuX7VQ+rAdU4OL6
ydjhVS+mkTN2WHmjUhpBaYQ9totCXmtojAv+osSb8nD7jCm2yLNXTfocY1eb6T5U57gXRtsd0ZBi
h9GGd1GZ642btrcQLm73MunIszdslfQaY+J7P8ebM64q3zNSUZPgAdNl87F49XrcjdLNYOjs7FCU
EDsTGyCVCy13WqNc3pGMr/8mLK0xkgZdQzWUwXPY4QZXuAoqMtUSJehNUJEOBq1eWpi8Hy1AWh5U
kkwLFQXDUeyg+qCFyHNeFj/XBzs5OzwVIPPGfKhCBTn409scrOT4AMuEeeB5tPZVMqCy0ycD5osd
RR2IpjdCohxs6RJUIgzFEfQ+GC5i3mkhUzGpayUQVGgcR2E5kGBIklTetHSp2PQ/GUIrjMqNypj3
ZWdlWav55D4qSbWzsl70LTEqPzUkwLAP88fZU2fO6MJK9VkhuHryqKRlLwwNtuJsxNdfUiSGIgMV
TDe9GX0hIbHdsS7VfSwD9cVAKl/Wh1r/VNacaktQweuPcRAMD3FyAMtMLTdap1Q0/M36JlEzf+pU
XYJtT117gm2K5U4MFSb6rqDHS0Jn+OsFVMdglXg/U1dvUXTOnC/+C/85/BAU/6C/Cg8viDEyfx5W
rdsJn+QXP7see3cLdjg9H18hcpxDYeeql+a2dFw4aPRCuX+TrDc9iaQG0ZLdHYpBRNDIoFHFvkTl
TSOOeVLBclb7ADF4AJlg2auesQoagjRY9EPXr8Kwix7pSIrywPEzt5FGw76zEvHSkc6umID9AaXo
SbTBqTvOugKsC8TRCzcQJ8ZGabQVjOftxsPHodLxwhGbkIbiKlGVYml2NVYiTZQhO6TzhUNYf0XX
sHq6m1EQ+1TZH3H/HJbtu43KpueWTcQdYxwJ0AsDVETD8dmH6qrw2NUcNqIH+nMdsWX982l7hT7H
hMWLhS8isevYHRTRY2opRUxoMMyWTMbZ2DQ8NjfDvh0WeCLP9jXfgq3n7oFdNN7rBqytM3QfqjOP
FL5zh6WDI2KyIrFvzgZ4PgpS0hsVl4S8orqBL6US7SiP9sDBHSa4escDKWU6N40MrTIxOx9jpqp7
zQ5AV14f9BioxFj5tCQJMjy3SSgMTzC8pIKdkOEYfaVJZUYLdyjQClYbHc/Rj1Xyt36jI2hJ0+Ib
rAyGApUAGyFDXyQDWvCqkHhUMmADp1JkeItWDuOY9JZozZEMSBBUkFTI+vli2VD56oNhnKHmuJMM
SCq0iNXBVJY3yY1KjiE79XMctFYHExWvYUiIYQ99MiBB05uhMmQn5SdEGFJS88mBYI4dqOkeigwY
ttMHy00ZY+jvRWPz8/GsgqeW2LXvRa9RxavIgAqeRKMvDJuQCPT30SNVSYseIZUMZ1ExjWxv9Ny4
zXg0xzpU5cJzWXZUqPpg3ZNEGKLguSx7fbBtkTBVi5XPJjkTfJ4+GfAeHDjl+d8F6riUProagrFr
1jq4eD5W+vDTmARk51U9+zxO4YO9+H//n/8fPjK4Ir7Ci4iz3Yr9Pi+GF+OtPXHz/sB02PZGVJQW
ICrE74Uy/iZ5GBiBSla51L0aJmI9cdYfx98IGog0BNnuCLYn/X7KNjbYE2JbZB/SB8N8at9/HSgD
yHGF9XhqeRqmhy7A2c0DPtJoTu3dJR6AuKr5HlLIhrh0zxE3tkzGL98eh4sheeipScS1Q4Y4be2r
NDJf38dIyq1Db3sbzi2Zj0P3fZT9Voe3Yrm1bpqU6/aN2HLSSne++V7MOGKPCjFUarJi8MDRFjuX
fIbxWy6KNfYYeTUtKAu5ghWLp+NyaDHqS0JgsnoWVlnEoKWtAXd3bcZRKydRlA7YOHM0tjrQrepD
wNmDMD1+FS7uD/DQ9yFO7j+AxOo8uJ89hKOHLGTfI1xaOwrvj14Kz6gYXNw4B3PX3EJR4Dl8sPoE
nvrZCmmshU1EKTwubcGhK04D+fNDZEIpetGJjABvXDddhRFjV8E+6EULmp2JFUemZ2yYg33qiD47
ACtaBa1OKjtaaexw9Cho5ZHNSQKMx5NYVMXFePlQFtXLyIDeANNAq5uEQ8uESojPpdJnHH/wnGx2
aCrl1/lmDxUAvQtagvzP62hV0iOigmTogGD+SIJsmOz0tL6puDnYSiJhWljGLB9VqdJ7UstGHxwj
oDU+eFCWz2J6SJTqTCuGO9S57NyvWo4kVHpGKthpmA6GcHiePhmoYFnS02AoiuM1zCtJgZ4KQ0iq
kmXdU5GyjDlGQOt88FRQdtpjZidFW9XjwtbV2HXWTs63xa5tG3HW80VrVMWryGAo0Pt51YthBENI
HENi3VDY9lj+JEZOG1bbBvNGxaVvSBAkAz6DFqjqcaigwiIBM4Q5FGgEMI6vgu2CHpZ+vXwbMI30
ptln1OnB/b2tomeMsefs7YE+7Iuw2GK0t5XDde8U/PSn4/EgLxeXF7yFX31qgJCyBjTkJ8DT0Q57
l32O0RvPSb34IbNSV395Pg4wNjKBndTtoeXrsfPW671EOhQ45ZjWPa18tpPBfVpfsdPrUvsthQYI
pwmrvylsG4qBMQDqGZb/UKGjl2FgNpG4h905sNy/VYmdUrbdDhlg0Ab4Wx7HhvWGOHnGEhbXzXDE
NlT5fHRrbjTMNunONzTcips+mQzTwf/qPuV87jcxvY/igRB+ygNLmGxYrzt/wxk8LdV1/Fx/G+ww
XI+Nm7Zgs9EGOX4KoTlVSH50RRTLZlx7EIvieD9sMdqEXZddUNUjDkx+AI5u3yEKYxs2rpgKI4eB
8FJTCq7s3DyQJkOY2kXpPjtdl4grhzfKPiPpiFek4ezD1dvi9RhvxqbjtxAdGYDzZ0/DPSQODudM
cCOwGJ2NNbDaM5Beww04YREuZdICv5P7sGPPTRQMEa7lACorgFYkGzsVMZUf49hcTlL/ZR5as/oD
P4wZ0kpQ3ToqS1pLHOykdct0sEEPBq1WWnj6oBKk8mcHp4tJRcgYMUMcvA+fw3nj6gAlwQ7MY4xf
vg4YhuIsFuZJjT+T1JhnkgE7pj4YImB6GJNXOy4HWJl+uvkcbGcMnOMl9AD0y0YfVGIsX/1wG+/F
cRGCz6CFyVkug5URPTcqcJUkSKRU8vxP0GpXw00q6MlQ8fN5LFOOxxAkTBI3wycqidG74GwcliOv
IUmq+eA5TBePUbkT7SXpuLhV11ZP3Hk5AQ8eQH4ZqAiZB64Mp5Lx64LKn8qYJKwfJqRhQ29KBRU/
z+OLakO9B8MwHstp8LgDQaJW64YK8YcG8/yCJ9ZeD9tDah82xKFLQaipT4X5wY3YtOsE0oprEHDn
GDaJbnFIKkFxuCN2y3nPddFR+KUPfBO/uwT2V/ZgvRw/bh4kmuC7gQPEjBrQa2VZsyxZZywXVfib
BiHBsCrPV/PAbbZ19TeFdaE/1sU+RI/822DgPYO/vg/VdddXwHovC2IdVmw8hPjiP+002FeB1uFg
JUSFRy9hsKWrD5LB4A5EQmDHpAKkqzsU2PgHP4/KTX82CMHGpw92RtWKIqjIhurA3wQSitrwOFDK
0Bgty8FhAypPKkTOPlFfimOaSJ5UOCQXgu7y4NDKYJAc9S1L3lMdS+AYBjsQy3uwxco06XcSdQaX
Cv5WQxkqGCLhjBiCA9EkG4LWF8MT+jFZegH6So71onoNtKBpSX8XJUhF/TrXsXw5s4vlrx9aeB3w
GSw3egv6GPwiF9sMjR4qK7Us9ME2SyNhKLCNq3Uz2GP6sYD1qHqvbKtsExSWiyr8rfaH1wE9u8Fv
jX9bDJDBX99LZ32drchNilGUbNqgKZ4aNGjQoOHb4a+WDDRo0KBBww8HjQw0aNCgQYNGBho0aNCg
QSMDDRo0aNAg+N5kUNWaAfemcnQO8QUIDRo0aNDw14EXyKC3vwdtfV0iz79X09vfi+7+PmWuPoW/
ewa+ptfd142i1iw8aqnWezO3D1XttfCqyUSJHG8T6daIQoMGDRr+oqGQQVR6Dbp6C3AgzwmLsu9h
fo4vAlqa0CeKP7L6Id6MO4+LDfWIrXLHr2LNcaGxQZihHQ4ljpiQaoUtlYXPvrbY15WPrRlW+GXs
WYzIuIUJWU5walU/v6VBgwYNGv4SIWSQgMT0YtiJYp+c/QAnykJwIMcSP024h9iePvT01cKqyBXb
isNgVmCP1cUxyO/T+QmdfZ3IrPHCitJkND6z/ntR0FyC84XhSO/tRFNvF7o0z0CDBg0a/qIx7KJb
MpLT43GuyBlb831xtDQIR8uCcbYiHbmK0hf0pOPNyE0YluCAwe+4NTQ+gVF5Op6/xwpUt1bjRkks
Bl7i1qBBgwYNf+EQzyAecZkViKp7jPNVuWju6xGLX4TjBCJNrUlYnWaFLdWJsC5zwsQMX4R0dqOn
vxvVXY2IqXLH3MKnSOtoQm1vjzKuUNNWBrO8hwjubERybSg2liTi6y+ta9CgQYOGvxQoYwaR6VWi
+DtgWegsyv4WJmXewYzcEKR01cGh5B7eTbyOW81NSK17hPcTLmFjZT7KOnKxW86bkHETI9KtMTHN
HidqSpTFOfr7W+FR7o7xadaYnuWLhx2tz8YUNGjQoEHDXx5emE2kQYMGDRp+nNDIQIMGDRo0aGTw
Q4NrAgyGuo/f+ucna7keMMHPDQ9e+YzfvlcXYee2uhShPngP3ouLjbxqjVuCn03WX0Sen9AevKDN
UOCnqPmcl4HPHrw4PcFPHfOT1vy08Xf9RDE/M81PcKvChWX4yWv+19+v/6llflaZn/DVP07h4iGv
yserwPTrr/egQcPfMjQy+IHBRSn0l6nkQijqSmVUwly5TP2+PZU+F2mhwiKouLmKkbrkJBey50IW
gzFjxgyFSLhEIxdeeRW4FgJXX1PBe69du3bg14vgt+bVb/1T+eqvs8rrSBAq+E12LkDDdQT0wW/o
cxUwpp0Ldwz1vftvAtc24CI8qnBRl5///OdKvvX387v9Kvh9fC4ywxXf1OPc5jq/Q60CR3CRkZet
EUFwBTZ1wRwNGv7WoZHBDwxa8lzfl+DiLf/n//wfRaFw9TCSAJd+1F8ohIumLFu2TNnmClxcJYsr
bdHq5qIpXJFsMKgcqbQ//PBDRUgoFD6Hi7frL+jCVce4rJ4KXscV13g+F+LWX6mKipv7uWgMLWKu
Y0xwoe6hloKksh+8n+lW113l0pRc6OSHgD6hDQWuJjd4hTKCaxi/bIWwv//7v1dWiHoZSDCD19XV
oOFvFRoZ/BGgrpRF65TKmesC04rmAtdc5lE/vMJQEMNIDElw2UeunMX/XBaRS9dxbV791dG4ChJX
maKiotVLwuF5/M0l/7gwvbrCGZfB+4d/+AfMnTtXUey01rnEHq8hQZiZmWH48OHKuVzPlp4A1/Pl
4txcB5dLE1KR/uQnP1GUMZe21Pd6GH6hd0PvhedRxo0bpyx8z23m+7t4BgRJiQu08z58Nu/JNPE3
9w9enJ1LiHK5QIKri6lLbjJU9DLPgKSork89FEjUXM9Zg4YfA14gg9qMKPg+fAjf0DTUlJWipetP
OSG0F2XZ0ciuHHrd22+DypQwZc1fv/BM1JdLPrqHWKz4j4Ds7GxliUB1jIALsnORdyoxho+ooP75
n//52cLVXPKRYQou8cgQEdetpbX+5ptvwsvLS7nuP/7jP56FMmjxcx1hLmnIRd1VklDJxd7eXrHG
eS+CZESSIDkxdMNFtLmsowqOVzD0QnDhdp7LMA9JiyEtxuH5n4TFcBAVI0mN4Jq8DBXxGK1/poHn
ctlMEgwtcgrDWd8FvAeXo+Q9+WySKMcS+JvP5aL0+tAnA5Kjunj8q8iAXphGBho06KCQQVRuC5qy
/WC8bCaWLl+OxXMWYfqHI2CV+KcdPEt/cgM+yd88uPkqVCa6Yv2iGVgu+Zg3Yz5mfDYG9zK/69LV
Q6EeIfet4Z/29XtSCc2bN08J3RBcFJxWMxUTyYBgCEUdMzh06JCi9LgYPMHrjh8/rvznIvYMLTG+
zwFnKmkuSk6iINHpY+TIkUMO1tIy56ArQQ+F3gDDWIyVE3wGLW2Ca65yzIBeBclKX86dO6cQQ1hY
mEI2BMMnv//975UQEkFlTM+Ey5DOmTNH2fd98NVXX2H//v3K8xmKosdDAuRv5mXMmDEDZ+qgTwYk
Ui5GT2hkoEHD62HYRfcUJKbFwXrPBtwNGBgM7C+Gl5sPMspKYGdmgH13I9He1Ql3s6UwOGaDIsV4
70P6wxswlE63erUhLjrGK5cSnbUlsNjN/auxatc+3LbRLdbe398Ln0u7lf2rt5vgyBlP9PADqVUx
OGGyFKsN98InXV3YvgsR9w5g167dItsVxbb/YgDUoy2Fj3Fg8RLZvxWW189gzd6ziMjMwPXt6+D8
tFJ3Ukc2PNz8kNfUDzSk4dKRzcqz1x28ijSut14ehD1bNmD3pg3Yt+IUXN2vYPFSI1j55iiX1yW4
YbuSv9UwvaJToHIjhNtew8LRU7HrvBsqn3/gVQGtdYY1ONuHJEAyoLXP2DQXeqeiVC13goqL1jbH
EXgOY/xffPGFEtqh8ma4hGA4htczTs+BTYILtbu4uChjDgz9UPRBQqTSZNnRK+AYBBU+xyH4XM7G
UclABa18xt/1hQPVQy3kT+LicVr/zPOnn36qLG7PMM73BT0Bkh/vz3DXG2+8oZASfzPUNX78+IEz
dfguZEAvjWGxl0EjAw0/Jgy76JWNJN9rOHjZAXmNQHdzFXIyc1FRU4ea+nqk3zfGhtO3UdDZi4Lg
86LcjyFQdG1HxlNsnz8L2y5exMXzhzB9zGjsv0UrtBfhd3djwZr9uCjH5o58A/N22CkPKw83x5KV
m5T92xZ9io+m7kA9P2rUXo34MB8cM5wIE2ddvJtkUxlvg3nvvY1ZB+3w+LE99mzbjPvpPfLwclzZ
shAnbj/GY/dLmPneLzH+iD8q012w65IrKkVvdTZUIDsrD5XMR6NY4mWpuHXzDM7Ks3evXiSEcBN1
bWW4u2003v94Me6YHcPYaSY4f3U/jprfRWp+Ay6vnA3Do5K/i+exctpXWHHAQ3nDmihPeozz21dg
8pzteBSRhDI+Q8AY+fz58xULmpYzlToV2Zo1axRrmpY9iUIFFfvu3buVMnnrrbcUz4KDzlSAVFSD
BzCpyBn7pwImMZA8qPQZ8uH4gjoTieDvM2fOKPuoEBkGIjhb58KFC0poRyUDeh8MITHUxemq9CCY
F1UY8mGYRh+03JluwtbWVhmDIEh4Q03J5DNIQPXSrl4FekEMA1GR89kMc9FbIlHxNwfB6TlwWwVD
cDt37lS2Wdb0Huip0dMZTBwqeE81TDYUNDLQ8GOCjgz8buCQlRsKRJ9Vx9hj48yZ+PLdN7H8bgaQ
7Ywrto7IUbRgNqzv3UZwOVD65CzGvzEaK1YsFaWzGDOmzMSh2zHKTbvKA3FwwWJFGc2esA6WEer0
wxxYbVqr7F80YSH23AlGm96qOOG3N2Ovh95UxeoY3Lp6HIGKXmmAj+1JXIvuRG/2fRitu6mcQsTe
24l9vnJS5QNsu+6Jml6gOOgW1sycgeHvvIcNrumoTffHnqWLsEievXz6CMzZfRUMSCW4nce5S5Lu
fFtMOO6Prlwf3JQ8hkT7YvFbw7Fi5XIlvXNnTMba/R4QvtRDGWz2L8XEmfNxI1TnjVRUlD9TMFT6
NjY2yrRIWrkMtdBSV8NEBBUOlRinbTIeTgXPgc3U1FRFmQ2eTcTfjNczHEPPgx6FOnuHg8ucmqqG
jOgRREZGKtu8rxrS4bMonJevkgHvQyXKe/7iF79QFCUHlCn0PEhqJB59kAwYXoqNjVVIgXkk6LHQ
IyKB6JMCxxeGDRumkNerwHv+y7/8i6LEWZZMIz0PblM4bsLj+jOh6A1wGm9gYCCOHj2qhJboRZDw
+Pu7QCMDDT8mDLvoloTEzGRYHT4L74Tn8fqYK9tgn9WK7sQ72Hv5lqg90c0hZzB71X7EtgCN2V44
seMYCgeNMfd1diDKJxADgRpUBJzAqO2Oyna6fxAy6wcGc0scMXr1CeTXPbeSg6w2Yr/P8xeJUB4B
G6vTCGNIB+XwsTsHqwS5vioG+9aeQPHApf7n12OHU45otDKc230ST7LVYBIQdmEn/MoyYL3NBNds
dIOn5e67YbjnhkIG0S4XceVqPJBpjYlnA9Ge6oprd20RJ1bwje0miH/Jp1dbsryxW8hl/YFbqHj+
OMXqZSyaysnPz0+JcTs6OirKmOCMHH0yoOKkB8F3DajIfX19lXOp1DjFczAZMGxEgqHiVeP3JAPV
2qZFTSIhSAaM8xPbtm17RgYq6AVwkFofDPPw+QwnqWAaqcgHgwr3k08+UfJHr+P9999XZiVxIJuh
MRICiUsFPQMSgUqWrwLfxxjqhTtC36PRB8dSVOXN8Rh1RhHBck1KShr4pQPDTpyZ9TJoZKDhx4Rh
F11jEZ3fisZ4B6yeprO+aA1O2Hga2c296G9JwIGVUzF+6gysnDYZnw7/AksvPUJfVz1CbA9i5jid
9Thz5hKcc0xCb3cXjk98Fx+O191n2hRj2GTpFJWz8Ty8/+ko3fljFuGwdwbaxeNId7+M5TOmYfj7
v8HvPxsnadgBv7RyRN/bjA/eewvGt8KQF2GLER+9jRFbbqJcCCjl/gHMns0xg8UYP+IzbLLXhZeq
gqywdPLEgXzMwNRtV1DZ2oiCIBtsXDBF9s3FnFEj8MHwL7H/4mUYfPEO3pm6DyHuF/DlrJW4Ze+A
XYs/xx7nXKQF3cXSKZN06Z05GztOBaAdTXDZsVbSPwe7rfxQNWjclpYwp3xSoe7du1eJtdNip1Jh
+IXjAYPJgPfnILL6PgCtcM5KYgiJM5L0YWBgoIR5OH2SYHiI91TJIC4u7plnwHAVlTXLgt6G/rRQ
zhjiLCX9wV7ei2MLDFfxWl2+Z+Kf/umfFCtdfXNaBUNZTB/n9zNsQ6+Cz2A4iWGon/3sZ8rMHxW8
P8tEHdR+FThmwPMHg3mjV8TjKkgaLCsSpVoOqnegznJiGXDarj6Yr3fffXfg19ehkYGGHxMGppby
8wc9qMzLVCxDSraelmupLEJaagoKSmtQX1uKvLI65VPVwggoytCdn5KSjuJq3Qyb5qoiZKbp9mfm
Pvc2OhqrkZuRrjs/vfjZusltNaXISElFZnYecjPT5Hge6tq60FxbItZrDkqrG9HeVIusrBzkFVfo
FstpLYO7hS6eb7plJc75F+luhi6U5WQMpCkFuTXqSgsdKMnnvVNRWFKNyooCFJWUolDun1NUjsam
RlSUFqGqoRU1JdkoqdcNmFblpg7cKxW5RfXoQy+qc7OQlTf0rCeGW6iwOA2U//nZhhEjRigKnMqJ
8/31lSotbpIDFRbBGURU4PQKeC4HafVBJUeiIB48eKB4BfQ29AelVTBuTiXJ9DMUxQFkFfRYqOAZ
n1fBcQi+ecw4u1p+FM464tRUhrn0QXJjKIxTaRnX139DmfkyNDR8QfHTa1DDVt8EjpUM9RkJhpAY
JtInSY6z8HwSnAqmjc9jGVI4uK16SSo45kCyeBk0MtDwY8Jf7UtnXTXFuLFLN9Nn+3kvqOvw/CVC
Vf76bx6/DPqDy/rbQ4HH9RXwtwHT8jrp+SHxTfl5HQyV7leVAUlyKKJ8HTD0pc7m0qDhbx1/tWSg
QcMfGwzbcdxDg4YfAzQy0KDhJeD4w1DjFho0/C1CIwMNGjRo0KCRgQYNGjRo0MhAgwYNGjQINDLQ
oEGDBg0aGWjQoEGDBo0MNGjQoEGDQCMDDRo0aNCgkYEGDRo0aNDIQIMGDRo0CDQy0KBBgwYNGhlo
0KBBgwaNDDRo0KBBg0AjAw0aNGjQoJGBBg0aNGgA/j+c+d1KggKL+wAAAABJRU5ErkJggg==
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image004.png

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
cuRIobjhWLa8ZlxxH6FLDMX9o8z8kPRSlP5zhBr2etPP8N38ffIdr6IKmecPYrO/P7xNNfCj8XY8
eNWg58sU3EDYri3YsH491i+xwjA9I6xNfl0Wol8HC1/xed0YPsP8HCz81oWF/yspzziDvftCcUMc
vM7HsTXzYWJqDqslG5HUEGXznDLcjj+NQxduI+3cYZy/Kpu1npt4AAExYo1BoACn9p/ClcwWlGVd
NS4fWI21x5rPO/6CClwN88dcExOYWs7Djrg3yVIiJ+sU3BZawszMDGYWlli58/xL85tbDha+4sPC
Z94GFn7rwsJnlAYWvuLDwmfeBhZ+68LCZ5QGFr7iw8Jn3gYWfuvCwmeUBha+4sPCZ94GFn7rwsJn
lAYWvuLDwmfeBhZ+68LCZ5QGFr7iw8Jn3gYWfuvCwmeUBha+4sPCZ94GFn7rwsJnlAYWvuLDwmfe
BhZ+6yJZ4evr6yMwMFC+xUiBmzdvsvAVHBY+8zaw8FsXyQp/0qRJ4ipLeXl5ki8lJSVims3mjkmp
nD59Gv369ZO/w20DFj7TlmDhty6SFf7SpUvRpUuXpgtsSLR8+eWX6NatW7PHpFR69uwpDtW0JZRN
+MbGxti2bZt8i2F+GZGRkZg4caJ8S/lg4b8n6uvrUVFRgdLSUsmXYcOG4dixY80ek1KhJTJra5tZ
JEjCKJvwjYyMYGhoiH379nFpptD3NDo6utljXPbB0tISOjo68k+T8sHCZ1odXV1dXLhwQb7FSAll
E35ERITYQhtHC0Jx+Un54IMPoKKi0uwxLuPEexmt9a+ssPCZVodaVbRULiM9lE34zM9DlaHU1FT5
FiM1WPhMq2Nubi52EzLSg4UvLagVGxcXJ99ipAYLn2l1FixYgJCQEPkWIyVY+NKChS9tWPhMq+Pi
4sKR0RKFhS8tWPjShoXPtDpubm7YtGmTfIuREix8acHClzYsfKbVWb16NXx8fMSpiIy0YOFLCxa+
tGHhM63OmjVrsHz5ctTV1cn3MFKBhS8tWPjShoXPtDrbt2/HokWL2lxSmrYAC19asPClDQufaXX2
7NkDW1tb1NTUyPcwUoGFLy1Y+NKGhc+0OpSSct68eaiurpbvYaQCC19asPClDQufaXVOnjwpLlpS
VVUl38NIBRa+tGDhSxsWPtPq0LKxM2bMYOFLEBa+tGDhSxsWPtPqJCQkiGtIV1ZWyvcwUoGFLy1Y
+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
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image005.png

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
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/FUNDAMENTAL/DAY06/CASE/01/index.files/image006.png

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
LD0x2bdLtoUnosrBMCNNkH3aJMTkHpOEmwSFhMSKFSsqvYhEijfknp/0vqTn5eLiolQfSq+MQ4dE
2sAwI82RIhIJCtm6X8JNVv3v0aOHshJJRESEelX5kcniYWFhSjWcrLohASZTEGR4VIpbtL5RJZER
MczorSlrJj7PUu4NZT3PQX7Jy238InITXxbV3bx5M2bOnKm8WNu1a6eUucuiulJA8kvDRaork5OT
sXv3bmXOl/z5EmCy8omsPM/pBUTaxzCjt/LswT4M/uor1PxOXQuxzUjsvVG+q7VL6EjRxcmTJ5UV
/6W3JhsaSq9J5rndvXsX6emlWoxRWV1DQkruf8m8LysrK2UYce3atUrvS+7nEZH5YJjRW3l8fS36
fGKLFZcTlTf+xIcpyHqxWGL5k96YbHUiJcZSRCLLa8livHKfTfZtCw8Pf2UzSrm3JSuTyMrzixcv
Vu7Lyfyv4teIrIvIAg4i88Uwo7eSfG093OoOxmn1WAtkk1EpIpHVDWSRXgk2ue+2ceNGZQ1JCTA5
L6tCHDlyhKXzRDrCMKO3kha3EU5//gZ2Q8Yow3xjFu1CbIp2KvvkXpsMPTo7OyurHcjf8ezZs+qj
RKQ3DDN6K1oPs2KyAoSsRv/ykCMR6Q/DjN6KMsxYxw3HNT7NSiohZdhR7q0RkX4xzOitJF9dA+fq
TtiZpJ7QKIYZkTEwzOitpMYFY2LHMTj8WD2hUQwzImNgmNFbKyws+0nSZY1hRmQMDDPSNYYZkTEw
zEjXGGZExsAwI11jmBEZA8OMdI1hRmQMDDPSNYYZkTEwzEjXGGZExsAwI11jmBEZg+7DbNeuXeoZ
MiLZm4xhRqR/ug2zpKQkZYHZvXv3qmfIiKKiouDi4qIsOExE+qXbMMvOzla2wK9RowYsLS3ZDNpq
1aqFrl27KnudEZF+6TbMhAw1RkREKPtYsRmzyT2zhIQEs1h6i4jenq7DjIiIjIFhRkREZo9hRkRE
Zo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9h
RkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREZo9hRkREutC3b1+G
GVGxp0+fIjk5GY8fP2ZjYzOD9uTJEzx48AD29vY4cOCA+pv8yzHMyGzt27cPnTt3Rr9+/eDs7MzG
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
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ----
Content-Type: text/html
Content-ID: <frame-102-0672c886-12fd-433e-b6ac-3923c035dec7@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--keJSGVje9Ibqhz2hI60v1Gz23HSQbH5Vo94WlOvNNJ------
