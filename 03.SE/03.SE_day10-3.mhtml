From: <Saved by Blink>
Subject: EXERCISE
Date: Thu, 15 Mar 2017 04:50:56 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----"

------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: text/html
Content-ID: <frame-330-e4e3b227-a69b-4900-a60d-913d1b3bb84b@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.html

<html xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta http-equiv=3D"Cont=
ent-Type" content=3D"text/html; charset=3DUTF-8">=20
  <title>EXERCISE</title>=20
  =20
  =20
  =20
  =20
  <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/tts=
Page/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/index.css" rel=
=3D"Stylesheet">=20
  <link type=3D"text/css" href=3D"http://pdf7.tarena.com.cn/tts8_source/tts=
Page/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/jquery.snippet.c=
ss" rel=3D"Stylesheet">=20
 </head>=20
 <body>=20
  <div class=3D"source_style_exercise">=20
   <div>=20
    <h3>1 =E4=B8=8B=E5=88=97=E5=B1=9E=E4=BA=8E=E7=BA=BF=E7=A8=8B=E5=AE=89=
=E5=85=A8=E7=B1=BB=E7=9A=84=E6=98=AF=EF=BC=9A</h3>=20
    <p>A.StringBuffer</p>=20
    <p>B.StringBuilder</p>=20
    <p>C.ArrayList</p>=20
    <p>D.HashMap</p>=20
    <p class=3D"answerTitle">=E5=8F=82=E8=80=83=E7=AD=94=E6=A1=88</p>=20
    <p>=E6=9C=AC=E9=A2=98=E6=AD=A3=E7=A1=AE=E7=AD=94=E6=A1=88=E4=B8=BAA=E3=
=80=82</p>=20
    <p>StringBuffer=E5=B1=9E=E4=BA=8E=E7=BA=BF=E7=A8=8B=E5=AE=89=E5=85=A8=
=E7=9A=84=E7=B1=BB=EF=BC=9BStringBuilder=E3=80=81ArrayList=E3=80=81HashMap=
=E6=98=AF=E9=9D=9E=E7=BA=BF=E7=A8=8B=E5=AE=89=E5=85=A8=E7=B1=BB=E3=80=82</p=
>=20
   </div>=20
   <div>=20
    <h3>2 =E4=BD=BF=E7=94=A8BlockingQueue=E5=AE=9E=E7=8E=B0=E7=94=9F=E4=BA=
=A7=E8=80=85=E5=92=8C=E6=B6=88=E8=B4=B9=E8=80=85=E6=A8=A1=E5=9E=8B</h3>=20
    <p class=3D"answerTitle">=E5=8F=82=E8=80=83=E7=AD=94=E6=A1=88</p>=20
    <p>=E5=9C=A8=E5=B7=A5=E4=BD=9C=E4=B8=AD=EF=BC=8C=E5=8F=AF=E8=83=BD=E4=
=BC=9A=E7=A2=B0=E5=88=B0=E8=BF=99=E6=A0=B7=E4=B8=80=E7=A7=8D=E6=83=85=E5=86=
=B5=EF=BC=9A=E6=9F=90=E4=B8=AA=E6=A8=A1=E5=9D=97=E8=B4=9F=E8=B4=A3=E4=BA=A7=
=E7=94=9F=E6=95=B0=E6=8D=AE=EF=BC=8C=E8=BF=99=E4=BA=9B=E6=95=B0=E6=8D=AE=E7=
=94=B1=E5=8F=A6=E4=B8=80=E4=B8=AA=E6=A8=A1=E5=9D=97=E6=9D=A5=E8=B4=9F=E8=B4=
=A3=E5=A4=84=E7=90=86=E3=80=82=E4=BA=A7=E7=94=9F=E6=95=B0=E6=8D=AE=E7=9A=84=
=E6=A8=A1=E5=9D=97=EF=BC=8C=E5=88=99=E5=BD=A2=E8=B1=A1=E5=9C=B0=E7=A7=B0=E4=
=B8=BA=E7=94=9F=E4=BA=A7=E8=80=85=EF=BC=9B=E8=80=8C=E5=A4=84=E7=90=86=E6=95=
=B0=E6=8D=AE=E7=9A=84=E6=A8=A1=E5=9D=97=EF=BC=8C=E5=88=99=E7=A7=B0=E4=B8=BA=
=E6=B6=88=E8=B4=B9=E8=80=85=E3=80=82=E5=9C=A8=E7=94=9F=E4=BA=A7=E8=80=85=E4=
=B8=8E=E6=B6=88=E8=B4=B9=E8=80=85=E4=B9=8B=E9=97=B4=E5=9C=A8=E5=8A=A0=E4=B8=
=AA=E7=BC=93=E5=86=B2=E5=8C=BA=EF=BC=8C=E6=88=91=E4=BB=AC=E5=BD=A2=E8=B1=A1=
=E7=9A=84=E7=A7=B0=E4=B9=8B=E4=B8=BA=E4=BB=93=E5=BA=93=EF=BC=8C=E7=94=9F=E4=
=BA=A7=E8=80=85=E8=B4=9F=E8=B4=A3=E5=BE=80=E4=BB=93=E5=BA=93=E4=BA=86=E8=BF=
=9B=E5=95=86=E5=93=81=EF=BC=8C=E8=80=8C=E6=B6=88=E8=B4=B9=E8=80=85=E8=B4=9F=
=E8=B4=A3=E4=BB=8E=E4=BB=93=E5=BA=93=E9=87=8C=E6=8B=BF=E5=95=86=E5=93=81=EF=
=BC=8C=E8=BF=99=E5=B0=B1=E6=9E=84=E6=88=90=E4=BA=86=E7=94=9F=E4=BA=A7=E8=80=
=85=E6=B6=88=E8=B4=B9=E8=80=85=E6=A8=A1=E5=BC=8F=E3=80=82=E7=94=9F=E4=BA=A7=
=E8=80=85=E5=92=8C=E6=B6=88=E8=B4=B9=E8=80=85=E6=A8=A1=E5=9E=8B=E7=9A=84=E7=
=BB=93=E6=9E=84=E5=A6=82=E5=9B=BE-1=E6=89=80=E7=A4=BA=E3=80=82</p>=20
    <div class=3D"image">=20
     <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V=
06/JAVASE02/DAY05/EXERCISE/01/index.files/image001.png">=20
     <p>=E5=9B=BE-1</p>=20
    </div>=20
    <p>=E5=9C=A8=E5=AE=9E=E9=99=85=E5=B7=A5=E4=BD=9C=E4=B8=AD=EF=BC=8C=E5=
=85=B8=E5=9E=8B=E7=9A=84=E7=94=9F=E4=BA=A7=E8=80=85=E6=B6=88=E8=B4=B9=E8=80=
=85=E6=A8=A1=E5=9E=8B=E7=9A=84=E6=A1=88=E4=BE=8B=E6=98=AF=E6=B5=81=E5=AA=92=
=E4=BD=93=E5=9C=A8=E7=BA=BF=E7=8E=B0=E5=9C=A8=E6=92=AD=E6=94=BE=E3=80=82=E6=
=B5=81=E5=AA=92=E4=BD=93=E4=B8=8B=E8=BD=BD=E6=98=AF=E7=94=9F=E4=BA=A7=E8=80=
=85=EF=BC=9B=E6=B5=81=E5=AA=92=E4=BD=93=E6=92=AD=E6=94=BE=E6=98=AF=E6=B6=88=
=E8=B4=B9=E8=80=85=EF=BC=8C=E5=A6=82=E5=9B=BE-2=E6=89=80=E7=A4=BA=E3=80=82<=
/p>=20
    <div class=3D"image">=20
     <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V=
06/JAVASE02/DAY05/EXERCISE/01/index.files/image002.png">=20
     <p>=E5=9B=BE-2</p>=20
    </div>=20
    <p>=E4=BB=A5=E4=B8=8B=E6=A1=88=E4=BE=8B=E4=BD=BF=E7=94=A8BlockingQueue=
=E5=AE=9E=E7=8E=B0=E7=94=9F=E4=BA=A7=E8=80=85=E5=92=8C=E6=B6=88=E8=B4=B9=E8=
=80=85=E6=A8=A1=E5=9E=8B=EF=BC=8C=E6=A8=A1=E6=8B=9F=E4=BA=86=E6=B5=81=E5=AA=
=92=E4=BD=93=E4=B8=8B=E8=BD=BD=E8=A7=86=E9=A2=91=E6=95=B0=E6=8D=AE=E5=92=8C=
=E6=92=AD=E6=94=BE=E8=A7=86=E9=A2=91=E7=9A=84=E8=BF=87=E7=A8=8B=E3=80=82</p=
>=20
    <p>=E5=AE=9E=E7=8E=B0=E6=AD=A4=E6=A1=88=E4=BE=8B=E9=9C=80=E8=A6=81=E6=
=8C=89=E7=85=A7=E5=A6=82=E4=B8=8B=E6=AD=A5=E9=AA=A4=E8=BF=9B=E8=A1=8C=E3=80=
=82</p>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=80=EF=BC=9A=E5=88=9B=E5=BB=
=BA=E7=94=9F=E4=BA=A7=E8=80=85</p>=20
    <p>=E9=A6=96=E5=85=88=E6=96=B0=E5=BB=BADonwload=E7=B1=BB=EF=BC=8C=E5=9C=
=A8=E8=AF=A5=E7=B1=BB=E4=B8=AD=E6=A8=A1=E6=8B=9F=E8=A7=86=E9=A2=91=E6=95=B0=
=E6=8D=AE=E4=B8=8B=E8=BD=BD=E7=9A=84=E8=BF=87=E7=A8=8B=EF=BC=8C=E5=85=B6=E4=
=B8=ADBlockingQueue=E5=AF=B9=E8=B1=A1=E5=88=99=E6=98=AF=E5=9C=A8=E4=B8=8A=
=E6=96=87=E4=B8=AD=E6=8F=90=E5=88=B0=E7=9A=84=E7=BC=93=E5=86=B2=E5=8C=BA=EF=
=BC=8CDonwload=E5=AF=B9=E8=B1=A1=E8=B4=9F=E8=B4=A3=E5=90=91=E8=AF=A5=E7=BC=
=93=E5=86=B2=E5=8C=BA=E5=AD=98=E5=82=A8=E6=95=B0=E6=8D=AE=EF=BC=8C=E4=BB=A3=
=E7=A0=81=E5=A6=82=E4=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02=
/DAY05/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a =
class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source=
/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.html#">text=
</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tt=
s8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.ht=
ml#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippet-formatt=
ed sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=3D"s=
h_symbol">.</span>util<span class=3D"sh_symbol">.</span>concurrent<span cla=
ss=3D"sh_symbol">.</span>BlockingQueue<span class=3D"sh_symbol">;</span></l=
i><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh=
_keyword">public</span> <span class=3D"sh_keyword">class</span> Donwload <s=
pan class=3D"sh_keyword">implements</span> Runnable <span class=3D"sh_cbrac=
ket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">pr=
ivate</span> <span class=3D"sh_keyword">final</span> BlockingQueue<span cla=
ss=3D"sh_symbol">&lt;</span><span class=3D"sh_predef_func">Object</span><sp=
an class=3D"sh_symbol">&gt;</span> queue<span class=3D"sh_symbol">;</span><=
/li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <s=
pan class=3D"sh_function">Donwload</span><span class=3D"sh_symbol">(</span>=
BlockingQueue<span class=3D"sh_symbol">&lt;</span><span class=3D"sh_predef_=
func">Object</span><span class=3D"sh_symbol">&gt;</span> q<span class=3D"sh=
_symbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;queue <span class=3D"sh_symbol">=3D</sp=
an> q<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_keyword">public</span> void <span class=3D"sh_function">run</span>=
<span class=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></l=
i><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_key=
word">try</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_keyword">while</span> <span class=3D"sh_symbol">(</span><span class=3D"sh=
_keyword">true</span><span class=3D"sh_symbol">)</span> <span class=3D"sh_c=
bracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System<span class=3D"sh_symb=
ol">.</span>out<span class=3D"sh_symbol">.</span><span class=3D"sh_function=
">println</span><span class=3D"sh_symbol">(</span><span class=3D"sh_string"=
>"=E4=B8=8B=E8=BD=BD=E8=A7=86=E9=A2=91=E6=95=B0=E6=8D=AE"</span><span class=
=3D"sh_symbol">+</span>index<span class=3D"sh_symbol">);</span></li><li>&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;queue<span class=3D"sh_symbol">.</span><span class=3D"sh_=
function">put</span><span class=3D"sh_symbol">(</span><span class=3D"sh_fun=
ction">produce</span><span class=3D"sh_symbol">());</span>&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span clas=
s=3D"sh_keyword">catch</span> <span class=3D"sh_symbol">(</span>Interrupted=
Exception ex<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbracket">=
{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span clas=
s=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;int index<span class=
=3D"sh_symbol">=3D</span><span class=3D"sh_number">0</span><span class=3D"s=
h_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywor=
d">public</span> <span class=3D"sh_predef_func">Object</span> <span class=
=3D"sh_function">produce</span><span class=3D"sh_symbol">()</span> <span cl=
ass=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;<span class=3D"sh_keyword">try</span> <span class=3D"sh_cbracket"=
>{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;Thread<span class=3D"sh_symbol">.</span><span class=3D"sh_fu=
nction">sleep</span><span class=3D"sh_symbol">(</span><span class=3D"sh_num=
ber">5000</span><span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <span=
 class=3D"sh_keyword">catch</span> <span class=3D"sh_symbol">(</span>Interr=
uptedException e<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbrack=
et">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;e<span class=3D"sh_symbol">.</span><span class=3D"sh_func=
tion">printStackTrace</span><span class=3D"sh_symbol">();</span></li><li>&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}=
</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">return</span> <span class=3D"sh_string">"=E8=A7=86=E9=A2=91=
=E6=95=B0=E6=8D=AE"</span><span class=3D"sh_symbol">+</span>index<span clas=
s=3D"sh_symbol">++;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"s=
h_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li></ol>=
</pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:none;"=
>import java.util.concurrent.BlockingQueue;

public class Donwload implements Runnable {
	private final BlockingQueue&lt;Object&gt; queue;
	public Donwload(BlockingQueue&lt;Object&gt; q) {
		queue =3D q;
	}
	public void run() {
		try {
			while (true) {
				System.out.println("=E4=B8=8B=E8=BD=BD=E8=A7=86=E9=A2=91=E6=95=B0=E6=8D=
=AE"+index);
				queue.put(produce());			=09
			}
		} catch (InterruptedException ex) {
		}
	}
	int index=3D0;
	public Object produce() {
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		return "=E8=A7=86=E9=A2=91=E6=95=B0=E6=8D=AE"+index++;
	}
}
</pre></div></div>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=BA=8C=EF=BC=9A=E5=88=9B=E5=BB=
=BA=E6=B6=88=E8=B4=B9=E8=80=85</p>=20
    <p>=E6=96=B0=E5=BB=BA=E7=B1=BBPlayer=EF=BC=8C=E5=9C=A8=E8=AF=A5=E7=B1=
=BB=E4=B8=AD=E5=AE=9E=E7=8E=B0=E6=A8=A1=E6=8B=9F=E6=92=AD=E6=94=BE=E8=A7=86=
=E9=A2=91=E7=9A=84=E8=BF=87=E7=A8=8B=EF=BC=8C=E5=85=B6=E4=B8=ADBlockingQueu=
e=E5=AF=B9=E8=B1=A1=E4=B9=9F=E6=98=AF=E5=9C=A8=E4=B8=8A=E6=96=87=E4=B8=AD=
=E6=8F=90=E5=88=B0=E7=9A=84=E7=BC=93=E5=86=B2=E5=8C=BA=EF=BC=8CPlayer=E5=AF=
=B9=E8=B1=A1=E8=B4=9F=E8=B4=A3=E4=BB=8E=E8=AF=A5=E7=BC=93=E5=86=B2=E5=8C=BA=
=E4=B8=AD=E5=8F=96=E6=95=B0=E6=8D=AE=EF=BC=8C=E4=BB=A3=E7=A0=81=E5=A6=82=E4=
=B8=8B=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02=
/DAY05/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a =
class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source=
/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.html#">text=
</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tt=
s8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.ht=
ml#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippet-formatt=
ed sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=3D"s=
h_symbol">.</span>util<span class=3D"sh_symbol">.</span>concurrent<span cla=
ss=3D"sh_symbol">.</span>BlockingQueue<span class=3D"sh_symbol">;</span></l=
i><li><span style=3D"display:none;">&nbsp;</span></li><li><span class=3D"sh=
_keyword">public</span> <span class=3D"sh_keyword">class</span> Player <spa=
n class=3D"sh_keyword">implements</span> Runnable  <span class=3D"sh_cbrack=
et">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">pri=
vate</span> <span class=3D"sh_keyword">final</span> BlockingQueue<span clas=
s=3D"sh_symbol">&lt;</span><span class=3D"sh_predef_func">Object</span><spa=
n class=3D"sh_symbol">&gt;</span> queue<span class=3D"sh_symbol">;</span></=
li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <sp=
an class=3D"sh_function">Player</span><span class=3D"sh_symbol">(</span>Blo=
ckingQueue<span class=3D"sh_symbol">&lt;</span><span class=3D"sh_predef_fun=
c">Object</span><span class=3D"sh_symbol">&gt;</span> q<span class=3D"sh_sy=
mbol">)</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;queue <span class=3D"sh_symbol">=3D</span>=
 q<span class=3D"sh_symbol">;</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span =
class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">public</span> void <span class=3D"sh_function">run</span><s=
pan class=3D"sh_symbol">()</span> <span class=3D"sh_cbracket">{</span></li>=
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keywo=
rd">try</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_=
keyword">while</span> <span class=3D"sh_symbol">(</span><span class=3D"sh_k=
eyword">true</span><span class=3D"sh_symbol">)</span> <span class=3D"sh_cbr=
acket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_function">co=
nsume</span><span class=3D"sh_symbol">(</span>queue<span class=3D"sh_symbol=
">.</span><span class=3D"sh_function">take</span><span class=3D"sh_symbol">=
());</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span> <sp=
an class=3D"sh_keyword">catch</span> <span class=3D"sh_symbol">(</span>Inte=
rruptedException ex<span class=3D"sh_symbol">)</span> <span class=3D"sh_cbr=
acket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<sp=
an class=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"sh_cbracket">}</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;void <span clas=
s=3D"sh_function">consume</span><span class=3D"sh_symbol">(</span><span cla=
ss=3D"sh_predef_func">Object</span> x<span class=3D"sh_symbol">)</span> <sp=
an class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;System<span class=3D"sh_symbol">.</span>out<span class=3D"sh=
_symbol">.</span><span class=3D"sh_function">println</span><span class=3D"s=
h_symbol">(</span><span class=3D"sh_string">"=E6=92=AD=E6=94=BE"</span><spa=
n class=3D"sh_symbol">+</span>x<span class=3D"sh_symbol">);</span></li><li>=
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_cbracket">}</span></li><li><span =
class=3D"sh_cbracket">}</span></li></ol></pre><pre class=3D"snippet-textonl=
y sh_sourceCode" style=3D"display:none;">import java.util.concurrent.Blocki=
ngQueue;

public class Player implements Runnable  {
	private final BlockingQueue&lt;Object&gt; queue;
	public Player(BlockingQueue&lt;Object&gt; q) {
		queue =3D q;
	}
	public void run() {
		try {
			while (true) {
				consume(queue.take());
			}
		} catch (InterruptedException ex) {
		}
	}
	void consume(Object x) {
		System.out.println("=E6=92=AD=E6=94=BE"+x);
	}
}
</pre></div></div>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E4=B8=89=EF=BC=9A=E5=90=AF=E5=8A=
=A8=E7=BA=BF=E7=A8=8B</p>=20
    <p>=E9=A6=96=E5=85=88=E6=96=B0=E5=BB=BASetup=E7=B1=BB=EF=BC=8C=E5=9C=A8=
=E8=AF=A5=E7=B1=BB=E7=9A=84main=E6=96=B9=E6=B3=95=E4=B8=AD=EF=BC=8C=E5=88=
=9B=E5=BB=BA=E7=BC=93=E5=86=B2=E5=8C=BABlockingQueue=E5=AF=B9=E8=B1=A1=E5=
=B9=B6=E5=B0=86=E8=AF=A5=E5=AF=B9=E8=B1=A1=E4=BC=A0=E7=BB=99=E4=B8=8B=E8=BD=
=BD=E5=99=A8=E5=92=8C=E6=92=AD=E6=94=BE=E5=99=A8=EF=BC=8C=E8=BF=99=E6=A0=B7=
=E5=B0=B1=E4=BF=9D=E8=AF=81=E4=BA=86=E4=B8=8B=E8=BD=BD=E5=99=A8=E5=92=8C=E6=
=92=AD=E6=94=BE=E5=99=A8=E4=BD=BF=E7=94=A8=E4=BA=86=E7=9B=B8=E5=90=8C=E7=9A=
=84=E7=BC=93=E5=86=B2=E5=8C=BA=E3=80=82=E4=BB=A3=E7=A0=81=E5=A6=82=E4=B8=8B=
=E6=89=80=E7=A4=BA=EF=BC=9A</p>=20
    <div class=3D"snippet-container" style=3D"undefined;"><div class=3D"sh_=
acid snippet-wrap"><div class=3D"snippet-menu sh_sourceCode" style=3D"displ=
ay:none;"><pre style=3D"display: none;"><a class=3D"snippet-copy sh_url" hr=
ef=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02=
/DAY05/EXERCISE/01/index_answer.html#" style=3D"display: none;">copy</a><a =
class=3D"snippet-text sh_url" href=3D"http://pdf7.tarena.com.cn/tts8_source=
/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.html#">text=
</a><a class=3D"snippet-window sh_url" href=3D"http://pdf7.tarena.com.cn/tt=
s8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index_answer.ht=
ml#">pop-up</a></pre></div><pre class=3D"code sh_javascript snippet-formatt=
ed sh_sourceCode"><ol class=3D"snippet-num"><li>import java<span class=3D"s=
h_symbol">.</span>util<span class=3D"sh_symbol">.</span>concurrent<span cla=
ss=3D"sh_symbol">.</span>ArrayBlockingQueue<span class=3D"sh_symbol">;</spa=
n></li><li>import java<span class=3D"sh_symbol">.</span>util<span class=3D"=
sh_symbol">.</span>concurrent<span class=3D"sh_symbol">.</span>BlockingQueu=
e<span class=3D"sh_symbol">;</span></li><li><span style=3D"display:none;">&=
nbsp;</span></li><li><span class=3D"sh_keyword">public</span> <span class=
=3D"sh_keyword">class</span> Setup <span class=3D"sh_cbracket">{</span></li=
><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">public</span> <span=
 class=3D"sh_keyword">static</span> void <span class=3D"sh_function">main</=
span><span class=3D"sh_symbol">(</span><span class=3D"sh_predef_func">Strin=
g</span><span class=3D"sh_symbol">[]</span> args<span class=3D"sh_symbol">)=
</span> <span class=3D"sh_cbracket">{</span></li><li>&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;BlockingQueue<span class=3D"sh_symbol">&lt;</span=
><span class=3D"sh_predef_func">Object</span><span class=3D"sh_symbol">&gt;=
</span> q <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyword">n=
ew</span> ArrayBlockingQueue<span class=3D"sh_symbol">&lt;</span><span clas=
s=3D"sh_predef_func">Object</span><span class=3D"sh_symbol">&gt;(</span><sp=
an class=3D"sh_number">10</span><span class=3D"sh_symbol">);</span></li><li=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Donwload p <span class=3D"=
sh_symbol">=3D</span> <span class=3D"sh_keyword">new</span> <span class=3D"=
sh_function">Donwload</span><span class=3D"sh_symbol">(</span>q<span class=
=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;Player c1 <span class=3D"sh_symbol">=3D</span> <span class=3D"sh_keyw=
ord">new</span> <span class=3D"sh_function">Player</span><span class=3D"sh_=
symbol">(</span>q<span class=3D"sh_symbol">);</span></li><li>&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Player c2 <span class=3D"sh_symbol">=3D</=
span> <span class=3D"sh_keyword">new</span> <span class=3D"sh_function">Pla=
yer</span><span class=3D"sh_symbol">(</span>q<span class=3D"sh_symbol">);</=
span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_keyword">new</span> <span class=3D"sh_function">Thread</span><span c=
lass=3D"sh_symbol">(</span>p<span class=3D"sh_symbol">).</span><span class=
=3D"sh_function">start</span><span class=3D"sh_symbol">();</span></li><li>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">n=
ew</span> <span class=3D"sh_function">Thread</span><span class=3D"sh_symbol=
">(</span>c1<span class=3D"sh_symbol">).</span><span class=3D"sh_function">=
start</span><span class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"sh_keyword">new</span> <span c=
lass=3D"sh_function">Thread</span><span class=3D"sh_symbol">(</span>c2<span=
 class=3D"sh_symbol">).</span><span class=3D"sh_function">start</span><span=
 class=3D"sh_symbol">();</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span class=
=3D"sh_cbracket">}</span></li><li><span class=3D"sh_cbracket">}</span></li>=
</ol></pre><pre class=3D"snippet-textonly sh_sourceCode" style=3D"display:n=
one;">import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class Setup {
	public static void main(String[] args) {
		BlockingQueue&lt;Object&gt; q =3D new ArrayBlockingQueue&lt;Object&gt;(10=
);
		Donwload p =3D new Donwload(q);
		Player c1 =3D new Player(q);
		Player c2 =3D new Player(q);
		new Thread(p).start();
		new Thread(c1).start();
		new Thread(c2).start();
	}
}
</pre></div></div>=20
    <p>=E4=BB=8E=E4=B8=8A=E8=BF=B0=E4=BB=A3=E7=A0=81=E4=B8=AD=EF=BC=8C=E5=
=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=E6=9C=89=E4=B8=80=E4=B8=AA=E7=BA=BF=E7=A8=
=8B=E8=B4=9F=E8=B4=A3=E4=B8=8B=E8=BD=BD=EF=BC=8C=E4=B8=A4=E4=B8=AA=E7=BA=BF=
=E7=A8=8B=E8=B4=9F=E8=B4=A3=E6=92=AD=E6=94=BE=E3=80=82</p>=20
    <p class=3D"number">=E6=AD=A5=E9=AA=A4=E5=9B=9B=EF=BC=9A=E8=BF=90=E8=A1=
=8C</p>=20
    <p>=E8=BF=90=E8=A1=8C=E4=B8=8A=E8=BF=B0=E4=BB=A3=E7=A0=81=EF=BC=8C=E7=
=94=B1=E4=BA=8E=E7=A8=8B=E5=BA=8F=E5=9C=A8=E4=B8=8D=E6=96=AD=E7=9A=84=E8=BF=
=90=E8=A1=8C=EF=BC=8C=E6=89=80=E4=BB=A5=E5=9B=BE-3=E6=98=AF=E6=88=AA=E5=8F=
=96=E6=8E=A7=E5=88=B6=E5=8F=B0=E7=9A=84=E9=83=A8=E5=88=86=E6=95=B0=E6=8D=AE=
=E3=80=82</p>=20
    <div class=3D"image">=20
     <img src=3D"http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V=
06/JAVASE02/DAY05/EXERCISE/01/index.files/image003.png">=20
     <p>=E5=9B=BE-3</p>=20
    </div>=20
    <p>=E4=BB=8E=E5=9B=BE-3=E7=9A=84=E8=BE=93=E5=87=BA=E7=BB=93=E6=9E=9C=E5=
=8F=AF=E4=BB=A5=E7=9C=8B=E5=87=BA=EF=BC=8C=E5=8F=AA=E6=9C=89=E4=B8=8B=E8=BD=
=BD=E6=95=B0=E6=8D=AE=E5=AE=8C=E6=88=90=E5=90=8E=E8=AF=A5=E6=95=B0=E6=8D=AE=
=E6=89=8D=E8=83=BD=E6=92=AD=E6=94=BE=EF=BC=8C=E8=BF=99=E6=98=AF=E5=9B=A0=E4=
=B8=BA=EF=BC=8CBlockingQueue=E5=86=85=E9=83=A8=E4=BD=BF=E7=94=A8=E4=B8=A4=
=E6=9D=A1=E9=98=9F=E5=88=97=EF=BC=8C=E5=8F=AF=E5=85=81=E8=AE=B8=E4=B8=A4=E4=
=B8=AA=E7=BA=BF=E7=A8=8B=E5=90=8C=E6=97=B6=E5=90=91=E9=98=9F=E5=88=97=E4=B8=
=80=E4=B8=AA=E5=81=9A=E5=AD=98=E5=82=A8=EF=BC=8C=E4=B8=80=E4=B8=AA=E5=81=9A=
=E5=8F=96=E5=87=BA=E6=93=8D=E4=BD=9C=E3=80=82=E5=A6=82=E6=9E=9CBlockingQueu=
e=E5=AF=B9=E8=B1=A1=E6=98=AF=E7=A9=BA=E7=9A=84=EF=BC=8C=E5=88=99=E4=BB=8EBl=
ockingQueue=E5=AF=B9=E8=B1=A1=E5=8F=96=E6=95=B0=E6=8D=AE=E7=9A=84=E6=93=8D=
=E4=BD=9C=E5=B0=86=E4=BC=9A=E8=A2=AB=E9=98=BB=E5=A1=9E=E8=BF=9B=E5=85=A5=E7=
=AD=89=E5=BE=85=E7=8A=B6=E6=80=81=EF=BC=8C=E7=9B=B4=E5=88=B0BlockingQueue=
=E5=AF=B9=E8=B1=A1=E6=9C=89=E6=95=B0=E6=8D=AE=E8=BF=9B=E5=85=A5=E5=88=99=E8=
=A2=AB=E5=94=A4=E9=86=92=E3=80=82=E5=90=8C=E6=A0=B7=EF=BC=8C=E5=A6=82=E6=9E=
=9CBlockingQueue=E5=AF=B9=E8=B1=A1=E6=98=AF=E6=BB=A1=E7=9A=84,=E4=BB=BB=E4=
=BD=95=E8=AF=95=E5=9B=BE=E5=90=91=E5=85=B6=E5=AD=98=E6=95=B0=E6=8D=AE=E7=9A=
=84=E6=93=8D=E4=BD=9C=E4=B9=9F=E4=BC=9A=E8=A2=AB=E9=98=BB=E5=A1=9E=E8=BF=9B=
=E5=85=A5=E7=AD=89=E5=BE=85=E7=8A=B6=E6=80=81=EF=BC=8C=E7=9B=B4=E5=88=B0Blo=
ckingQueue=E5=AF=B9=E8=B1=A1=E5=86=85=E6=9C=89=E7=A9=BA=E9=97=B4=E5=88=99=
=E4=BC=9A=E8=A2=AB=E5=94=A4=E9=86=92=E7=BB=A7=E7=BB=AD=E6=93=8D=E4=BD=9C=EF=
=BC=8C=E8=BF=99=E6=A0=B7=EF=BC=8CBlockingQueue=E5=AF=B9=E8=B1=A1=E4=BF=9D=
=E8=AF=81=E5=B9=B6=E5=8F=91=E5=AE=89=E5=85=A8=E7=9A=84=E5=90=8C=E6=97=B6=E6=
=8F=90=E9=AB=98=E4=BA=86=E9=98=9F=E5=88=97=E7=9A=84=E5=AD=98=E5=8F=96=E6=95=
=88=E7=8E=87=E3=80=82</p>=20
   </div>=20
  </div> =20
=20
<div id=3D"qb-sougou-search" style=3D"display: none; opacity: 0;"><p>=E6=90=
=9C=E7=B4=A2</p><p class=3D"last-btn">=E5=A4=8D=E5=88=B6</p><iframe src=3D"=
cid:frame-332-2aca16e6-1ee2-4025-a609-2cdcd99c4c11@mhtml.blink"></iframe></=
div></body></html>
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/index.css

@charset "utf-8";

div.source_style_exercise { font-family: =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=
=91, "Times New Roman"; font-size: 14px; min-width: 400px; padding: 10px 20=
px; color: rgb(0, 0, 0); }

div.source_style_exercise div.wordSection { width: 95%; padding: 5px; margi=
n: 5px; }

div.source_style_exercise h3 { clear: both; font-size: 18px; font-weight: b=
old; margin: 20px 0px; text-indent: 0px; }

div.source_style_exercise h4 { font-size: 16px; font-weight: bold; margin: =
10px 0px 5px 3px; text-indent: 21pt; color: purple; }

div.source_style_exercise p { margin: 3px; padding: 2px 2px 2px 30px; text-=
indent: 21pt; font-size: 14px; line-height: 25px; }

div.source_style_exercise p.answerTitle { clear: both; font-weight: bold; p=
adding: 10px 0px; font-size: 16px; }

div.source_style_exercise div.image { text-align: center; padding: 5px 0px;=
 }

div.source_style_exercise div.image img { max-width: 900px; }

div.source_style_exercise div.image > p { text-align: center; margin: 5px; =
padding: 3px; font-size: 12px; }

div.source_style_exercise div.table { text-align: center; padding: 5px 0px;=
 }

div.source_style_exercise div.table img { max-width: 900px; }

div.source_style_exercise div.table > p { text-align: center; margin: 5px; =
padding: 3px; font-size: 12px; }

div.source_style_exercise p.code, div.source_style_exercise pre { font-size=
: 14px; margin-left: 60px; }

div.source_style_exercise .code_level1 { text-indent: 21pt; }

div.source_style_exercise .code_level2 { text-indent: 42pt; }

div.source_style_exercise .code_level3 { text-indent: 63pt; }

div.source_style_exercise .code_level4 { text-indent: 84pt; }

div.source_style_exercise ul.list, div.source_style_exercise ol.list { marg=
in-left: 30px; }

div.source_style_exercise ol.list { padding-left: 45px; }

div.source_style_exercise ul.list li { padding-left: 10px; }

div.source_style_exercise ol.list li { padding-left: 5px; }

div.source_style_exercise p.emphasiz { font-weight: bold; font-style: itali=
c; }

div.source_style_exercise p.number { font-weight: bold; margin-top: 8px; ma=
rgin-bottom: 8px; }

div.source_style_exercise ul.index { margin: 0px 0px 20px 40px; font-size: =
12px; }

div.source_style_exercise ul.index li { padding: 0px; margin: 3px 50px 10px=
 0px; list-style-image: url("ph.gif"); list-style-type: none; }

div.source_style_exercise ul.index li a, div.source_style_exercise ul.index=
 li a:visited { color: blue; text-decoration: underline; }

div.source_style_exercise ul.index li a:hover { color: purple; }

div.source_style_exercise .highlighter { border: 2px solid rgb(221, 221, 22=
1); padding: 5px; background: rgb(238, 238, 238); }

div.source_style_exercise .command_help { display: none; }
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/jquery.snippet.css

@charset "utf-8";

a.snippet-toggle { margin-right: 40px; }

.bold_code { font-weight: bold; font-size: 11pt; color: blue !important; }

.bold_code > span { font-family: =CE=A2=EF=BF=BD=EF=BF=BD=EF=BF=BD=C5=BA=EF=
=BF=BD; font-weight: bold; font-size: 11pt; color: blue !important; }

.sh_acid { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_acid .sh_sourceCode { background-color: rgb(238, 238, 238); color: rgb(=
0, 0, 0); font-weight: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_keyword { color: rgb(187, 121, 119); font-weigh=
t: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_type { color: rgb(128, 128, 192); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_string { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_regexp { color: rgb(166, 133, 0); font-weight: =
normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_comment { color: rgb(255, 128, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_number { color: rgb(128, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_preproc { color: rgb(0, 128, 192); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_symbol { color: rgb(255, 0, 128); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_function { color: rgb(0, 68, 102); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_url { color: rgb(166, 133, 0); font-weight: nor=
mal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_date { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_time { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_file { color: rgb(187, 121, 119); font-weight: =
bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_ip { color: rgb(166, 133, 0); font-weight: norm=
al; font-style: normal; }

.sh_acid .sh_sourceCode .sh_name { color: rgb(166, 133, 0); font-weight: no=
rmal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_variable { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weight:=
 bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_newfile { color: rgb(166, 133, 0); font-weight:=
 normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_difflines { color: rgb(187, 121, 119); font-wei=
ght: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_selector { color: rgb(0, 128, 192); font-weight=
: normal; font-style: normal; }

.sh_acid .sh_sourceCode .sh_property { color: rgb(187, 121, 119); font-weig=
ht: bold; font-style: normal; }

.sh_acid .sh_sourceCode .sh_value { color: rgb(166, 133, 0); font-weight: n=
ormal; font-style: normal; }

.sh_berries-dark { background: none; padding: 0px; margin: 0px; border: 0px=
 none; }

.sh_berries-dark .sh_sourceCode { background-color: rgb(128, 191, 255); col=
or: rgb(64, 0, 128); font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_keyword { color: rgb(63, 43, 240); font=
-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_type { color: rgb(63, 43, 240); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_string { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_regexp { color: rgb(196, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_specialchar { color: rgb(119, 55, 154);=
 font-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_comment { color: rgb(223, 9, 89); font-=
weight: normal; font-style: italic; }

.sh_berries-dark .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font-=
weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_function { color: rgb(144, 17, 100); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-we=
ight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_url { color: rgb(196, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_date { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_time { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_file { color: rgb(63, 43, 240); font-we=
ight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_ip { color: rgb(196, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_name { color: rgb(196, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_variable { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_oldfile { color: rgb(119, 55, 154); fon=
t-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_newfile { color: rgb(196, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_difflines { color: rgb(63, 43, 240); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_selector { color: rgb(169, 30, 167); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_property { color: rgb(63, 43, 240); fon=
t-weight: bold; font-style: normal; }

.sh_berries-dark .sh_sourceCode .sh_value { color: rgb(196, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_berries-light { background: none; padding: 0px; margin: 0px; border: 0p=
x none; }

.sh_berries-light .sh_sourceCode { background-color: rgb(215, 255, 255); co=
lor: rgb(71, 64, 109); font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_keyword { color: rgb(44, 174, 30); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_type { color: rgb(139, 81, 192); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_string { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_regexp { color: rgb(95, 129, 179); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_specialchar { color: rgb(95, 129, 179)=
; font-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_comment { color: rgb(156, 60, 175); fo=
nt-weight: normal; font-style: italic; }

.sh_berries-light .sh_sourceCode .sh_number { color: rgb(32, 117, 90); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_preproc { color: rgb(6, 40, 203); font=
-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_symbol { color: rgb(210, 7, 59); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_function { color: rgb(144, 17, 100); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_cbracket { color: rgb(210, 7, 59); fon=
t-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_url { color: rgb(95, 129, 179); font-w=
eight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_date { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_time { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_file { color: rgb(44, 174, 30); font-w=
eight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_ip { color: rgb(95, 129, 179); font-we=
ight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_name { color: rgb(95, 129, 179); font-=
weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_variable { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_oldfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_newfile { color: rgb(95, 129, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_difflines { color: rgb(44, 174, 30); f=
ont-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_selector { color: rgb(6, 40, 203); fon=
t-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_property { color: rgb(44, 174, 30); fo=
nt-weight: bold; font-style: normal; }

.sh_berries-light .sh_sourceCode .sh_value { color: rgb(95, 129, 179); font=
-weight: normal; font-style: normal; }

.sh_bipolar { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_bipolar .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(209=
, 73, 166); font-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_keyword { color: rgb(238, 133, 226); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_type { color: rgb(170, 221, 139); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_string { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_regexp { color: rgb(158, 244, 87); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_specialchar { color: rgb(158, 244, 87); font=
-weight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_comment { color: rgb(53, 214, 229); font-wei=
ght: normal; font-style: italic; }

.sh_bipolar .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_preproc { color: rgb(7, 246, 191); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_symbol { color: rgb(52, 143, 239); font-weig=
ht: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_function { color: rgb(213, 25, 147); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_cbracket { color: rgb(52, 143, 239); font-we=
ight: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_url { color: rgb(158, 244, 87); font-weight:=
 normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_date { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_time { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_file { color: rgb(238, 133, 226); font-weigh=
t: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_ip { color: rgb(158, 244, 87); font-weight: =
normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_name { color: rgb(158, 244, 87); font-weight=
: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_variable { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_oldfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_newfile { color: rgb(158, 244, 87); font-wei=
ght: normal; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_difflines { color: rgb(238, 133, 226); font-=
weight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_selector { color: rgb(114, 212, 44); font-we=
ight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_property { color: rgb(238, 133, 226); font-w=
eight: bold; font-style: normal; }

.sh_bipolar .sh_sourceCode .sh_value { color: rgb(158, 244, 87); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_blacknblue .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(=
35, 70, 213); font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_keyword { color: rgb(30, 222, 220); font-=
weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_type { color: rgb(192, 108, 248); font-we=
ight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_string { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_regexp { color: rgb(207, 198, 49); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_specialchar { color: rgb(204, 198, 198); =
font-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_comment { color: rgb(111, 178, 196); font=
-weight: normal; font-style: italic; }

.sh_blacknblue .sh_sourceCode .sh_number { color: rgb(196, 172, 96); font-w=
eight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_preproc { color: rgb(128, 128, 255); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_symbol { color: rgb(204, 198, 198); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_function { color: rgb(28, 150, 237); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_cbracket { color: rgb(204, 198, 198); fon=
t-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_url { color: rgb(207, 198, 49); font-weig=
ht: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_date { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_time { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_file { color: rgb(30, 222, 220); font-wei=
ght: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_ip { color: rgb(207, 198, 49); font-weigh=
t: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_name { color: rgb(207, 198, 49); font-wei=
ght: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_variable { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_oldfile { color: rgb(204, 198, 198); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_newfile { color: rgb(207, 198, 49); font-=
weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_difflines { color: rgb(30, 222, 220); fon=
t-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_selector { color: rgb(236, 234, 38); font=
-weight: normal; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_property { color: rgb(30, 222, 220); font=
-weight: bold; font-style: normal; }

.sh_blacknblue .sh_sourceCode .sh_value { color: rgb(207, 198, 49); font-we=
ight: normal; font-style: normal; }

.sh_bright { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_bright .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(64, 30, 122); font-weight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_keyword { color: rgb(255, 48, 48); font-weigh=
t: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_type { color: rgb(247, 185, 44); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_string { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_regexp { color: rgb(24, 97, 167); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_specialchar { color: rgb(24, 97, 167); font-w=
eight: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_comment { color: rgb(56, 173, 36); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_number { color: rgb(50, 186, 6); font-weight:=
 normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_preproc { color: rgb(83, 116, 176); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_symbol { color: rgb(48, 48, 238); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_function { color: rgb(209, 28, 237); font-wei=
ght: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_cbracket { color: rgb(48, 48, 238); font-weig=
ht: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_url { color: rgb(24, 97, 167); font-weight: n=
ormal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_date { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_time { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_file { color: rgb(255, 48, 48); font-weight: =
bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_ip { color: rgb(24, 97, 167); font-weight: no=
rmal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_name { color: rgb(24, 97, 167); font-weight: =
normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_oldfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_newfile { color: rgb(24, 97, 167); font-weigh=
t: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_difflines { color: rgb(255, 48, 48); font-wei=
ght: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_bright .sh_sourceCode .sh_property { color: rgb(255, 48, 48); font-weig=
ht: bold; font-style: normal; }

.sh_bright .sh_sourceCode .sh_value { color: rgb(24, 97, 167); font-weight:=
 normal; font-style: normal; }

.sh_contrast { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_contrast .sh_sourceCode { background-color: rgb(237, 97, 4); color: rgb=
(0, 0, 255); font-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_string { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_regexp { color: rgb(17, 248, 12); font-weig=
ht: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_specialchar { color: rgb(17, 248, 12); font=
-weight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_number { color: rgb(151, 26, 216); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_preproc { color: rgb(123, 68, 224); font-we=
ight: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_symbol { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_function { color: rgb(255, 247, 0); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_cbracket { color: rgb(222, 222, 222); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_url { color: rgb(17, 248, 12); font-weight:=
 normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_ip { color: rgb(17, 248, 12); font-weight: =
normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_name { color: rgb(17, 248, 12); font-weight=
: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_variable { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_oldfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_newfile { color: rgb(17, 248, 12); font-wei=
ght: normal; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font=
-weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_selector { color: rgb(17, 248, 12); font-we=
ight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_contrast .sh_sourceCode .sh_value { color: rgb(17, 248, 12); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkblue .sh_sourceCode { background-color: rgb(0, 0, 64); color: rgb(1=
99, 199, 199); font-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_keyword { color: rgb(255, 255, 96); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_type { color: rgb(96, 255, 96); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_string { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_regexp { color: rgb(255, 160, 160); font-we=
ight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_specialchar { color: rgb(255, 165, 0); font=
-weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_comment { color: rgb(128, 160, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_number { color: rgb(66, 202, 217); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_preproc { color: rgb(255, 128, 255); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_symbol { color: rgb(216, 233, 27); font-wei=
ght: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_cbracket { color: rgb(216, 233, 27); font-w=
eight: bold; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_url { color: rgb(255, 160, 160); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_date { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_time { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_file { color: rgb(255, 255, 96); font-weigh=
t: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_ip { color: rgb(255, 160, 160); font-weight=
: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_name { color: rgb(255, 160, 160); font-weig=
ht: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_oldfile { color: rgb(255, 165, 0); font-wei=
ght: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_newfile { color: rgb(255, 160, 160); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_difflines { color: rgb(255, 255, 96); font-=
weight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_property { color: rgb(255, 255, 96); font-w=
eight: normal; font-style: normal; }

.sh_darkblue .sh_sourceCode .sh_value { color: rgb(255, 160, 160); font-wei=
ght: normal; font-style: normal; }

.sh_darkness { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_darkness .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_keyword { color: rgb(255, 255, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_string { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_regexp { color: rgb(171, 171, 0); font-weig=
ht: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_specialchar { color: rgb(191, 191, 191); fo=
nt-weight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_darkness .sh_sourceCode .sh_number { color: rgb(97, 157, 231); font-wei=
ght: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_preproc { color: rgb(29, 163, 207); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_symbol { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_function { color: rgb(243, 70, 39); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_url { color: rgb(171, 171, 0); font-weight:=
 bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_date { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_time { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_file { color: rgb(255, 255, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_ip { color: rgb(171, 171, 0); font-weight: =
bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_name { color: rgb(171, 171, 0); font-weight=
: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_variable { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_oldfile { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_newfile { color: rgb(171, 171, 0); font-wei=
ght: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_difflines { color: rgb(255, 255, 0); font-w=
eight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_selector { color: rgb(38, 224, 231); font-w=
eight: normal; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_property { color: rgb(255, 255, 0); font-we=
ight: bold; font-style: normal; }

.sh_darkness .sh_sourceCode .sh_value { color: rgb(171, 171, 0); font-weigh=
t: bold; font-style: normal; }

.sh_desert { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_desert .sh_sourceCode { background-color: rgb(175, 148, 126); color: rg=
b(255, 253, 236); font-weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_keyword { color: rgb(254, 248, 188); font-wei=
ght: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_type { color: rgb(254, 248, 188); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_string { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_regexp { color: rgb(246, 246, 71); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_specialchar { color: rgb(246, 246, 71); font-=
weight: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_comment { color: rgb(160, 0, 0); font-weight:=
 normal; font-style: italic; }

.sh_desert .sh_sourceCode .sh_number { color: rgb(62, 63, 37); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_preproc { color: rgb(131, 57, 20); font-weigh=
t: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_symbol { color: rgb(102, 87, 79); font-weight=
: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_function { color: rgb(243, 210, 102); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_cbracket { color: rgb(102, 87, 79); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_url { color: rgb(246, 246, 71); font-weight: =
normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_date { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_time { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_file { color: rgb(254, 248, 188); font-weight=
: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_ip { color: rgb(246, 246, 71); font-weight: n=
ormal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_name { color: rgb(246, 246, 71); font-weight:=
 normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_oldfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_newfile { color: rgb(246, 246, 71); font-weig=
ht: normal; font-style: normal; }

.sh_desert .sh_sourceCode .sh_difflines { color: rgb(254, 248, 188); font-w=
eight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_property { color: rgb(254, 248, 188); font-we=
ight: bold; font-style: normal; }

.sh_desert .sh_sourceCode .sh_value { color: rgb(246, 246, 71); font-weight=
: normal; font-style: normal; }

.sh_dull { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_dull .sh_sourceCode { background-color: rgb(191, 191, 191); color: rgb(=
101, 101, 101); font-weight: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_keyword { color: rgb(53, 53, 53); font-weight: =
bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_type { color: rgb(50, 65, 198); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_string { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_regexp { color: rgb(0, 85, 153); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_specialchar { color: rgb(0, 85, 153); font-weig=
ht: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_comment { color: rgb(209, 29, 32); font-weight:=
 normal; font-style: italic; }

.sh_dull .sh_sourceCode .sh_number { color: rgb(22, 147, 13); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_preproc { color: rgb(0, 0, 51); font-weight: no=
rmal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_symbol { color: rgb(34, 34, 34); font-weight: n=
ormal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_function { color: rgb(56, 37, 92); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_cbracket { color: rgb(34, 34, 34); font-weight:=
 normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_url { color: rgb(0, 85, 153); font-weight: norm=
al; font-style: normal; }

.sh_dull .sh_sourceCode .sh_date { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_time { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_file { color: rgb(53, 53, 53); font-weight: bol=
d; font-style: normal; }

.sh_dull .sh_sourceCode .sh_ip { color: rgb(0, 85, 153); font-weight: norma=
l; font-style: normal; }

.sh_dull .sh_sourceCode .sh_name { color: rgb(0, 85, 153); font-weight: nor=
mal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_variable { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_oldfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_newfile { color: rgb(0, 85, 153); font-weight: =
normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_difflines { color: rgb(53, 53, 53); font-weight=
: bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_selector { color: rgb(174, 90, 22); font-weight=
: normal; font-style: normal; }

.sh_dull .sh_sourceCode .sh_property { color: rgb(53, 53, 53); font-weight:=
 bold; font-style: normal; }

.sh_dull .sh_sourceCode .sh_value { color: rgb(0, 85, 153); font-weight: no=
rmal; font-style: normal; }

.sh_easter { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_easter .sh_sourceCode { background-color: rgb(255, 255, 128); color: rg=
b(44, 123, 52); font-weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_keyword { color: rgb(29, 69, 214); font-weigh=
t: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_type { color: rgb(237, 15, 85); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_string { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_regexp { color: rgb(202, 75, 227); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_specialchar { color: rgb(202, 75, 227); font-=
weight: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_comment { color: rgb(36, 200, 21); font-weigh=
t: normal; font-style: italic; }

.sh_easter .sh_sourceCode .sh_number { color: rgb(225, 26, 112); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_preproc { color: rgb(21, 131, 177); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_symbol { color: rgb(250, 71, 0); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_function { color: rgb(29, 69, 214); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_cbracket { color: rgb(250, 71, 0); font-weigh=
t: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_url { color: rgb(202, 75, 227); font-weight: =
normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_date { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_time { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_file { color: rgb(29, 69, 214); font-weight: =
bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_ip { color: rgb(202, 75, 227); font-weight: n=
ormal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_name { color: rgb(202, 75, 227); font-weight:=
 normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_variable { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_oldfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_newfile { color: rgb(202, 75, 227); font-weig=
ht: normal; font-style: normal; }

.sh_easter .sh_sourceCode .sh_difflines { color: rgb(29, 69, 214); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_selector { color: rgb(38, 170, 231); font-wei=
ght: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_property { color: rgb(29, 69, 214); font-weig=
ht: bold; font-style: normal; }

.sh_easter .sh_sourceCode .sh_value { color: rgb(202, 75, 227); font-weight=
: normal; font-style: normal; }

.sh_emacs { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_emacs .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_keyword { color: rgb(156, 32, 238); font-weigh=
t: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_type { color: rgb(32, 137, 32); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_string { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_regexp { color: rgb(189, 141, 139); font-weigh=
t: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_specialchar { color: rgb(189, 141, 139); font-=
weight: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_comment { color: rgb(172, 32, 32); font-weight=
: normal; font-style: italic; }

.sh_emacs .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_url { color: rgb(189, 141, 139); font-weight: =
normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_date { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_time { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_file { color: rgb(156, 32, 238); font-weight: =
bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_ip { color: rgb(189, 141, 139); font-weight: n=
ormal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_name { color: rgb(189, 141, 139); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_oldfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_newfile { color: rgb(189, 141, 139); font-weig=
ht: normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_difflines { color: rgb(156, 32, 238); font-wei=
ght: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_property { color: rgb(156, 32, 238); font-weig=
ht: bold; font-style: normal; }

.sh_emacs .sh_sourceCode .sh_value { color: rgb(189, 141, 139); font-weight=
: normal; font-style: normal; }

.sh_golden { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_golden .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(221,=
 187, 0); font-weight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_keyword { color: rgb(255, 237, 138); font-wei=
ght: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_type { color: rgb(255, 237, 138); font-weight=
: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_comment { color: rgb(151, 131, 69); font-weig=
ht: normal; font-style: italic; }

.sh_golden .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_preproc { color: rgb(255, 221, 170); font-wei=
ght: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_symbol { color: rgb(171, 171, 171); font-weig=
ht: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_function { color: rgb(221, 187, 0); font-weig=
ht: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_cbracket { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_date { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_time { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_file { color: rgb(255, 237, 138); font-weight=
: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_golden .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_variable { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_golden .sh_sourceCode .sh_difflines { color: rgb(255, 237, 138); font-w=
eight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_selector { color: rgb(222, 222, 222); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_property { color: rgb(255, 237, 138); font-we=
ight: bold; font-style: normal; }

.sh_golden .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_greenlcd { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_greenlcd .sh_sourceCode { background-color: rgb(0, 52, 0); color: rgb(0=
, 187, 0); font-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_keyword { color: rgb(0, 237, 0); font-weigh=
t: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_type { color: rgb(0, 237, 0); font-weight: =
normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_string { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_regexp { color: rgb(223, 223, 223); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_specialchar { color: rgb(223, 223, 223); fo=
nt-weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_comment { color: rgb(136, 136, 136); font-w=
eight: normal; font-style: italic; }

.sh_greenlcd .sh_sourceCode .sh_number { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_symbol { color: rgb(47, 231, 169); font-wei=
ght: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_function { color: rgb(192, 255, 115); font-=
weight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_cbracket { color: rgb(47, 231, 169); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_url { color: rgb(223, 223, 223); font-weigh=
t: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_date { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_time { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_file { color: rgb(0, 237, 0); font-weight: =
bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_ip { color: rgb(223, 223, 223); font-weight=
: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_name { color: rgb(223, 223, 223); font-weig=
ht: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_variable { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_oldfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_newfile { color: rgb(223, 223, 223); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_difflines { color: rgb(0, 237, 0); font-wei=
ght: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_selector { color: rgb(190, 239, 19); font-w=
eight: normal; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_property { color: rgb(0, 237, 0); font-weig=
ht: bold; font-style: normal; }

.sh_greenlcd .sh_sourceCode .sh_value { color: rgb(223, 223, 223); font-wei=
ght: normal; font-style: normal; }

.sh_ide-anjuta { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-anjuta .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_keyword { color: rgb(0, 0, 128); font-wei=
ght: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_type { color: rgb(0, 0, 128); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_string { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_regexp { color: rgb(221, 187, 0); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_specialchar { color: rgb(221, 187, 0); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-anjuta .sh_sourceCode .sh_number { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_preproc { color: rgb(103, 128, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_url { color: rgb(221, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_date { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_time { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_file { color: rgb(0, 0, 128); font-weight=
: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_ip { color: rgb(221, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_name { color: rgb(221, 187, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_oldfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_newfile { color: rgb(221, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_difflines { color: rgb(0, 0, 128); font-w=
eight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_property { color: rgb(0, 0, 128); font-we=
ight: bold; font-style: normal; }

.sh_ide-anjuta .sh_sourceCode .sh_value { color: rgb(221, 187, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-codewarrior { background: none; padding: 0px; margin: 0px; border: =
0px none; }

.sh_ide-codewarrior .sh_sourceCode { background-color: rgb(255, 255, 255); =
color: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_keyword { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_type { color: rgb(76, 115, 166); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_string { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_regexp { color: rgb(102, 102, 102); =
font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_specialchar { color: rgb(102, 102, 1=
02); font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_comment { color: rgb(179, 0, 0); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_preproc { color: rgb(0, 0, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_url { color: rgb(102, 102, 102); fon=
t-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_date { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_time { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_file { color: rgb(0, 0, 179); font-w=
eight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_ip { color: rgb(102, 102, 102); font=
-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_name { color: rgb(102, 102, 102); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_variable { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_oldfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_newfile { color: rgb(102, 102, 102);=
 font-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_difflines { color: rgb(0, 0, 179); f=
ont-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_selector { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_property { color: rgb(0, 0, 179); fo=
nt-weight: normal; font-style: normal; }

.sh_ide-codewarrior .sh_sourceCode .sh_value { color: rgb(102, 102, 102); f=
ont-weight: normal; font-style: normal; }

.sh_ide-devcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-devcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font=
-weight: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_comment { color: rgb(0, 0, 128); font-wei=
ght: normal; font-style: italic; }

.sh_ide-devcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-wei=
ght: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-devcpp .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse { background: none; padding: 0px; margin: 0px; border: 0px =
none; }

.sh_ide-eclipse .sh_sourceCode { background-color: rgb(255, 255, 255); colo=
r: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_keyword { color: rgb(127, 0, 85); font-w=
eight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_type { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_string { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_regexp { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_comment { color: rgb(113, 122, 179); fon=
t-weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_preproc { color: rgb(63, 95, 191); font-=
weight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-wei=
ght: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_url { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_date { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_time { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_file { color: rgb(127, 0, 85); font-weig=
ht: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_ip { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_name { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_variable { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_newfile { color: rgb(0, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_difflines { color: rgb(127, 0, 85); font=
-weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_selector { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_property { color: rgb(127, 0, 85); font-=
weight: bold; font-style: normal; }

.sh_ide-eclipse .sh_sourceCode .sh_value { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_ide-kdev { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_ide-kdev .sh_sourceCode { background-color: rgb(255, 255, 255); color: =
rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_keyword { color: rgb(96, 0, 0); font-weight=
: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_type { color: rgb(96, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-w=
eight: normal; font-style: italic; }

.sh_ide-kdev .sh_sourceCode .sh_number { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_preproc { color: rgb(0, 128, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_date { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_time { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_file { color: rgb(96, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_variable { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_difflines { color: rgb(96, 0, 0); font-weig=
ht: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_selector { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_property { color: rgb(96, 0, 0); font-weigh=
t: bold; font-style: normal; }

.sh_ide-kdev .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_ide-msvcpp { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_ide-msvcpp .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-wei=
ght: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-w=
eight: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_comment { color: rgb(0, 128, 0); font-wei=
ght: normal; font-style: italic; }

.sh_ide-msvcpp .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_preproc { color: rgb(0, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-w=
eight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-we=
ight: bold; font-style: normal; }

.sh_ide-msvcpp .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_kwrite .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_type { color: rgb(131, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-w=
eight: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_comment { color: rgb(131, 129, 131); font-wei=
ght: normal; font-style: italic; }

.sh_kwrite .sh_sourceCode .sh_number { color: rgb(41, 40, 255); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_preproc { color: rgb(0, 130, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_function { color: rgb(1, 1, 129); font-weight=
: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold=
; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_kwrite .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_matlab .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_string { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_regexp { color: rgb(128, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_url { color: rgb(128, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_ip { color: rgb(128, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_name { color: rgb(128, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_newfile { color: rgb(128, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_matlab .sh_sourceCode .sh_value { color: rgb(128, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_navy { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_navy .sh_sourceCode { background-color: rgb(0, 0, 53); color: rgb(0, 13=
9, 255); font-weight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_keyword { color: rgb(248, 197, 11); font-weight=
: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_type { color: rgb(225, 231, 47); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_comment { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: italic; }

.sh_navy .sh_sourceCode .sh_number { color: rgb(248, 127, 244); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_preproc { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_symbol { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_cbracket { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_date { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_time { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_file { color: rgb(248, 197, 11); font-weight: b=
old; font-style: normal; }

.sh_navy .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_variable { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_difflines { color: rgb(248, 197, 11); font-weig=
ht: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_selector { color: rgb(19, 216, 239); font-weigh=
t: normal; font-style: normal; }

.sh_navy .sh_sourceCode .sh_property { color: rgb(248, 197, 11); font-weigh=
t: bold; font-style: normal; }

.sh_navy .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_nedit { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_nedit .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_type { color: rgb(165, 42, 42); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_string { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_regexp { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_specialchar { color: rgb(46, 139, 87); font-we=
ight: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_comment { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: italic; }

.sh_nedit .sh_sourceCode .sh_number { color: rgb(0, 100, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_preproc { color: rgb(39, 64, 139); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_url { color: rgb(0, 100, 0); font-weight: norm=
al; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_nedit .sh_sourceCode .sh_ip { color: rgb(0, 100, 0); font-weight: norma=
l; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_name { color: rgb(0, 100, 0); font-weight: nor=
mal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_variable { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_oldfile { color: rgb(46, 139, 87); font-weight=
: normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_newfile { color: rgb(0, 100, 0); font-weight: =
normal; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_selector { color: rgb(221, 160, 221); font-wei=
ght: bold; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_nedit .sh_sourceCode .sh_value { color: rgb(0, 100, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_neon .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, 2=
55, 255); font-weight: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_keyword { color: rgb(0, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_type { color: rgb(255, 255, 0); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_string { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_regexp { color: rgb(205, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_specialchar { color: rgb(205, 0, 255); font-wei=
ght: normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: n=
ormal; font-style: italic; }

.sh_neon .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_preproc { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_symbol { color: rgb(238, 88, 150); font-weight:=
 bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_cbracket { color: rgb(238, 88, 150); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_url { color: rgb(205, 0, 255); font-weight: nor=
mal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_date { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_time { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_file { color: rgb(0, 255, 255); font-weight: bo=
ld; font-style: normal; }

.sh_neon .sh_sourceCode .sh_ip { color: rgb(205, 0, 255); font-weight: norm=
al; font-style: normal; }

.sh_neon .sh_sourceCode .sh_name { color: rgb(205, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_variable { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_oldfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_newfile { color: rgb(205, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_neon .sh_sourceCode .sh_difflines { color: rgb(0, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_selector { color: rgb(239, 19, 71); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_property { color: rgb(0, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_neon .sh_sourceCode .sh_value { color: rgb(205, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_night .sh_sourceCode { background-color: rgb(0, 0, 68); color: rgb(221,=
 0, 255); font-weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_type { color: rgb(241, 21, 124); font-weight: =
bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_string { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_regexp { color: rgb(255, 255, 255); font-weigh=
t: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_specialchar { color: rgb(130, 214, 109); font-=
weight: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_comment { color: rgb(191, 191, 191); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_number { color: rgb(142, 225, 25); font-weight=
: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_preproc { color: rgb(0, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_symbol { color: rgb(231, 238, 92); font-weight=
: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_function { color: rgb(255, 6, 205); font-weigh=
t: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_cbracket { color: rgb(231, 238, 92); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_url { color: rgb(255, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weight:=
 bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_ip { color: rgb(255, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_night .sh_sourceCode .sh_name { color: rgb(255, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_variable { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_oldfile { color: rgb(130, 214, 109); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_newfile { color: rgb(255, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_night .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_selector { color: rgb(122, 236, 39); font-weig=
ht: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-wei=
ght: bold; font-style: normal; }

.sh_night .sh_sourceCode .sh_value { color: rgb(255, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_pablo .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255, =
255, 255); font-weight: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_keyword { color: rgb(192, 192, 0); font-weight=
: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_type { color: rgb(0, 192, 0); font-weight: bol=
d; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_string { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_regexp { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_comment { color: rgb(128, 128, 128); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_number { color: rgb(0, 255, 255); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_preproc { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_function { color: rgb(255, 34, 185); font-weig=
ht: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_url { color: rgb(0, 255, 255); font-weight: no=
rmal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_date { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_time { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_file { color: rgb(192, 192, 0); font-weight: b=
old; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_ip { color: rgb(0, 255, 255); font-weight: nor=
mal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_name { color: rgb(0, 255, 255); font-weight: n=
ormal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_variable { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_newfile { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_difflines { color: rgb(192, 192, 0); font-weig=
ht: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_selector { color: rgb(0, 0, 192); font-weight:=
 bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_property { color: rgb(192, 192, 0); font-weigh=
t: bold; font-style: normal; }

.sh_pablo .sh_sourceCode .sh_value { color: rgb(0, 255, 255); font-weight: =
normal; font-style: normal; }

.sh_peachpuff { background: none; padding: 0px; margin: 0px; border: 0px no=
ne; }

.sh_peachpuff .sh_sourceCode { background-color: rgb(255, 218, 185); color:=
 rgb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-we=
ight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_type { color: rgb(46, 139, 87); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_string { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_regexp { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_specialchar { color: rgb(106, 90, 205); fo=
nt-weight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_comment { color: rgb(64, 96, 144); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_number { color: rgb(192, 0, 88); font-weig=
ht: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_preproc { color: rgb(205, 0, 205); font-we=
ight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_function { color: rgb(82, 28, 199); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_url { color: rgb(192, 0, 88); font-weight:=
 normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weigh=
t: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_ip { color: rgb(192, 0, 88); font-weight: =
normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_name { color: rgb(192, 0, 88); font-weight=
: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_variable { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_oldfile { color: rgb(106, 90, 205); font-w=
eight: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_newfile { color: rgb(192, 0, 88); font-wei=
ght: normal; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-=
weight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_selector { color: rgb(39, 95, 236); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-w=
eight: bold; font-style: normal; }

.sh_peachpuff .sh_sourceCode .sh_value { color: rgb(192, 0, 88); font-weigh=
t: normal; font-style: normal; }

.sh_print { background: none; padding: 0px; margin: 0px; border: 0px none; =
}

.sh_print .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb=
(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_keyword { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_type { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_string { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_regexp { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_print .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-weig=
ht: normal; font-style: italic; }

.sh_print .sh_sourceCode .sh_number { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_print .sh_sourceCode .sh_preproc { color: rgb(0, 0, 0); font-weight: bo=
ld; font-style: normal; }

.sh_print .sh_sourceCode .sh_symbol { color: rgb(0, 0, 0); font-weight: bol=
d; font-style: normal; }

.sh_print .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_url { color: rgb(0, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_print .sh_sourceCode .sh_date { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_time { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_file { color: rgb(0, 0, 0); font-weight: bold;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_ip { color: rgb(0, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_print .sh_sourceCode .sh_name { color: rgb(0, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_print .sh_sourceCode .sh_variable { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_newfile { color: rgb(0, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_print .sh_sourceCode .sh_difflines { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_print .sh_sourceCode .sh_selector { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_property { color: rgb(0, 0, 0); font-weight: b=
old; font-style: normal; }

.sh_print .sh_sourceCode .sh_value { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_rand01 { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_rand01 .sh_sourceCode { background-color: rgb(255, 255, 255); color: rg=
b(18, 27, 40); font-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_keyword { color: rgb(10, 127, 109); font-weig=
ht: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_type { color: rgb(196, 38, 56); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_string { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_regexp { color: rgb(43, 131, 186); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_specialchar { color: rgb(167, 100, 203); font=
-weight: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-wei=
ght: normal; font-style: italic; }

.sh_rand01 .sh_sourceCode .sh_number { color: rgb(13, 163, 68); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_preproc { color: rgb(98, 10, 198); font-weigh=
t: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_symbol { color: rgb(0, 0, 222); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: =
bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_cbracket { color: rgb(0, 0, 222); font-weight=
: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_url { color: rgb(43, 131, 186); font-weight: =
normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_date { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_time { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_file { color: rgb(10, 127, 109); font-weight:=
 bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_ip { color: rgb(43, 131, 186); font-weight: n=
ormal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_name { color: rgb(43, 131, 186); font-weight:=
 normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_variable { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_oldfile { color: rgb(167, 100, 203); font-wei=
ght: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_newfile { color: rgb(43, 131, 186); font-weig=
ht: normal; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_difflines { color: rgb(10, 127, 109); font-we=
ight: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_selector { color: rgb(225, 47, 118); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_property { color: rgb(10, 127, 109); font-wei=
ght: bold; font-style: normal; }

.sh_rand01 .sh_sourceCode .sh_value { color: rgb(43, 131, 186); font-weight=
: normal; font-style: normal; }

.sh_the { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_the .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_type { color: rgb(136, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_string { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_regexp { color: rgb(0, 0, 136); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_specialchar { color: rgb(0, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_comment { color: rgb(0, 255, 0); font-weight: no=
rmal; font-style: italic; }

.sh_the .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_preproc { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_the .sh_sourceCode .sh_url { color: rgb(0, 0, 136); font-weight: normal=
; font-style: normal; }

.sh_the .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_ip { color: rgb(0, 0, 136); font-weight: normal;=
 font-style: normal; }

.sh_the .sh_sourceCode .sh_name { color: rgb(0, 0, 136); font-weight: norma=
l; font-style: normal; }

.sh_the .sh_sourceCode .sh_variable { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_oldfile { color: rgb(0, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_the .sh_sourceCode .sh_newfile { color: rgb(0, 0, 136); font-weight: no=
rmal; font-style: normal; }

.sh_the .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_the .sh_sourceCode .sh_selector { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_the .sh_sourceCode .sh_value { color: rgb(0, 0, 136); font-weight: norm=
al; font-style: normal; }

.sh_typical { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_typical .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_keyword { color: rgb(0, 0, 255); font-weight=
: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_specialchar { color: rgb(196, 45, 168); font=
-weight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_comment { color: rgb(102, 102, 102); font-we=
ight: normal; font-style: italic; }

.sh_typical .sh_sourceCode .sh_number { color: rgb(169, 0, 169); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_preproc { color: rgb(0, 184, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_symbol { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_cbracket { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_date { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_time { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_file { color: rgb(0, 0, 255); font-weight: b=
old; font-style: normal; }

.sh_typical .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_variable { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_oldfile { color: rgb(196, 45, 168); font-wei=
ght: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_difflines { color: rgb(0, 0, 255); font-weig=
ht: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_selector { color: rgb(236, 127, 21); font-we=
ight: normal; font-style: normal; }

.sh_typical .sh_sourceCode .sh_property { color: rgb(0, 0, 255); font-weigh=
t: bold; font-style: normal; }

.sh_typical .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vampire { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_vampire .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(255=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_keyword { color: rgb(255, 255, 255); font-we=
ight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_type { color: rgb(243, 94, 30); font-weight:=
 bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_string { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_regexp { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_specialchar { color: rgb(255, 255, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_comment { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: italic; }

.sh_vampire .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_preproc { color: rgb(171, 171, 171); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_symbol { color: rgb(243, 230, 81); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_function { color: rgb(123, 199, 16); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_cbracket { color: rgb(243, 230, 81); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_url { color: rgb(187, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_date { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_time { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_file { color: rgb(255, 255, 255); font-weigh=
t: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_ip { color: rgb(187, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_name { color: rgb(187, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_variable { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_oldfile { color: rgb(255, 255, 255); font-we=
ight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_newfile { color: rgb(187, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_difflines { color: rgb(255, 255, 255); font-=
weight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_selector { color: rgb(255, 255, 255); font-w=
eight: normal; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_property { color: rgb(255, 255, 255); font-w=
eight: bold; font-style: normal; }

.sh_vampire .sh_sourceCode .sh_value { color: rgb(187, 0, 255); font-weight=
: normal; font-style: normal; }

.sh_vim-dark { background: none; padding: 0px; margin: 0px; border: 0px non=
e; }

.sh_vim-dark .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(25=
5, 255, 255); font-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); fon=
t-weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_function { color: rgb(255, 255, 255); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: n=
ormal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: =
normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-we=
ight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weigh=
t: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-=
weight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-w=
eight: normal; font-style: normal; }

.sh_vim-dark .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_vim { background: none; padding: 0px; margin: 0px; border: 0px none; }

.sh_vim .sh_sourceCode { background-color: rgb(255, 255, 255); color: rgb(0=
, 0, 0); font-weight: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_keyword { color: rgb(178, 104, 24); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_type { color: rgb(0, 255, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_string { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_regexp { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_specialchar { color: rgb(255, 34, 255); font-wei=
ght: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_comment { color: rgb(0, 0, 255); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_number { color: rgb(255, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_preproc { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight: nor=
mal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_url { color: rgb(255, 0, 0); font-weight: normal=
; font-style: normal; }

.sh_vim .sh_sourceCode .sh_date { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_time { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_file { color: rgb(178, 104, 24); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_ip { color: rgb(255, 0, 0); font-weight: normal;=
 font-style: normal; }

.sh_vim .sh_sourceCode .sh_name { color: rgb(255, 0, 0); font-weight: norma=
l; font-style: normal; }

.sh_vim .sh_sourceCode .sh_variable { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_oldfile { color: rgb(255, 34, 255); font-weight:=
 normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_newfile { color: rgb(255, 0, 0); font-weight: no=
rmal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_difflines { color: rgb(178, 104, 24); font-weigh=
t: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_selector { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_property { color: rgb(178, 104, 24); font-weight=
: normal; font-style: normal; }

.sh_vim .sh_sourceCode .sh_value { color: rgb(255, 0, 0); font-weight: norm=
al; font-style: normal; }

.sh_whatis { background: none; padding: 0px; margin: 0px; border: 0px none;=
 }

.sh_whatis .sh_sourceCode { background-color: rgb(0, 0, 0); color: rgb(0, 2=
55, 0); font-weight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_keyword { color: rgb(250, 90, 3); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_type { color: rgb(255, 255, 255); font-weight=
: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_string { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_regexp { color: rgb(255, 187, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_specialchar { color: rgb(255, 187, 0); font-w=
eight: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight:=
 normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_number { color: rgb(255, 255, 0); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_preproc { color: rgb(191, 191, 191); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_symbol { color: rgb(0, 255, 255); font-weight=
: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_function { color: rgb(231, 33, 211); font-wei=
ght: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_cbracket { color: rgb(0, 255, 255); font-weig=
ht: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_url { color: rgb(255, 187, 0); font-weight: n=
ormal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_date { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_time { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_file { color: rgb(250, 90, 3); font-weight: b=
old; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_ip { color: rgb(255, 187, 0); font-weight: no=
rmal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_name { color: rgb(255, 187, 0); font-weight: =
normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_variable { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_oldfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_newfile { color: rgb(255, 187, 0); font-weigh=
t: normal; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_difflines { color: rgb(250, 90, 3); font-weig=
ht: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_selector { color: rgb(239, 226, 25); font-wei=
ght: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_property { color: rgb(250, 90, 3); font-weigh=
t: bold; font-style: normal; }

.sh_whatis .sh_sourceCode .sh_value { color: rgb(255, 187, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey { background: none; padding: 0px; margin: 0px; border: 0px n=
one; }

.sh_whitengrey .sh_sourceCode { background-color: rgb(255, 255, 255); color=
: rgb(105, 105, 105); font-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_keyword { color: rgb(105, 105, 105); font=
-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_type { color: rgb(105, 105, 105); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_string { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_regexp { color: rgb(0, 136, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_specialchar { color: rgb(0, 136, 0); font=
-weight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_comment { color: rgb(19, 38, 162); font-w=
eight: normal; font-style: italic; }

.sh_whitengrey .sh_sourceCode .sh_number { color: rgb(187, 0, 255); font-we=
ight: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_preproc { color: rgb(71, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weig=
ht: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_url { color: rgb(0, 136, 0); font-weight:=
 normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_date { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_time { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_file { color: rgb(105, 105, 105); font-we=
ight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_ip { color: rgb(0, 136, 0); font-weight: =
normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_name { color: rgb(0, 136, 0); font-weight=
: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_variable { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_oldfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_newfile { color: rgb(0, 136, 0); font-wei=
ght: normal; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_difflines { color: rgb(105, 105, 105); fo=
nt-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_selector { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_property { color: rgb(105, 105, 105); fon=
t-weight: bold; font-style: normal; }

.sh_whitengrey .sh_sourceCode .sh_value { color: rgb(0, 136, 0); font-weigh=
t: normal; font-style: normal; }

.sh_zellner { background: none; padding: 0px; margin: 0px; border: 0px none=
; }

.sh_zellner .sh_sourceCode { background-color: rgb(255, 255, 255); color: r=
gb(0, 0, 0); font-weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_keyword { color: rgb(165, 42, 42); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_type { color: rgb(0, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_string { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_regexp { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_specialchar { color: rgb(255, 0, 255); font-=
weight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_comment { color: rgb(255, 0, 0); font-weight=
: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_number { color: rgb(255, 0, 255); font-weigh=
t: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_preproc { color: rgb(160, 32, 240); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_function { color: rgb(0, 0, 0); font-weight:=
 bold; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_url { color: rgb(255, 0, 255); font-weight: =
normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_date { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_time { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_file { color: rgb(165, 42, 42); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_ip { color: rgb(255, 0, 255); font-weight: n=
ormal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_name { color: rgb(255, 0, 255); font-weight:=
 normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_variable { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_oldfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_newfile { color: rgb(255, 0, 255); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_difflines { color: rgb(165, 42, 42); font-we=
ight: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_selector { color: rgb(34, 95, 45); font-weig=
ht: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_property { color: rgb(165, 42, 42); font-wei=
ght: normal; font-style: normal; }

.sh_zellner .sh_sourceCode .sh_value { color: rgb(255, 0, 255); font-weight=
: normal; font-style: normal; }

.snippet-wrap { position: relative; }

:first-child + html .snippet-wrap { display: inline-block; }

* html .snippet-wrap { display: inline-block; }

.snippet-reveal { text-decoration: underline; }

.snippet-wrap .snippet-menu, .snippet-wrap .snippet-hide { position: absolu=
te; top: 10px; right: 15px; font-size: 0.9em; z-index: 1; background-color:=
 transparent; }

.snippet-wrap .snippet-hide { top: auto; bottom: 10px; }

:first-child + html .snippet-wrap .snippet-hide { bottom: 25px; }

* html .snippet-wrap .snippet-hide { bottom: 25px; }

.snippet-wrap .snippet-menu pre, .snippet-wrap .snippet-hide pre { backgrou=
nd-color: transparent; margin: 0px; padding: 0px; }

.snippet-wrap .snippet-menu a, .snippet-wrap .snippet-hide a { padding: 0px=
 5px; text-decoration: underline; }

.snippet-wrap pre.sh_sourceCode { padding: 1em; line-height: 1.8em; overflo=
w: auto; position: relative; border-radius: 15px; box-shadow: rgb(0, 0, 0) =
2px 2px 5px; }

.snippet-wrap pre.snippet-textonly { padding: 2em; }

:first-child + html .snippet-wrap pre.snippet-formatted { padding: 2em 1em;=
 }

* html .snippet-wrap pre.snippet-formatted { padding: 2em 1em; }

.snippet-reveal pre.sh_sourceCode { padding: 0.5em 1em; text-align: right; =
}

.snippet-wrap .snippet-num li { padding-left: 1.5em; }

.snippet-wrap .snippet-no-num { list-style: none; padding: 0.6em 1em; margi=
n: 0px; }

.snippet-wrap .snippet-no-num li { list-style: none; padding-left: 0px; }

.snippet-wrap .snippet-num { margin: 1em 0px 1em 1em; padding-left: 3em; }

.snippet-wrap .snippet-num li { list-style: decimal-leading-zero outside no=
ne; }

.snippet-wrap .snippet-no-num li.box { padding: 0px 6px; margin-left: -6px;=
 }

.snippet-wrap .snippet-num li.box { border: 1px solid; list-style-position:=
 inside; margin-left: -3em; padding-left: 6px; }

:first-child + html .snippet-wrap .snippet-num li.box { margin-left: -2.4em=
; }

* html .snippet-wrap .snippet-num li.box { margin-left: -2.4em; }

.snippet-wrap li.box-top { border-width: 1px 1px 0px !important; }

.snippet-wrap li.box-bot { border-width: 0px 1px 1px !important; }

.snippet-wrap li.box-mid { border-width: 0px 1px !important; }

.snippet-wrap .snippet-num li .box-sp { width: 18px; display: inline-block;=
 }

:first-child + html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

* html .snippet-wrap .snippet-num li .box-sp { width: 27px; }

.snippet-wrap .snippet-no-num li.box { border: 1px solid; }

.snippet-wrap .snippet-no-num li .box-sp { display: none; }
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/image001.png

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
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/image002.png

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
fNypmxGN8+o7ov4itt/I3Yc6dt/7CHWc7imHQ0xAgsdUwzs9T/Cwx2QIWpqaTcJtb2uhG0wg0CvT
PkODTNwCmjVEPKcS/UgxzYcMNMmCzLkOR26gyYtvbm414FYck5emEgB96LObK9t5H1n0btbtO4Bf
MMEcuRiJpKIiJBQV43p9gykW0qjq6uIQmVtopO4e6j+YXFVLQMnTKp1Q6pwvaT66knCsEsgIi2p6
ODXVlFp21Zm+Q5L650wKNMosW6D5YTZVoMUJ0sXlVKWpu5DMMkGeUFKO9IZGpBDs8sqiMzKx6dAR
/GLZCrx1LozPD6hjWhXMahub0E+wSXoH6i+oZz4x0Bx9YECzshBza8w+o7/VuR0PzcmkWU/fAk3y
drQbb1Mj07S0tpuuHx7ane7+YdP9Q1Uj3SqmHyIQqa7BPiN9icJ8laK/Z0Lpu3/dGvlGmawpStc8
mboI5Yml7XIkHOkbcoHSsGCBUj20lVP1IDsw1XA07do0q3emT0V5+4aY+QTqmUlSqExoY1MLBvi7
vo4uo+k6hdgI5o5wgbKJY7RIySaWDzt0cqIfvXDi+xkrZ5vez4hGIqKzbXrJbcDsNTph4D2oGT+j
kjFSVzKysW3PftPKdt2u3TgeEYHYrEykFBUgvaoC6qqh8eQSi+l15d1CeG42wksKzdeuw+l5RdDz
ukjPy61I/k6Kqq400rz20/4X6LWpI+yFkgqElar+rJrAkrcmwNWbpstaNi3auI86sCrUsqCmffRF
X3UxuFRTA41Mru4FKsZU3ZxGOzmZk2Pm4+rqjNTw5GxBgVGEIJ2Xh+j8XNMEX/0RU7ldn4S5Rohd
Ky3DyehYvHH0bby2njlz5pTfO3cRZTyvhhvTRzVNPPA/z7HvYGK530Gw7e9Pge/eee8TSdcgwz/R
9dh0YWXj/Yhcv/1IynUvwZ/deLl/4/7t1EL383XWW2m7Sl+s3PvrvUjTdTJAm9GMfttSMXZbSyea
m9pNjlTFZU3tHlxKScXOQ4fxyoYNWLXzdWw/doTeWzjC0q4gqTgfmY21yPW0IZ6QiqmWx1NOWKjF
YokJzTigptl/IS4QgGGEhbZpP+0fV1eL+Po6JDHHmdjYbEZq0Jh56qgbRsidKygldIrM187j1Oen
qt54YRH0qC4Ul+J8YRnOq9NpfiHCuV8k16neS6OdqK9cfFUNEni8ay1tpmHLqcxsvJt+E+du5Znt
GmFEQ21ltDQhu7kBmXU1uFzMa72SajrYr9+71zRRf2nVGhw/fQ4FBK6nW+NkAvrCQbenzwwE7Rif
4M92RjO615qu0wzQZvShSEMgqYHP4OCwKe5WkZmH65u9Xajv7ECD14ObpUU4ERWBdXvewHPrV+O5
jWuw7I1tWH1oH44mxuO9tDRE0+NJpZeU3tSE642NuExvSZ8XUXcArdO2eHpKUfn5CMvOxvnMTJzN
yMKZrBycy8k14zRqKC3VYWkEkoRKwq6mDuey881wWBH5JTDDTRFoZtgygs98ioOgSSytGJGKCeOL
NVRaKWILSxCTX2TmUyqqkd7QjJtNrUji705eScO+8AisP3IYK/fuwoubN+LZtavx2pbN2H38OCJT
U5FRXIwWX4/p5qBvhrV5ug34O1V/QQ9NcJsB2ow+TE3XaQZoM/qQpO9g6TM1PtM02+tv3q8+VRrK
SVBr7fGZ+iIttw8PIL++BtH01I5EhGH13j14bcfreHbdevxq1WoTrti1GzvefgcHz1/Au7FxeC8h
0bR+i76ZgeT8AvPJlZz6BuQ1tyGnpQOZLfSUOH+jkV4ToaPxJa/VOs2rtV4Q0rbr9U1mner1ksur
kEKYXSPYrpVU4EpRGVLyi01T8ksZOYhKz8TFtJs4fOEiDpwNw47jJ7B85x5CS+DaaOa3HTmGN955
BydjopGal4uylha08JlocGp7v6q3EMw0ZFhf/7DxYPVP9RwNDU3m+QV/rjOa0b3XdJ1mgDajD0Xy
zgSzjs4u039qgJ6aGjmowr3N6zXzqrhv9XWjpdtr4Nbe14uO/j4TKkl5aeBbCMXyxmak5xUgMikF
x8+ex75jb2PDzl1Y//obWLdjJ1Zv3Y7lGzfj5dVr8dyyFfj1K6/hZ68uxVNLV+JXK7lu/Wa8svV1
A5vVew5g3f7DWLP3IFbt3m/Wvbb9Dby6baeR5pfxmGpp9+oap9XZ8g1bsWLjNqzctB2rNu8w0vLe
I+8gPC4Zl2/mIC2nAFlF5ahobOO99Jkm67p+qYP3rA6rjXwWbV0+8028dq/6O/YZdXp8RmoYIO9M
0wzQZvRharpOM0Cb0YeiHhp1OiTG8+jtI8TaO00rW83LZqsiWq3B1EdSoeDWO6wPkqjrudNyUvt4
unpMH6z2Dq/x8sgGc0ytFyi93X0m7OjsRlNzK2pqG1FWVYvC6lrzhYmskjJco/emTrtx6TcQk3oV
Fy+n4kJcAs7FJ5hQfXW0Pv7GTVzJvmXgWVxRY45TVduEenpzzW1daCeMVN9lWq/5/C3S6FEp1HrB
yQxOQK9L9YWCllqs+gaGzTq1PjMt0Ljc5e0d8cyG+E+t03RPnk4Cj/AL9kxnNKPflqbrNAO0GX0o
8ni7jNTfcXCYZPNP6vvY2t5mPl+jbiP6/po6otvP2bS10cNpbUV7a5sZs3BY9JPVp0wzb0JF29Qa
13TvICi0XqGW1RjFFHMSlO3ylAgZG3YIkPydQkFTyVbFfl7Cs5u/t10mJHlMTlFpH/SBUwFHMNYH
T20okAq06iOm7cYL5fVqzEXBXPWHGhpM3qo8LkHeFMMSzJq0rC8ESzqH6hr9tzruec5oRr9NTddp
Bmgz+lCk/o6+3h7ThFmh10sPi9I2M8BuN70QQsc031bo7yxs3BX90RUzfRK5TX36tF0D3BpiaJQb
LmubZEZyN30X6RX2EVaUYGm+7iz4uELBRh/JNHV6hK1psuzfbq5V0KFGR60ZlRq6uMGkUMuB6yWB
2PTroSfmo6em0HaLsb+RBDzBT41mdF5dlxT4PGc0o9+mpusU4g9npplpZpqZZqaZ6SM9zQBtZpqZ
ZqaZaWb6WEwzQJuZZqaZaWaamT4W0wzQZqaZaWaamWamj8U0A7SZaWaamWammeljMc0AbWaamWam
mWlm+lhMM0CbmWammWlmmpk+FtMM0GammWlmmplmpo/FNAO0mWlmmplmppnpYzAB/z85qglSH+qU
BAAAAABJRU5ErkJggg==
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://pdf7.tarena.com.cn/tts8_source/ttsPage/JAVA/JSD_N_V06/JAVASE02/DAY05/EXERCISE/01/index.files/image003.png

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
4Wvmacq4PupWt5y+/R8v6eN9CUpLWqMelR5U703mD+xKtKa0eFa//flTqte1t3r3elcv3fP/9GSb
qdqxZrgqPPiSxu7Nc8MuR8w3hPq4WS5uypN0rPeXpq2Teqp96xZqUqOR2nQfoFXHMqwUFdQI8fIv
Ra/Sh63r6blSj+vFdt01anuyMc0xmtPhZf3mR4+rdufe+qh3R1X+zb/qz00m6GDCMY18q5Q6LDRm
5FqClnzYXC9XGKpwJnNmldo/WUPvjt5iCD9aQ1/6pR55ob+2m9+jjNlZ1ae+nqnwjtakGcPktL+b
Ef7pzerV3Pyxdl9l/gyyFL41XAfXzdDIId3U/rWH9d8/aqzlKZFaNaKVyrw03Pwxntf8d95QjYYD
FGb+kA5v3GuWl1PMH/kHavr8H/Xd/2mtlSy1A/p8hvleJi1sodJ1emkde6FfCteACk/pg5XGIzG/
uYPzO+i5n/9aLSccNnMwiF+ueo8+pTYzdxvPfqs6PfpDlak3Q8d57XKMxjd5Rc/XHaIjucc1/Ll8
wj84RpXvb6nFp6K1dUpL/fnB2pp51FztWp7ckXMhRXs3hOng+qkaPrCLWlV8UN/5RUutvXJZJ1b3
VrM3KmtajLl+9iq1ebyGOprvV2L8FFX6fWm1n3FQOVi6a0la1rOW/vLCe9qRmaK5dcuq1NOdtD7Z
fJeSl6v5Q+XUY9VJXTkfqVk3I/yVH6rUyx9o3pFEXQhoyXj/FzMitWL0EI2YuF6x5rO9dHysXqzY
W6uOJhnDiPQ0Q62e+qNea9VZnTvUUZWX6qn39DCdUbIm1f6tHny0vZYnkK10Rts+a64/PVBL047k
71qWvksfvPCU3uo5X5FRs/Xmn8qo19KT5tM3JBGzVK3K/UlPtltsvd+N/Svr4fue0+BNiea+V8yK
4LR2rdii3WvGqXfnFqr0QCn95uVPjfedpNn1ntXvfttYc2PMZx09Xs/88Od6vPtazlLYxM569aH3
tC4TmSH/ffLdyI6yhP/Hx18yjkVd1W7WQTO27dLCD5qp8itjCwi/50BiPQv01k9/qSdea67OvXup
fcMX9Lu771OPDUc0753XVeo+Q2A74/Pe4+Uc5WaeVezG/ir38ggdPptu/xYt4Z/4XE0N4dcdtd0w
hZnbuj3meztZg/t2UqNnH9APSnVWWHaEJneqp4p1ppi/q2SNq/qs6neZqqOG3w6sMd73+gnq372d
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
Tbv21yZ0wYMj9eSDT6vuJ5uUdj7RfEFf173/845WEGTLJ3wyDi4fGauK95fWax1Hat7yRVq4aL6m
jGqt8nf9UX33Zipq4fsq+8ijajPjgE4nxCtsZmeVL/W8eq46pqSkLepQ7ld6pstCxcQlKHbnbL1T
9klVfm+24q8c1sC/NNHH03co5uAovfTLJpqXEKf9n3dWpYeM57chQfGnNuvz1bt0bOEnqvBkadUY
vFbJ6anaPKCq7v9lC626mKvIpd1Vr8IzGrjBfGdTPlerh99S+9FblZSxXM0ee1TVPlygQ9GnlHB0
gz7p0ESvfbDQrHNi9dlblVW78Wc6bP6ecs7s1aBXKqrvutibEr4NQF88o609q+rxx17XR0v36/iJ
Uzq1f41mThuvKVt2aOa7DdXkg5k6mnVVl7JzjLfaVS+/0V9hqemK2TpNnd5ooM/P8efL4oV4ifms
c09oTLV7VKvPUkWdNX9PZuW5f1HeZ/jhnP06dSpeCTsmGSPZTN3nhyvj3Aq1euIRNR+6XsdOJejo
+jGq8ejv9EyHPEln9YflVaUBfxPmJhfSdWrxu/plqUoatP6kcpN26mPzt/XnF0YZYo7XJD6DhuN1
yH4G5rOzf49RZqVgvsuzuuqtUvU1/7QxbDcQfoQ+efNu1R2y0QYss4xHei3nmGa1a6CKFUebT/aE
xlZurq4frVJC9ga9W+ZptR+7W4lmpXz6yBFtnLtE0ZlHFbZzg7Ydy1Tcvjlq9vhdeq3LLB0z38ur
2SnaMesdVa4zQTHGIz6TEqu1w+qr/Cs1NWGfIdbDn+jRP5ZWo7FbdfZcvJZ3raz7f91Oay8ak24c
u2Hd6+rxe55Uq8GTFG4M6KXNPfXb3z2v9+cfUsaZo5rS9HmVeqSHdhrnJDfHrKJjp6uZcTRHLTVG
PHaK3vpNE009EqNjm/rp1QfKqe+KWMUnnNSOcU3127sfU8vpBw1XxuvTt+7RS++N0vyRnfTWi6+p
/4IIxcUnKzU1yXzvIzSl1eN6ueZ7WrAvUWfOpil+53g1er6xJoYlG2ftshI2faKGr5ZXF+NdXzbe
fYbhmozohWpbsY6Grjqu6LAZavlyafVaclKnD69Qt6Y1Vb33QiVeuHxDXOW8+dv94qAtGTDmpKvX
rupydpIiDx3SiUTj5edeNs7CCvWp+4gef7qZxm4+oZyTC9Xp9Qp68pkyeua5iuoz/5jOXbmoqHUj
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
17Lyv6hUSKcVBDgDAAAAAElFTkSuQmCC
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx----
Content-Type: text/html
Content-ID: <frame-332-2aca16e6-1ee2-4025-a609-2cdcd99c4c11@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--ospt1cdEVS1ciBFNUSAW0sPrwXGmUzDbc7ZtiB8Jrx------
